# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - brokeit
  paths:
    include:
    - '*'
    exclude:
    - azure-pipelines-1.yml
    - azure-pipelines-1.yml
    - azure-pipelines-1-exo.yml

pool:
  name: exo

variables:
  solution: 'src/KayMcCormick.Dev/KayMcCormick.Dev.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Debug'
  KmGlobalOutputPath: $(Build.BinariesDirectory)

steps:
- checkout: self
  submodules: true
  persistCredentials: true
  clean: true

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'xx1'
    sourceFolder: 'c:\third-party'
    contents: '**'
    targetFolder: '$(Build.SourcesDirectory)\third-party'
    readyTimeout: '20000'
    failOnEmptySource: true
    
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    msbuildArgs: "/p:KmGlobalOutputPath=$(KmGlobalOutputPath)"
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    createLogFile: true
    logFileVerbosity: 'diagnostic'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    artifact: 'Build Archive'
    publishLocation: 'pipeline'
