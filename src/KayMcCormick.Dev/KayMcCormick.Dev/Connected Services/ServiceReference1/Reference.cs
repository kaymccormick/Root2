//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KayMcCormick.Dev.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppInstanceInfoRequest", Namespace="http://schemas.datacontract.org/2004/07/KayMcCormick.Dev")]
    [System.SerializableAttribute()]
    public partial class AppInstanceInfoRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppInstanceInfoResponse", Namespace="http://schemas.datacontract.org/2004/07/KayMcCormick.Dev")]
    [System.SerializableAttribute()]
    public partial class AppInstanceInfoResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.AppInstanceInfo InfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.AppInstanceInfo Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppInstanceInfo", Namespace="http://schemas.datacontract.org/2004/07/KayMcCormick.Dev")]
    [System.SerializableAttribute()]
    public partial class AppInstanceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.LoggerInfo[] LoggerInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartupTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.LoggerInfo[] LoggerInfos {
            get {
                return this.LoggerInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggerInfosField, value) != true)) {
                    this.LoggerInfosField = value;
                    this.RaisePropertyChanged("LoggerInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartupTime {
            get {
                return this.StartupTimeField;
            }
            set {
                if ((this.StartupTimeField.Equals(value) != true)) {
                    this.StartupTimeField = value;
                    this.RaisePropertyChanged("StartupTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoggerInfo", Namespace="http://schemas.datacontract.org/2004/07/KayMcCormick.Dev")]
    [System.SerializableAttribute()]
    public partial class LoggerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.FileTarget FileTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.FileTarget FileTarget {
            get {
                return this.FileTargetField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTargetField, value) != true)) {
                    this.FileTargetField = value;
                    this.RaisePropertyChanged("FileTarget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetName {
            get {
                return this.TargetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetNameField, value) != true)) {
                    this.TargetNameField = value;
                    this.RaisePropertyChanged("TargetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTarget", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    [System.SerializableAttribute()]
    public partial class FileTarget : KayMcCormick.Dev.ServiceReference1.TargetWithLayoutHeaderAndFooter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ArchiveAboveSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArchiveDateFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.FileArchivePeriod ArchiveEveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.FilePathKind ArchiveFileKindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.Layout ArchiveFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.ArchiveNumberingMode ArchiveNumberingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchiveOldFileOnStartupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ArchiveOldFileOnStartupAboveSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoFlushField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BufferSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CleanupFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConcurrentWriteAttemptDelayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConcurrentWriteAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConcurrentWritesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateDirsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteOldFileOnStartupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DiscardAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableArchiveFileCompressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableFileDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.Encoding EncodingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.Win32FileAttributes FileAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.Layout FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.FilePathKind FileNameKindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForceManagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForceMutexConcurrentWritesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KeepFileOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.LineEndingMode LineEndingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxArchiveDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxArchiveFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NetworkWritesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenFileCacheSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenFileCacheTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenFileFlushTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReplaceFileContentsOnEachWriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WriteBomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WriteFooterOnArchivingOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int maxLogFilenamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ArchiveAboveSize {
            get {
                return this.ArchiveAboveSizeField;
            }
            set {
                if ((this.ArchiveAboveSizeField.Equals(value) != true)) {
                    this.ArchiveAboveSizeField = value;
                    this.RaisePropertyChanged("ArchiveAboveSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArchiveDateFormat {
            get {
                return this.ArchiveDateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveDateFormatField, value) != true)) {
                    this.ArchiveDateFormatField = value;
                    this.RaisePropertyChanged("ArchiveDateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.FileArchivePeriod ArchiveEvery {
            get {
                return this.ArchiveEveryField;
            }
            set {
                if ((this.ArchiveEveryField.Equals(value) != true)) {
                    this.ArchiveEveryField = value;
                    this.RaisePropertyChanged("ArchiveEvery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.FilePathKind ArchiveFileKind {
            get {
                return this.ArchiveFileKindField;
            }
            set {
                if ((this.ArchiveFileKindField.Equals(value) != true)) {
                    this.ArchiveFileKindField = value;
                    this.RaisePropertyChanged("ArchiveFileKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.Layout ArchiveFileName {
            get {
                return this.ArchiveFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveFileNameField, value) != true)) {
                    this.ArchiveFileNameField = value;
                    this.RaisePropertyChanged("ArchiveFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.ArchiveNumberingMode ArchiveNumbering {
            get {
                return this.ArchiveNumberingField;
            }
            set {
                if ((this.ArchiveNumberingField.Equals(value) != true)) {
                    this.ArchiveNumberingField = value;
                    this.RaisePropertyChanged("ArchiveNumbering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArchiveOldFileOnStartup {
            get {
                return this.ArchiveOldFileOnStartupField;
            }
            set {
                if ((this.ArchiveOldFileOnStartupField.Equals(value) != true)) {
                    this.ArchiveOldFileOnStartupField = value;
                    this.RaisePropertyChanged("ArchiveOldFileOnStartup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ArchiveOldFileOnStartupAboveSize {
            get {
                return this.ArchiveOldFileOnStartupAboveSizeField;
            }
            set {
                if ((this.ArchiveOldFileOnStartupAboveSizeField.Equals(value) != true)) {
                    this.ArchiveOldFileOnStartupAboveSizeField = value;
                    this.RaisePropertyChanged("ArchiveOldFileOnStartupAboveSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoFlush {
            get {
                return this.AutoFlushField;
            }
            set {
                if ((this.AutoFlushField.Equals(value) != true)) {
                    this.AutoFlushField = value;
                    this.RaisePropertyChanged("AutoFlush");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BufferSize {
            get {
                return this.BufferSizeField;
            }
            set {
                if ((this.BufferSizeField.Equals(value) != true)) {
                    this.BufferSizeField = value;
                    this.RaisePropertyChanged("BufferSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CleanupFileName {
            get {
                return this.CleanupFileNameField;
            }
            set {
                if ((this.CleanupFileNameField.Equals(value) != true)) {
                    this.CleanupFileNameField = value;
                    this.RaisePropertyChanged("CleanupFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConcurrentWriteAttemptDelay {
            get {
                return this.ConcurrentWriteAttemptDelayField;
            }
            set {
                if ((this.ConcurrentWriteAttemptDelayField.Equals(value) != true)) {
                    this.ConcurrentWriteAttemptDelayField = value;
                    this.RaisePropertyChanged("ConcurrentWriteAttemptDelay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConcurrentWriteAttempts {
            get {
                return this.ConcurrentWriteAttemptsField;
            }
            set {
                if ((this.ConcurrentWriteAttemptsField.Equals(value) != true)) {
                    this.ConcurrentWriteAttemptsField = value;
                    this.RaisePropertyChanged("ConcurrentWriteAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConcurrentWrites {
            get {
                return this.ConcurrentWritesField;
            }
            set {
                if ((this.ConcurrentWritesField.Equals(value) != true)) {
                    this.ConcurrentWritesField = value;
                    this.RaisePropertyChanged("ConcurrentWrites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreateDirs {
            get {
                return this.CreateDirsField;
            }
            set {
                if ((this.CreateDirsField.Equals(value) != true)) {
                    this.CreateDirsField = value;
                    this.RaisePropertyChanged("CreateDirs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteOldFileOnStartup {
            get {
                return this.DeleteOldFileOnStartupField;
            }
            set {
                if ((this.DeleteOldFileOnStartupField.Equals(value) != true)) {
                    this.DeleteOldFileOnStartupField = value;
                    this.RaisePropertyChanged("DeleteOldFileOnStartup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DiscardAll {
            get {
                return this.DiscardAllField;
            }
            set {
                if ((this.DiscardAllField.Equals(value) != true)) {
                    this.DiscardAllField = value;
                    this.RaisePropertyChanged("DiscardAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableArchiveFileCompression {
            get {
                return this.EnableArchiveFileCompressionField;
            }
            set {
                if ((this.EnableArchiveFileCompressionField.Equals(value) != true)) {
                    this.EnableArchiveFileCompressionField = value;
                    this.RaisePropertyChanged("EnableArchiveFileCompression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableFileDelete {
            get {
                return this.EnableFileDeleteField;
            }
            set {
                if ((this.EnableFileDeleteField.Equals(value) != true)) {
                    this.EnableFileDeleteField = value;
                    this.RaisePropertyChanged("EnableFileDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.Encoding Encoding {
            get {
                return this.EncodingField;
            }
            set {
                if ((object.ReferenceEquals(this.EncodingField, value) != true)) {
                    this.EncodingField = value;
                    this.RaisePropertyChanged("Encoding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.Win32FileAttributes FileAttributes {
            get {
                return this.FileAttributesField;
            }
            set {
                if ((this.FileAttributesField.Equals(value) != true)) {
                    this.FileAttributesField = value;
                    this.RaisePropertyChanged("FileAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.Layout FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.FilePathKind FileNameKind {
            get {
                return this.FileNameKindField;
            }
            set {
                if ((this.FileNameKindField.Equals(value) != true)) {
                    this.FileNameKindField = value;
                    this.RaisePropertyChanged("FileNameKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForceManaged {
            get {
                return this.ForceManagedField;
            }
            set {
                if ((this.ForceManagedField.Equals(value) != true)) {
                    this.ForceManagedField = value;
                    this.RaisePropertyChanged("ForceManaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForceMutexConcurrentWrites {
            get {
                return this.ForceMutexConcurrentWritesField;
            }
            set {
                if ((this.ForceMutexConcurrentWritesField.Equals(value) != true)) {
                    this.ForceMutexConcurrentWritesField = value;
                    this.RaisePropertyChanged("ForceMutexConcurrentWrites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KeepFileOpen {
            get {
                return this.KeepFileOpenField;
            }
            set {
                if ((this.KeepFileOpenField.Equals(value) != true)) {
                    this.KeepFileOpenField = value;
                    this.RaisePropertyChanged("KeepFileOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.LineEndingMode LineEnding {
            get {
                return this.LineEndingField;
            }
            set {
                if ((object.ReferenceEquals(this.LineEndingField, value) != true)) {
                    this.LineEndingField = value;
                    this.RaisePropertyChanged("LineEnding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxArchiveDays {
            get {
                return this.MaxArchiveDaysField;
            }
            set {
                if ((this.MaxArchiveDaysField.Equals(value) != true)) {
                    this.MaxArchiveDaysField = value;
                    this.RaisePropertyChanged("MaxArchiveDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxArchiveFiles {
            get {
                return this.MaxArchiveFilesField;
            }
            set {
                if ((this.MaxArchiveFilesField.Equals(value) != true)) {
                    this.MaxArchiveFilesField = value;
                    this.RaisePropertyChanged("MaxArchiveFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NetworkWrites {
            get {
                return this.NetworkWritesField;
            }
            set {
                if ((this.NetworkWritesField.Equals(value) != true)) {
                    this.NetworkWritesField = value;
                    this.RaisePropertyChanged("NetworkWrites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenFileCacheSize {
            get {
                return this.OpenFileCacheSizeField;
            }
            set {
                if ((this.OpenFileCacheSizeField.Equals(value) != true)) {
                    this.OpenFileCacheSizeField = value;
                    this.RaisePropertyChanged("OpenFileCacheSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenFileCacheTimeout {
            get {
                return this.OpenFileCacheTimeoutField;
            }
            set {
                if ((this.OpenFileCacheTimeoutField.Equals(value) != true)) {
                    this.OpenFileCacheTimeoutField = value;
                    this.RaisePropertyChanged("OpenFileCacheTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenFileFlushTimeout {
            get {
                return this.OpenFileFlushTimeoutField;
            }
            set {
                if ((this.OpenFileFlushTimeoutField.Equals(value) != true)) {
                    this.OpenFileFlushTimeoutField = value;
                    this.RaisePropertyChanged("OpenFileFlushTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReplaceFileContentsOnEachWrite {
            get {
                return this.ReplaceFileContentsOnEachWriteField;
            }
            set {
                if ((this.ReplaceFileContentsOnEachWriteField.Equals(value) != true)) {
                    this.ReplaceFileContentsOnEachWriteField = value;
                    this.RaisePropertyChanged("ReplaceFileContentsOnEachWrite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WriteBom {
            get {
                return this.WriteBomField;
            }
            set {
                if ((this.WriteBomField.Equals(value) != true)) {
                    this.WriteBomField = value;
                    this.RaisePropertyChanged("WriteBom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WriteFooterOnArchivingOnly {
            get {
                return this.WriteFooterOnArchivingOnlyField;
            }
            set {
                if ((this.WriteFooterOnArchivingOnlyField.Equals(value) != true)) {
                    this.WriteFooterOnArchivingOnlyField = value;
                    this.RaisePropertyChanged("WriteFooterOnArchivingOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int maxLogFilenames {
            get {
                return this.maxLogFilenamesField;
            }
            set {
                if ((this.maxLogFilenamesField.Equals(value) != true)) {
                    this.maxLogFilenamesField = value;
                    this.RaisePropertyChanged("maxLogFilenames");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Target", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KayMcCormick.Dev.ServiceReference1.TargetWithLayout))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KayMcCormick.Dev.ServiceReference1.TargetWithLayoutHeaderAndFooter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KayMcCormick.Dev.ServiceReference1.FileTarget))]
    public partial class Target : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OptimizeBufferReuseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OptimizeBufferReuse {
            get {
                return this.OptimizeBufferReuseField;
            }
            set {
                if ((this.OptimizeBufferReuseField.Equals(value) != true)) {
                    this.OptimizeBufferReuseField = value;
                    this.RaisePropertyChanged("OptimizeBufferReuse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TargetWithLayout", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KayMcCormick.Dev.ServiceReference1.TargetWithLayoutHeaderAndFooter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KayMcCormick.Dev.ServiceReference1.FileTarget))]
    public partial class TargetWithLayout : KayMcCormick.Dev.ServiceReference1.Target {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.Layout LayoutField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.Layout Layout {
            get {
                return this.LayoutField;
            }
            set {
                if ((object.ReferenceEquals(this.LayoutField, value) != true)) {
                    this.LayoutField = value;
                    this.RaisePropertyChanged("Layout");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TargetWithLayoutHeaderAndFooter", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KayMcCormick.Dev.ServiceReference1.FileTarget))]
    public partial class TargetWithLayoutHeaderAndFooter : KayMcCormick.Dev.ServiceReference1.TargetWithLayout {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.Layout FooterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.Layout HeaderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.Layout Footer {
            get {
                return this.FooterField;
            }
            set {
                if ((object.ReferenceEquals(this.FooterField, value) != true)) {
                    this.FooterField = value;
                    this.RaisePropertyChanged("Footer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.Layout Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Layout", Namespace="http://schemas.datacontract.org/2004/07/NLog.Layouts")]
    [System.SerializableAttribute()]
    public partial class Layout : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Encoding", Namespace="http://schemas.datacontract.org/2004/07/System.Text")]
    [System.SerializableAttribute()]
    public partial class Encoding : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KayMcCormick.Dev.ServiceReference1.CodePageDataItem dataItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.DecoderFallback decoderFallbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KayMcCormick.Dev.ServiceReference1.EncoderFallback encoderFallbackField;
        
        private int m_codePageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool m_isReadOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KayMcCormick.Dev.ServiceReference1.CodePageDataItem dataItem {
            get {
                return this.dataItemField;
            }
            set {
                if ((object.ReferenceEquals(this.dataItemField, value) != true)) {
                    this.dataItemField = value;
                    this.RaisePropertyChanged("dataItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.DecoderFallback decoderFallback {
            get {
                return this.decoderFallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.decoderFallbackField, value) != true)) {
                    this.decoderFallbackField = value;
                    this.RaisePropertyChanged("decoderFallback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KayMcCormick.Dev.ServiceReference1.EncoderFallback encoderFallback {
            get {
                return this.encoderFallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.encoderFallbackField, value) != true)) {
                    this.encoderFallbackField = value;
                    this.RaisePropertyChanged("encoderFallback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_codePage {
            get {
                return this.m_codePageField;
            }
            set {
                if ((this.m_codePageField.Equals(value) != true)) {
                    this.m_codePageField = value;
                    this.RaisePropertyChanged("m_codePage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool m_isReadOnly {
            get {
                return this.m_isReadOnlyField;
            }
            set {
                if ((this.m_isReadOnlyField.Equals(value) != true)) {
                    this.m_isReadOnlyField = value;
                    this.RaisePropertyChanged("m_isReadOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineEndingMode", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    [System.SerializableAttribute()]
    public partial class LineEndingMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileArchivePeriod", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    public enum FileArchivePeriod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hour = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minute = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunday = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monday = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tuesday = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wednesday = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thursday = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Friday = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saturday = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilePathKind", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    public enum FilePathKind : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Relative = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Absolute = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveNumberingMode", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    public enum ArchiveNumberingMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sequence = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rolling = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateAndSequence = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Win32FileAttributes", Namespace="http://schemas.datacontract.org/2004/07/NLog.Targets")]
    public enum Win32FileAttributes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hidden = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        System = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Archive = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Device = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Temporary = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SparseFile = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReparsePoint = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Compressed = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotContentIndexed = 8192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Encrypted = 16384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WriteThrough = -2147483648,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoBuffering = 536870912,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteOnClose = 67108864,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PosixSemantics = 16777216,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodePageDataItem", Namespace="http://schemas.datacontract.org/2004/07/System.Globalization")]
    [System.SerializableAttribute()]
    public partial class CodePageDataItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string m_bodyNameField;
        
        private int m_dataIndexField;
        
        private uint m_flagsField;
        
        private string m_headerNameField;
        
        private int m_uiFamilyCodePageField;
        
        private string m_webNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_bodyName {
            get {
                return this.m_bodyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_bodyNameField, value) != true)) {
                    this.m_bodyNameField = value;
                    this.RaisePropertyChanged("m_bodyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_dataIndex {
            get {
                return this.m_dataIndexField;
            }
            set {
                if ((this.m_dataIndexField.Equals(value) != true)) {
                    this.m_dataIndexField = value;
                    this.RaisePropertyChanged("m_dataIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint m_flags {
            get {
                return this.m_flagsField;
            }
            set {
                if ((this.m_flagsField.Equals(value) != true)) {
                    this.m_flagsField = value;
                    this.RaisePropertyChanged("m_flags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_headerName {
            get {
                return this.m_headerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_headerNameField, value) != true)) {
                    this.m_headerNameField = value;
                    this.RaisePropertyChanged("m_headerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_uiFamilyCodePage {
            get {
                return this.m_uiFamilyCodePageField;
            }
            set {
                if ((this.m_uiFamilyCodePageField.Equals(value) != true)) {
                    this.m_uiFamilyCodePageField = value;
                    this.RaisePropertyChanged("m_uiFamilyCodePage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_webName {
            get {
                return this.m_webNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_webNameField, value) != true)) {
                    this.m_webNameField = value;
                    this.RaisePropertyChanged("m_webName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DecoderFallback", Namespace="http://schemas.datacontract.org/2004/07/System.Text")]
    [System.SerializableAttribute()]
    public partial class DecoderFallback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool bIsMicrosoftBestFitFallbackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool bIsMicrosoftBestFitFallback {
            get {
                return this.bIsMicrosoftBestFitFallbackField;
            }
            set {
                if ((this.bIsMicrosoftBestFitFallbackField.Equals(value) != true)) {
                    this.bIsMicrosoftBestFitFallbackField = value;
                    this.RaisePropertyChanged("bIsMicrosoftBestFitFallback");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EncoderFallback", Namespace="http://schemas.datacontract.org/2004/07/System.Text")]
    [System.SerializableAttribute()]
    public partial class EncoderFallback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool bIsMicrosoftBestFitFallbackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool bIsMicrosoftBestFitFallback {
            get {
                return this.bIsMicrosoftBestFitFallbackField;
            }
            set {
                if ((this.bIsMicrosoftBestFitFallbackField.Equals(value) != true)) {
                    this.bIsMicrosoftBestFitFallbackField = value;
                    this.RaisePropertyChanged("bIsMicrosoftBestFitFallback");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAppInfoService")]
    public interface IAppInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInfoService/GetAppInstanceInfo", ReplyAction="http://tempuri.org/IAppInfoService/GetAppInstanceInfoResponse")]
        KayMcCormick.Dev.ServiceReference1.AppInstanceInfoResponse GetAppInstanceInfo(KayMcCormick.Dev.ServiceReference1.AppInstanceInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInfoService/GetAppInstanceInfo", ReplyAction="http://tempuri.org/IAppInfoService/GetAppInstanceInfoResponse")]
        System.Threading.Tasks.Task<KayMcCormick.Dev.ServiceReference1.AppInstanceInfoResponse> GetAppInstanceInfoAsync(KayMcCormick.Dev.ServiceReference1.AppInstanceInfoRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAppInfoServiceChannel : KayMcCormick.Dev.ServiceReference1.IAppInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppInfoServiceClient : System.ServiceModel.ClientBase<KayMcCormick.Dev.ServiceReference1.IAppInfoService>, KayMcCormick.Dev.ServiceReference1.IAppInfoService {
        
        public AppInfoServiceClient() {
        }
        
        public AppInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public KayMcCormick.Dev.ServiceReference1.AppInstanceInfoResponse GetAppInstanceInfo(KayMcCormick.Dev.ServiceReference1.AppInstanceInfoRequest request) {
            return base.Channel.GetAppInstanceInfo(request);
        }
        
        public System.Threading.Tasks.Task<KayMcCormick.Dev.ServiceReference1.AppInstanceInfoResponse> GetAppInstanceInfoAsync(KayMcCormick.Dev.ServiceReference1.AppInstanceInfoRequest request) {
            return base.Channel.GetAppInstanceInfoAsync(request);
        }
    }
}
