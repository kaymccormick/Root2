<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:KmDevWpfControls"
    xmlns:reflection="clr-namespace:System.Reflection;assembly=mscorlib">
    <Style TargetType="{x:Type local:CustomControl1}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomControl1}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  <Style TargetType="{x:Type local:AssembliesControl1}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AssembliesControl1}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <local:AssemblyInfoConverter1 x:Key="AssemblyInfoConverter" />

            </Border.Resources>
            <ListView x:Name="ListView" ItemsSource="{TemplateBinding AssemblySource}"
                      SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedAssembly,Mode=TwoWay}">
              <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                  <Setter Property="ContextMenu">
                    <Setter.Value>
                      <ContextMenu>
                        <MenuItem Header="Details" 
                                  CommandParameter="{Binding}" />
                        <MenuItem Header="Resources" 
                                  CommandParameter="{Binding}" />
                      </ContextMenu>
                    </Setter.Value>
                  </Setter>
                </Style>
              </ListView.ItemContainerStyle>
              <ListView.View>
                <GridView>
                  <GridViewColumn Header="Name">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate DataType="{x:Type reflection:Assembly}">
                        <TextBlock
                          DataContext="{Binding Converter={StaticResource AssemblyInfoConverter},ConverterParameter=Name}"
                          Text="{Binding Path=Name}" />
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                  <GridViewColumn Header="GAC" DisplayMemberBinding="{Binding GlobalAssemblyCache}" />
                  <GridViewColumn Header="Company"
                                  DisplayMemberBinding="{Binding ConverterParameter=Company,Converter={StaticResource AssemblyInfoConverter}}" />
                  <GridViewColumn Header="Location">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate>
                        <TextBlock
                          Text="{Binding Converter={StaticResource AssemblyInfoConverter},ConverterParameter=Location}"
                          FontFamily="Lucida Console" />
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                </GridView>
              </ListView.View>
            </ListView>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:AssemblyResourceTree1}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AssemblyResourceTree1}">
          <ControlTemplate.Resources>
            <Color x:Key="WindowColor">#FFE8EDF9</Color>
            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#ffb386c2</Color>
            <Color x:Key="ControlDarkColor">#ff6b2980</Color>

            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


            <Color x:Key="GlyphColor">#FF444444</Color>
            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

            <!--Border colors-->
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderMediumColor">DarkOrange</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>

            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

            <!--Control-specific resources.-->
            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

            <Style TargetType="Window" x:Key="Borderless">
              <Setter Property="WindowStyle" Value="None" />
              <Setter Property="AllowsTransparency" Value="True" />
              <Setter Property="Background" Value="{x:Null}" />
            </Style>

            <LinearGradientBrush x:Key="MenuPopupBrush"
                                 EndPoint="0.5,1"
                                 StartPoint="0.5,0">
              <GradientStop
                Color="{DynamicResource ControlLightColor}"
                Offset="0" />
              <GradientStop
                Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
              <GradientStop
                Color="{DynamicResource ControlLightColor}"
                Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush
              x:Key="ProgressBarIndicatorAnimatedFill"
              StartPoint="0,0"
              EndPoint="1,0">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#000000FF"
                                Offset="0" />
                  <GradientStop Color="#600000FF"
                                Offset="0.4" />
                  <GradientStop Color="#600000FF"
                                Offset="0.6" />
                  <GradientStop Color="#000000FF"
                                Offset="1" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <local:GetTypeConverter1 x:Key="GetTypeConverter" />

            <Style x:Key="ExpandCollapseToggleStyle"
                   TargetType="local:CustomToggleButton1">
              <Setter Property="Focusable"
                      Value="False" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="local:CustomToggleButton1">
                    <Grid Width="15"
                          Height="13"
                          Background="Azure">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="CheckStates">
                          <VisualState x:Name="Checked">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Collapsed">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Hidden}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Expanded">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unchecked" />
                          <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Path x:Name="Collapsed"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 4 0 L 8 4 L 4 8 Z">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                      <Path x:Name="Expanded"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 0 4 L 8 4 L 4 8 Z"
                            Visibility="Hidden">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <Style x:Key="TreeViewItemFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Border>
                      <Rectangle Margin="0,0,0,0"
                                 StrokeThickness="5"
                                 Stroke="Black"
                                 StrokeDashArray="1 2"
                                 Opacity="0" />
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="{x:Type local:CustomTreeViewItem}"
                   TargetType="{x:Type local:CustomTreeViewItem}">
              <Setter Property="IsExpanded"
                      Value="{Binding IsExpanded, Mode=OneWay}" />
              <Setter Property="Background"
                      Value="Transparent" />
              <Setter Property="Foreground" Value="Crimson" />
              <Setter Property="HorizontalContentAlignment"
                      Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="VerticalContentAlignment"
                      Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="Padding"
                      Value="1,0,0,0" />
              <Setter Property="FocusVisualStyle"
                      Value="{StaticResource TreeViewItemFocusVisual}" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate
                    TargetType="{x:Type local:CustomTreeViewItem}">
                    <Grid ShowGridLines="False">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="19"
                                          Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="SelectionStates">
                          <VisualState x:Name="Selected">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedBackgroundColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unselected" />
                          <VisualState
                            x:Name="SelectedInactive">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedUnfocusedColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup
                          x:Name="ExpansionStates">
                          <VisualState x:Name="Expanded">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="ItemsHost">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Collapsed" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <local:CustomToggleButton1 x:Name="Expander"
                                                Style="{StaticResource ExpandCollapseToggleStyle}"
                                                Command="local:CustomTreeView.ToggleNodeIsExpanded"
                                                ClickMode="Press"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />
                      <Border x:Name="Bd"
                              Grid.Row="0" Grid.Column="1"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                          x:Name="PART_Header"
                          ContentSource="Header"
                          HorizontalAlignment="Stretch" />
                      </Border>
                      <ItemsPresenter x:Name="ItemsHost"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="2"
                                      Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="HasItems"
                               Value="false">
                        <Setter TargetName="Expander"
                                Property="Visibility"
                                Value="Hidden" />
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Width"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinWidth"
                                Value="75" />
                      </MultiTrigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Height"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinHeight"
                                Value="19" />
                      </MultiTrigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <HierarchicalDataTemplate DataType="{x:Type local:Subnode1}" ItemsSource="{Binding Items}">
              <ContentPresenter Content="{Binding Name}">
                <ContentPresenter.ToolTip>
                  <TextBlock Text="{Binding Value,Converter={StaticResource GetTypeConverter}}" />
                </ContentPresenter.ToolTip>
              </ContentPresenter>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type local:RootNode1}" ItemsSource="{Binding Items}">
              <TextBlock Text="{Binding Name}">
                <TextBlock.ToolTip>
                  <local:TablePanel5 ColumnSpacing="10" RowSpacing="3">
                    <TextBlock Text="FileName" />
                    <TextBlock Text="{Binding FileName}" />
                    <TextBlock Text="Resource Location" />
                    <TextBlock Text="{Binding ResourceLocation}" />
                    <TextBlock Text="Referenced Assembly" />
                    <TextBlock Text="{Binding ReferencedAssembly}" TextTrimming="CharacterEllipsis" />
                  </local:TablePanel5>
                </TextBlock.ToolTip>
              </TextBlock>
            </HierarchicalDataTemplate>
          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer>
              <StackPanel>
                <TextBlock Text="Resources"></TextBlock>
                <local:CustomTreeView ItemsSource="{Binding RootNodes,RelativeSource={RelativeSource TemplatedParent}}"
                                      x:Name="TreeView" />
              </StackPanel>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:VisualTreeView1}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:VisualTreeView1}">
          <ControlTemplate.Resources>
            <local:RectConverter1 x:Key="RectConverter"></local:RectConverter1>
            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Style x:Key="ExpandCollapseToggleStyle"
                   TargetType="local:CustomToggleButton1">
              <Setter Property="Focusable"
                      Value="False" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="local:CustomToggleButton1">
                    <Grid Width="15"
                          Height="13"
                          Background="Azure">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="CheckStates">
                          <VisualState x:Name="Checked">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Collapsed">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Hidden}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Expanded">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unchecked" />
                          <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Path x:Name="Collapsed"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 4 0 L 8 4 L 4 8 Z">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                      <Path x:Name="Expanded"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 0 4 L 8 4 L 4 8 Z"
                            Visibility="Hidden">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <Style x:Key="TreeViewItemFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Border>
                      <Rectangle Margin="0,0,0,0"
                                 StrokeThickness="5"
                                 Stroke="Black"
                                 StrokeDashArray="1 2"
                                 Opacity="0" />
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="{x:Type local:CustomTreeViewItem}"
                   TargetType="{x:Type local:CustomTreeViewItem}">
              <Setter Property="IsExpanded"
                      Value="{Binding IsExpanded, Mode=OneWay}" />
              <Setter Property="Background"
                      Value="Transparent" />
              <Setter Property="Foreground" Value="Crimson" />
              <Setter Property="HorizontalContentAlignment"
                      Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="VerticalContentAlignment"
                      Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="Padding"
                      Value="1,0,0,0" />
              <Setter Property="FocusVisualStyle"
                      Value="{StaticResource TreeViewItemFocusVisual}" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate
                    TargetType="{x:Type local:CustomTreeViewItem}">
                    <Grid ShowGridLines="False">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="19"
                                          Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="SelectionStates">
                          <VisualState x:Name="Selected">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedBackgroundColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unselected" />
                          <VisualState
                            x:Name="SelectedInactive">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedUnfocusedColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup
                          x:Name="ExpansionStates">
                          <VisualState x:Name="Expanded">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="ItemsHost">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Collapsed" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <local:CustomToggleButton1 x:Name="Expander"
                                                Style="{StaticResource ExpandCollapseToggleStyle}"
                                                Command="local:CustomTreeView.ToggleNodeIsExpanded"
                                                ClickMode="Press"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />
                      <Border x:Name="Bd"
                              Grid.Row="0" Grid.Column="1"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                          x:Name="PART_Header"
                          ContentSource="Header"
                          HorizontalAlignment="Stretch" />
                      </Border>
                      <ItemsPresenter x:Name="ItemsHost"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="2"
                                      Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="HasItems"
                               Value="false">
                        <Setter TargetName="Expander"
                                Property="Visibility"
                                Value="Hidden" />
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Width"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinWidth"
                                Value="75" />
                      </MultiTrigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Height"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinHeight"
                                Value="19" />
                      </MultiTrigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <HierarchicalDataTemplate DataType="{x:Type local:VisualTreeNode}" ItemsSource="{Binding InternalItems}">
              <WrapPanel>
                <TextBlock Text="{Binding Type.Name}" />
                <TextBlock Margin="10,0,0,0" Text="{Binding DescendantBounds,Converter={StaticResource RectConverter}}" />
              </WrapPanel>
            </HierarchicalDataTemplate>
          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <ScrollViewer HorizontalScrollBarVisibility="Auto">
                <local:CustomTreeView x:Name="TreeView"
                ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=RootItems}" />
              </ScrollViewer>
              <StackPanel Grid.Column="1" DataContext="{Binding ElementName=TreeView,Path=SelectedItem}">
                <local:TablePanel5>
                  <TextBlock Text="{Binding DescendantBounds}"/>
                </local:TablePanel5>
                <ListView ItemsSource="{Binding Properties_}">
                  <ListView.View>
                    <GridView>
                      <GridViewColumn Header="Property Name" DisplayMemberBinding="{Binding Name}"/>
                      <GridViewColumn Header="Value" DisplayMemberBinding="{Binding Value}"/>
                      <GridViewColumn Header="Property Type" DisplayMemberBinding="{Binding PropertyType}"/>
                      <GridViewColumn Header="Is Attached" DisplayMemberBinding="{Binding IsAttached}"/>
                      <GridViewColumn Header="Is Composite" DisplayMemberBinding="{Binding IsComposite}"/>
                    </GridView>
                  </ListView.View>
                </ListView>
              </StackPanel>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



    <Style TargetType="{x:Type local:ConverterViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ConverterViewer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="Border">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
