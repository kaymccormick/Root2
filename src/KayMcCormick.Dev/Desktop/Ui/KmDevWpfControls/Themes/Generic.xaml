<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:KmDevWpfControls"
  xmlns:reflection="clr-namespace:System.Reflection;assembly=mscorlib"
  xmlns:avalondock="https://github.com/Dirkster99/AvalonDock"
  xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=System"
  xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=System">
  <Style TargetType="{x:Type local:CustomControl1}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:CustomControl1}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:AssembliesControl1}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AssembliesControl1}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <local:AssemblyInfoConverter1 x:Key="AssemblyInfoConverter" />

            </Border.Resources>
            <ListView x:Name="ListView" ItemsSource="{TemplateBinding AssemblySource}"
                      SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedAssembly,Mode=TwoWay}">
              <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                  <Setter Property="ContextMenu">
                    <Setter.Value>
                      <ContextMenu>
                        <MenuItem Header="Details"
                                  CommandParameter="{Binding}" />
                        <MenuItem Header="Resources"
                                  CommandParameter="{Binding}" />
                      </ContextMenu>
                    </Setter.Value>
                  </Setter>
                </Style>
              </ListView.ItemContainerStyle>
              <ListView.View>
                <GridView>
                  <GridViewColumn Header="Name">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate DataType="{x:Type reflection:Assembly}">
                        <TextBlock
                          DataContext="{Binding Converter={StaticResource AssemblyInfoConverter},ConverterParameter=Name}"
                          Text="{Binding Path=Name}" />
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                  <GridViewColumn Header="GAC" DisplayMemberBinding="{Binding GlobalAssemblyCache}" />
                  <GridViewColumn Header="Company"
                                  DisplayMemberBinding="{Binding ConverterParameter=Company,Converter={StaticResource AssemblyInfoConverter}}" />
                  <GridViewColumn Header="Location">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate>
                        <TextBlock
                          Text="{Binding Converter={StaticResource AssemblyInfoConverter},ConverterParameter=Location}"
                          FontFamily="Lucida Console" />
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                </GridView>
              </ListView.View>
            </ListView>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:AssemblyResourceTree1}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AssemblyResourceTree1}">
          <ControlTemplate.Resources>
            <Color x:Key="WindowColor">#FFE8EDF9</Color>
            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#ffb386c2</Color>
            <Color x:Key="ControlDarkColor">#ff6b2980</Color>

            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


            <Color x:Key="GlyphColor">#FF444444</Color>
            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

            <!--Border colors-->
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderMediumColor">DarkOrange</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>

            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

            <!--Control-specific resources.-->
            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

            <Style TargetType="Window" x:Key="Borderless">
              <Setter Property="WindowStyle" Value="None" />
              <Setter Property="AllowsTransparency" Value="True" />
              <Setter Property="Background" Value="{x:Null}" />
            </Style>

            <LinearGradientBrush x:Key="MenuPopupBrush"
                                 EndPoint="0.5,1"
                                 StartPoint="0.5,0">
              <GradientStop
                Color="{DynamicResource ControlLightColor}"
                Offset="0" />
              <GradientStop
                Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
              <GradientStop
                Color="{DynamicResource ControlLightColor}"
                Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush
              x:Key="ProgressBarIndicatorAnimatedFill"
              StartPoint="0,0"
              EndPoint="1,0">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#000000FF"
                                Offset="0" />
                  <GradientStop Color="#600000FF"
                                Offset="0.4" />
                  <GradientStop Color="#600000FF"
                                Offset="0.6" />
                  <GradientStop Color="#000000FF"
                                Offset="1" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <local:GetTypeConverter1 x:Key="GetTypeConverter" />

            <Style x:Key="ExpandCollapseToggleStyle"
                   TargetType="local:CustomToggleButton1">
              <Setter Property="Focusable"
                      Value="False" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="local:CustomToggleButton1">
                    <Grid Width="15"
                          Height="13"
                          Background="Azure">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="CheckStates">
                          <VisualState x:Name="Checked">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Collapsed">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Hidden}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Expanded">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unchecked" />
                          <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Path x:Name="Collapsed"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 4 0 L 8 4 L 4 8 Z">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                      <Path x:Name="Expanded"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 0 4 L 8 4 L 4 8 Z"
                            Visibility="Hidden">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <Style x:Key="TreeViewItemFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Border>
                      <Rectangle Margin="0,0,0,0"
                                 StrokeThickness="5"
                                 Stroke="Black"
                                 StrokeDashArray="1 2"
                                 Opacity="0" />
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="{x:Type local:CustomTreeViewItem}"
                   TargetType="{x:Type local:CustomTreeViewItem}">
              <Setter Property="IsExpanded"
                      Value="{Binding IsExpanded, Mode=OneWay}" />
              <Setter Property="IsSelected"
                      Value="{Binding IsSelected, Mode=TwoWay}" />
              <Setter Property="Background"
                      Value="Transparent" />
              <Setter Property="Foreground" Value="Crimson" />
              <Setter Property="HorizontalContentAlignment"
                      Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="VerticalContentAlignment"
                      Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="Padding"
                      Value="1,0,0,0" />
              <Setter Property="FocusVisualStyle"
                      Value="{StaticResource TreeViewItemFocusVisual}" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate
                    TargetType="{x:Type local:CustomTreeViewItem}">
                    <Grid ShowGridLines="False">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="19"
                                          Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="SelectionStates">
                          <VisualState x:Name="Selected">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedBackgroundColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unselected" />
                          <VisualState
                            x:Name="SelectedInactive">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedUnfocusedColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup
                          x:Name="ExpansionStates">
                          <VisualState x:Name="Expanded">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="ItemsHost">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Collapsed" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <local:CustomToggleButton1 x:Name="Expander"
                                                 Style="{StaticResource ExpandCollapseToggleStyle}"
                                                 Command="local:CustomTreeView.ToggleNodeIsExpanded"
                                                 ClickMode="Press"
                                                 CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />
                      <Border x:Name="Bd"
                              Grid.Row="0" Grid.Column="1"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                          x:Name="PART_Header"
                          ContentSource="Header"
                          HorizontalAlignment="Stretch" />
                      </Border>
                      <ItemsPresenter x:Name="ItemsHost"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="2"
                                      Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="HasItems"
                               Value="false">
                        <Setter TargetName="Expander"
                                Property="Visibility"
                                Value="Hidden" />
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Width"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinWidth"
                                Value="75" />
                      </MultiTrigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Height"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinHeight"
                                Value="19" />
                      </MultiTrigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <HierarchicalDataTemplate DataType="{x:Type local:Subnode1}" ItemsSource="{Binding Items}">
              <ContentPresenter Content="{Binding Name}">
                <ContentPresenter.ToolTip>
                  <TextBlock Text="{Binding Value,Converter={StaticResource GetTypeConverter}}" />
                </ContentPresenter.ToolTip>
              </ContentPresenter>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type local:RootNode1}" ItemsSource="{Binding Items}">
              <TextBlock Text="{Binding Name}">
                <TextBlock.ToolTip>
                  <local:TablePanel ColumnSpacing="10" RowSpacing="3">
                    <TextBlock Text="FileName" />
                    <TextBlock Text="{Binding FileName}" />
                    <TextBlock Text="Resource Location" />
                    <TextBlock Text="{Binding ResourceLocation}" />
                    <TextBlock Text="Referenced Assembly" />
                    <TextBlock Text="{Binding ReferencedAssembly}" TextTrimming="CharacterEllipsis" />
                  </local:TablePanel>
                </TextBlock.ToolTip>
              </TextBlock>
            </HierarchicalDataTemplate>
          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer>
              <StackPanel>
                <TextBlock Text="Resources" />
                <local:CustomTreeView ItemsSource="{Binding RootNodes,RelativeSource={RelativeSource TemplatedParent}}"
                                      x:Name="TreeView" />
              </StackPanel>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:VisualTreeView1}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:VisualTreeView1}">
          <ControlTemplate.Resources>
            <local:RectConverter1 x:Key="RectConverter" />
            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Style x:Key="ExpandCollapseToggleStyle"
                   TargetType="local:CustomToggleButton1">
              <Setter Property="Focusable"
                      Value="False" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="local:CustomToggleButton1">
                    <Grid Width="15"
                          Height="13"
                          Background="Azure">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="CheckStates">
                          <VisualState x:Name="Checked">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Collapsed">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Hidden}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Expanded">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unchecked" />
                          <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Path x:Name="Collapsed"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 4 0 L 8 4 L 4 8 Z">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                      <Path x:Name="Expanded"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 0 4 L 8 4 L 4 8 Z"
                            Visibility="Hidden">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <Style x:Key="TreeViewItemFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Border>
                      <Rectangle Margin="0,0,0,0"
                                 StrokeThickness="5"
                                 Stroke="Black"
                                 StrokeDashArray="1 2"
                                 Opacity="0" />
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="{x:Type local:CustomTreeViewItem}"
                   TargetType="{x:Type local:CustomTreeViewItem}">
              <Setter Property="IsExpanded"
                      Value="{Binding IsExpanded, Mode=OneWay}" />
              <Setter Property="Background"
                      Value="Transparent" />
              <Setter Property="Foreground" Value="Crimson" />
              <Setter Property="HorizontalContentAlignment"
                      Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="VerticalContentAlignment"
                      Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="Padding"
                      Value="1,0,0,0" />
              <Setter Property="FocusVisualStyle"
                      Value="{StaticResource TreeViewItemFocusVisual}" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate
                    TargetType="{x:Type local:CustomTreeViewItem}">
                    <Grid ShowGridLines="False">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="19"
                                          Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="SelectionStates">
                          <VisualState x:Name="Selected">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedBackgroundColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unselected" />
                          <VisualState
                            x:Name="SelectedInactive">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedUnfocusedColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup
                          x:Name="ExpansionStates">
                          <VisualState x:Name="Expanded">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="ItemsHost">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Collapsed" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <local:CustomToggleButton1 x:Name="Expander"
                                                 Style="{StaticResource ExpandCollapseToggleStyle}"
                                                 Command="local:CustomTreeView.ToggleNodeIsExpanded"
                                                 ClickMode="Press"
                                                 CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />
                      <Border x:Name="Bd"
                              Grid.Row="0" Grid.Column="1"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                          x:Name="PART_Header"
                          ContentSource="Header"
                          HorizontalAlignment="Stretch" />
                      </Border>
                      <ItemsPresenter x:Name="ItemsHost"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="2"
                                      Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="HasItems"
                               Value="false">
                        <Setter TargetName="Expander"
                                Property="Visibility"
                                Value="Hidden" />
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Width"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinWidth"
                                Value="75" />
                      </MultiTrigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Height"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinHeight"
                                Value="19" />
                      </MultiTrigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <HierarchicalDataTemplate DataType="{x:Type local:VisualTreeNode}" ItemsSource="{Binding Items}">
              <WrapPanel>
                <TextBlock Text="{Binding Type.Name}" />
                <TextBlock Margin="10,0,0,0" Text="{Binding DescendantBounds,Converter={StaticResource RectConverter}}" />
              </WrapPanel>
            </HierarchicalDataTemplate>
            <local:VisualConverter x:Key="VisualConverter" />
          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer HorizontalScrollBarVisibility="Auto">
                <local:CustomTreeView x:Name="TreeView"
                                      ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=RootVisual,Converter={StaticResource VisualConverter}}" />
              </ScrollViewer>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style TargetType="{x:Type local:ConverterViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ConverterViewer}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  x:Name="Border" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:HotedControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:HotedControl}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:TypeProviderView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TypeProviderView}">
          <ControlTemplate.Resources>

              <local:GetTypeConverter1 x:Key="GetTypeConverter" />
              <local:TypeConverter2 x:Key="TypeConverter" />
            <local:PropertyDescriptorConverter x:Key="PropertyDescriptorConverter" />

          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3*" />
                <RowDefinition Height="1*" />
              </Grid.RowDefinitions>
              <ToolBarTray>
                <ToolBar Band="1" BandIndex="1">
                  <local:TypeControl Type="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Type}" />
                  <Button Content="Editor" Command="local:TypeProviderView.LaunchEditor" x:Name="Edit" />
                  <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Type,Converter={StaticResource TypeConverter}}"/>
                </ToolBar>
              </ToolBarTray>
              <ListView Grid.Row="1"
                        ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Properties}"
                        x:Name="ListView">
                <ListView.View>
                  <GridView>
                    <GridViewColumn Header="Property" DisplayMemberBinding="{Binding Name}" />
                    <GridViewColumn Header="UI Type Editor"
                                    DisplayMemberBinding="{Binding Converter={StaticResource PropertyDescriptorConverter},ConverterParameter=Editor}" />
                    <GridViewColumn Header="Creation Editor"
                                    DisplayMemberBinding="{Binding Converter={StaticResource PropertyDescriptorConverter},ConverterParameter=InstanceCreationEditor}" />
                    <GridViewColumn Header="Type" DisplayMemberBinding="{Binding PropertyType}" />

                    <GridViewColumn Header="Component Type" DisplayMemberBinding="{Binding ComponentType}" />
                    <GridViewColumn Header="Browsable" DisplayMemberBinding="{Binding IsBrowsable}" />
                    <GridViewColumn Header="Category" DisplayMemberBinding="{Binding Category}" />
                    <GridViewColumn Header="Display Name" DisplayMemberBinding="{Binding DisplayName}" />
                    <GridViewColumn Header="Description" DisplayMemberBinding="{Binding Description}" />
                    <GridViewColumn Header="Converter">
                      <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type componentModel:PropertyDescriptor}">
                          <TextBlock Text="{Binding Path=Converter}" />
                        </DataTemplate>
                      </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                  </GridView>
                </ListView.View>
              </ListView>
              <ListBox Visibility="Collapsed" Grid.Column="1" Grid.Row="1"
                       ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedProperty.Attributes}">
                <ListBox.Resources>
                  <DataTemplate DataType="{x:Type componentModel:BrowsableAttribute}" />
                </ListBox.Resources>
              </ListBox>
              <Popup x:Name="Popup" AllowsTransparency="true" Placement="Bottom" Focusable="false"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                     IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent"
                                               UIElement.Focusable="true"
                                               RenderOptions.ClearTypeHint="Enabled"
                                               FrameworkElement.FocusVisualStyle="{x:Null}">
                  <Border x:Name="PopupBorder" Background="{TemplateBinding Control.Background}"
                          BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2" BorderThickness="1"
                          Padding="2">
                    <DockPanel>
                      <WindowsFormsHost Grid.Column="0" x:Name="WindowsFormsHost" Grid.Row="2" Grid.ColumnSpan="2" />
                    </DockPanel>
                  </Border>
                </themes:SystemDropShadowChrome>
              </Popup>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:TypeTreeViewControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TypeTreeViewControl}">
          <ControlTemplate.Resources>
            <local:RectConverter1 x:Key="RectConverter" />
            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Style x:Key="ExpandCollapseToggleStyle"
                   TargetType="local:CustomToggleButton1">
              <Setter Property="Focusable"
                      Value="False" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="local:CustomToggleButton1">
                    <Grid Width="15"
                          Height="13"
                          Background="Azure">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="CheckStates">
                          <VisualState x:Name="Checked">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Collapsed">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Hidden}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="Expanded">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unchecked" />
                          <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Path x:Name="Collapsed"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 4 0 L 8 4 L 4 8 Z">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                      <Path x:Name="Expanded"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="1,1,1,1"
                            Data="M 0 4 L 8 4 L 4 8 Z"
                            Visibility="Hidden">
                        <Path.Fill>
                          <SolidColorBrush
                            Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                      </Path>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <Style x:Key="TreeViewItemFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Border>
                      <Rectangle Margin="0,0,0,0"
                                 StrokeThickness="5"
                                 Stroke="Black"
                                 StrokeDashArray="1 2"
                                 Opacity="0" />
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="{x:Type local:CustomTreeViewItem}"
                   TargetType="{x:Type local:CustomTreeViewItem}">
              <Setter Property="IsExpanded"
                      Value="{Binding IsExpanded, Mode=OneWay}" />
              <Setter Property="Background"
                      Value="Transparent" />
              <Setter Property="Foreground" Value="Crimson" />
              <Setter Property="HorizontalContentAlignment"
                      Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="VerticalContentAlignment"
                      Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="Padding"
                      Value="1,0,0,0" />
              <Setter Property="FocusVisualStyle"
                      Value="{StaticResource TreeViewItemFocusVisual}" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate
                    TargetType="{x:Type local:CustomTreeViewItem}">
                    <Grid ShowGridLines="False">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="19"
                                          Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup
                          x:Name="SelectionStates">
                          <VisualState x:Name="Selected">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedBackgroundColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unselected" />
                          <VisualState
                            x:Name="SelectedInactive">
                            <Storyboard>
                              <ColorAnimationUsingKeyFrames
                                Storyboard.TargetName="Bd"
                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                <EasingColorKeyFrame
                                  KeyTime="0"
                                  Value="{StaticResource SelectedUnfocusedColor}" />
                              </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup
                          x:Name="ExpansionStates">
                          <VisualState x:Name="Expanded">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="ItemsHost">
                                <DiscreteObjectKeyFrame
                                  KeyTime="0"
                                  Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Collapsed" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <local:CustomToggleButton1 x:Name="Expander"
                                                 Style="{StaticResource ExpandCollapseToggleStyle}"
                                                 Command="local:CustomTreeView.ToggleNodeIsExpanded"
                                                 ClickMode="Press"
                                                 CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />
                      <Border x:Name="Bd"
                              Grid.Row="0" Grid.Column="1"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                          x:Name="PART_Header"
                          ContentSource="Header"
                          HorizontalAlignment="Stretch" />
                      </Border>
                      <ItemsPresenter x:Name="ItemsHost"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="2"
                                      Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="HasItems"
                               Value="false">
                        <Setter TargetName="Expander"
                                Property="Visibility"
                                Value="Hidden" />
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Width"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinWidth"
                                Value="75" />
                      </MultiTrigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="HasHeader"
                                     Value="false" />
                          <Condition Property="Height"
                                     Value="Auto" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header"
                                Property="MinHeight"
                                Value="19" />
                      </MultiTrigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <HierarchicalDataTemplate DataType="{x:Type local:TypeNode}" ItemsSource="{Binding Items}">
              <TextBlock Text="{Binding Header}" />
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:TypeNode2}">
              <TextBlock Text="{Binding Header}" />
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type local:AssemblyNode}" ItemsSource="{Binding Items}">
              <TextBlock Text="{Binding Header}" />
            </HierarchicalDataTemplate>
          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <local:CustomTreeView x:Name="TreeView"
                                  ItemsSource="{Binding RootItems,RelativeSource={RelativeSource TemplatedParent}}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:TypeDetailsControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TypeDetailsControl}">
          <ControlTemplate.Resources>
            <local:TypeInfoConverter1 x:Key="TypeInfoConverter" />

            <local:MethodInfoConverter1 x:Key="MethodInfoConverter" />

            <local:ParameterInfoConverter1 x:Key="ParameterInfoConverter" />

            <!--Control colors.-->
            <Color x:Key="WindowColor">#FFE8EDF9</Color>
            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#FF7381F9</Color>
            <Color x:Key="ControlDarkColor">#FF211AA9</Color>

            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


            <Color x:Key="GlyphColor">#FF444444</Color>
            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

            <!--Border colors-->
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderMediumColor">#FF888888</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>

            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

            <!--Control-specific resources.-->
            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

            <LinearGradientBrush x:Key="MenuPopupBrush"
                                 EndPoint="0.5,1"
                                 StartPoint="0.5,0">
              <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0" />
              <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="0.5" />
              <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                                 StartPoint="0,0"
                                 EndPoint="1,0">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#000000FF"
                                Offset="0" />
                  <GradientStop Color="#600000FF"
                                Offset="0.4" />
                  <GradientStop Color="#600000FF"
                                Offset="0.6" />
                  <GradientStop Color="#000000FF"
                                Offset="1" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <Style TargetType="GroupBox">
              <Setter Property="Margin" Value="0,15,0,0" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="GroupBox">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <Border Grid.Row="0"
                              BorderThickness="1"
                              CornerRadius="2,2,0,0"
                              BorderBrush="Black"
                              Background="Azure">


                        <ContentPresenter Margin="4"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True" />
                      </Border>

                      <Border Grid.Row="1"
                              BorderThickness="1,0,1,1"
                              CornerRadius="0,0,2,2">
                        <Border.BorderBrush>
                          <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                        </Border.BorderBrush>

                        <ContentPresenter Margin="4" />
                      </Border>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}" x:Name="border1">
            <Grid DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Type}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" TextElement.FontSize="18">
                <local:TypeControl Type="{Binding}" />
                <TextBlock Text=" (" />
                <TextBlock Text="{Binding Namespace}" />
                <TextBlock Text=")" />
              </StackPanel>
              <TabControl Grid.Row="1">
                <TabItem Header="Main">
                  <ScrollViewer>
                    <Grid Margin="15"
                          ShowGridLines="False">
                      <Grid.Resources>

                      </Grid.Resources>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ItemsControl DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Attributes}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <WrapPanel />
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Border Margin="5" Background="DarkTurquoise" Padding="5,0,5,0">
                              <TextBlock Text="{Binding}" FontSize="14" Margin="5" FontWeight="Bold" />
                            </Border>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>

                      <GroupBox Grid.Row="2" Grid.Column="0" Header="Identity" Padding="5">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                          </Grid.RowDefinitions>
                          <TextBlock Grid.Row="0" Grid.Column="0" Text="Namespace" />
                          <TextBlock Grid.Row="1" Grid.Column="0" Text="Assembly Name" />
                          <TextBlock Grid.Row="2" Grid.Column="0" Text="AssemblyQualifiedName" />

                          <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Namespace}" Margin="10,5,0,0" />
                          <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=Assembly.FullName}"
                                     TextWrapping="Wrap"
                                     Margin="10,5,0,0" />
                          <WrapPanel Grid.Row="2" Grid.Column="1" Margin="10,5,0,0">
                            <TextBlock TextWrapping="Wrap">
                              <Run
                                Text="{Binding Path=AssemblyQualifiedName,Mode=OneTime}" />
                            </TextBlock>
                          </WrapPanel>

                        </Grid>
                      </GroupBox>

                      <GroupBox Grid.Row="3" Grid.Column="0" Header="Class Hierarchy" Padding="5">
                        <Grid TextElement.FontSize="14">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                          </Grid.RowDefinitions>
                          <ItemsControl
                            ItemsSource="{Binding Converter={StaticResource TypeInfoConverter},ConverterParameter=Ancestors}">
                            <ItemsControl.ItemTemplate>
                              <DataTemplate DataType="{x:Type system:Type}">
                                <TextBlock FontSize="14" Text="{Binding}" />
                              </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" />
                              </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                          </ItemsControl>
                        </Grid>
                      </GroupBox>
                      <GroupBox Grid.Row="4" Grid.Column="0" Header="Generic Type"
                                DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Type}"
                                Padding="6">
                        <Grid>
                          <Grid.Resources>

                          </Grid.Resources>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                          </Grid.RowDefinitions>
                          <TextBlock Text="Generic Type" />
                          <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=IsGenericType}" />
                          <TextBlock Grid.Row="1" Grid.Column="0" Text="Generic Type Definition" />
                          <local:TypeControl Grid.Row="1" Grid.Column="1" FontSize="14"
                                             Type="{Binding Converter={StaticResource TypeInfoConverter},ConverterParameter=GenericTypeDefinition}" />
                        </Grid>
                      </GroupBox>
                      <GroupBox Padding="3" Grid.Row="5" Grid.Column="0" Header="Interfaces">
                        <ItemsControl
                          DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Type}"
                          ItemsSource="{Binding Converter={StaticResource TypeInfoConverter},ConverterParameter=Interfaces}">
                          <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type system:Type}">
                              <TextBlock Grid.Row="1" Grid.Column="1" FontSize="14" Text="{Binding}"
                                         Margin="5,0,0,5" />
                            </DataTemplate>
                          </ItemsControl.ItemTemplate>
                          <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                              <StackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                          </ItemsControl.ItemsPanel>
                        </ItemsControl>
                      </GroupBox>
                    </Grid>
                  </ScrollViewer>
                </TabItem>
                <TabItem Header="Properties">
                  <ListView
                    ItemsSource="{Binding Properties}">
                    <ListView.View>
                      <GridView>
                        <GridViewColumn Header="Property Type">
                          <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type componentModel:PropertyDescriptor}">
                              <TextBlock Text="{Binding PropertyType,Converter={StaticResource TestConverter2}}" />
                            </DataTemplate>
                          </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Property Name" DisplayMemberBinding="{Binding Name}" />
                      </GridView>
                    </ListView.View>
                  </ListView>
                </TabItem>
                <TabItem Header="Methods">
                  <ListView
                    ItemsSource="{Binding Converter={StaticResource TypeInfoConverter},ConverterParameter=Methods}">
                    <ListView.View>
                      <GridView>
                        <GridViewColumn Header="Return Type">
                          <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type reflection:MethodInfo}">
                              <local:TypeControl VerticalAlignment="Top" Type="{Binding ReturnType}" />
                            </DataTemplate>
                          </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Declaring Type">
                          <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type reflection:MethodInfo}">
                              <local:TypeControl Type="{Binding DeclaringType}" VerticalAlignment="Top" />
                            </DataTemplate>
                          </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Header="Name">
                          <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type reflection:MethodInfo}">
                              <TextBlock VerticalAlignment="Top" Text="{Binding Name}" />
                            </DataTemplate>
                          </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Parameters">
                          <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type reflection:MethodInfo}">
                              <ItemsControl
                                ItemsSource="{Binding Converter={StaticResource MethodInfoConverter},ConverterParameter=Parameters}">
                                <ItemsControl.ItemsPanel>
                                  <ItemsPanelTemplate>
                                    <WrapPanel />
                                  </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>

                                  <DataTemplate DataType="{x:Type reflection:ParameterInfo}">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                      <ItemsControl
                                        ItemsSource="{Binding Tags}">
                                        <ItemsControl.ItemsPanel>
                                          <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                          </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                          <DataTemplate>
                                            <TextBlock Margin="3,0,3,0" Padding="5" Background="BurlyWood"
                                                       Text="{Binding}" />
                                          </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                      </ItemsControl>
                                      <local:TypeControl FontWeight="Bold" VerticalContentAlignment="Center"
                                                         Type="{Binding Type}" />
                                      <TextBlock Text=" " />
                                      <TextBlock Text="{Binding Name}" />
                                      <TextBlock Text=", " />
                                    </StackPanel>
                                  </DataTemplate>
                                </ItemsControl.ItemTemplate>
                              </ItemsControl>
                            </DataTemplate>
                          </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                      </GridView>
                    </ListView.View>
                  </ListView>
                </TabItem>
                <TabItem Header="Properties2"
                         DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:TypeDetailsControl}}">
                  <ListView ItemsSource="{Binding Path=PropertyDescriptorCollection}">
                    <ListView.View>
                      <GridView>
                        <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" />
                        <GridViewColumn DisplayMemberBinding="{Binding DisplayName}" Header="Display Name" />
                        <GridViewColumn DisplayMemberBinding="{Binding Category}" Header="Category" />
                        <GridViewColumn DisplayMemberBinding="{Binding IsBrowsable}" Header="Browsable" />
                        <GridViewColumn Header="Attributes">
                          <GridViewColumn.CellTemplate>
                            <DataTemplate>
                              <ItemsControl ItemsSource="{Binding Attributes}">
                                <ItemsControl.ItemsPanel>
                                  <ItemsPanelTemplate>
                                    <WrapPanel />
                                  </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                  <DataTemplate DataType="{x:Type system:Attribute}">
                                    <TextBlock Text="{Binding}" />
                                  </DataTemplate>
                                </ItemsControl.ItemTemplate>
                              </ItemsControl>

                            </DataTemplate>
                          </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Description}" Header="Description" />
                        <GridViewColumn DisplayMemberBinding="{Binding SerializationVisibility}"
                                        Header="SerializationVisibility" />
                      </GridView>

                    </ListView.View>
                  </ListView>
                </TabItem>
              </TabControl>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style TargetType="{x:Type local:TypeControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TypeControl}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">

            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Type.FullName}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style TargetType="{x:Type local:TraceSourcesView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TraceSourcesView}">
          <ControlTemplate.Resources>
            <local:GetTypeConverter1 x:Key="GetTypeConverter"></local:GetTypeConverter1>
            <DataTemplate DataType="{x:Type diagnostics:TraceSource}">
              <local:TablePanel>
                <TextBlock Text="{Binding Name}"></TextBlock>
                <TextBlock Text="{Binding Switch.DisplayName}"></TextBlock>
                <TextBlock Text="{Binding Switch.Description}"></TextBlock>
                <TextBlock Text="{Binding Switch.Level}"></TextBlock>
              </local:TablePanel>

            </DataTemplate>
          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <ListView SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedTraceSource,Mode=TwoWay}"  x:Name="ListView" ItemsSource="{Binding Source={x:Static local:TraceSourcesView.Sources}}">
                <ListView.View>
                  <GridView>
                    <GridViewColumn Header="Name"  DisplayMemberBinding="{Binding Name}" />
                    <GridViewColumn Header="Display Name"  DisplayMemberBinding="{Binding DisplayName}" />
                    <GridViewColumn Header="Listener Count"  DisplayMemberBinding="{Binding Listeners.Count}" />
                    <GridViewColumn Header="Switch Description"   DisplayMemberBinding="{Binding Switch.Description}" />
                    <GridViewColumn Header="Switch Display Name" DisplayMemberBinding="{Binding Switch.DisplayName}" />
                    <GridViewColumn Header="Level">
                      <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type diagnostics:TraceSource}">
                          <local:EnumFlagsSelector EnumValue="{Binding Switch.Level,Mode=TwoWay}"  EditStyle="ComboBox" EnumType="diagnostics:SourceLevels"></local:EnumFlagsSelector>
                        </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Switch,Converter={StaticResource GetTypeConverter}}" />
                  </GridView>
                </ListView.View>
              </ListView>
              <ContentPresenter Grid.Row="1" Content="{Binding ElementName=ListView,Path=SelectedItem}"></ContentPresenter>
              <ListView Grid.Row="1" Grid.Column="1" x:Name="istView" ItemsSource="{Binding ElementName=ListView,Path=SelectedItem.Listeners}">
                <ListView.View>
                  <GridView>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" />
                    <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Converter={StaticResource GetTypeConverter}}" />
                    <GridViewColumn Header="Output Options" DisplayMemberBinding="{Binding TraceOutputOptions}" />

</GridView>
                </ListView.View>
              </ListView>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <Style TargetType="{x:Type local:FileInputBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FileInputBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                      <WrapPanel>
                      <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Filename,Mode=TwoWay}"  MinWidth="100"  x:Name="TextBox"></TextBox>
                        <Button Content="Select _File" Command="Open"></Button>
                      </WrapPanel>
          </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  <ControlTemplate TargetType="{x:Type local:EnumFlagsSelector}" x:Key="{x:Static local:EnumEditStyle.ComboBox}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ComboBox ItemsSource="{TemplateBinding Items}" Text="{TemplateBinding Text}"
            >
              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <CheckBox Content="{Binding Item}"  IsChecked="{Binding IsChecked,Mode=TwoWay}"></CheckBox>
                </DataTemplate>
              </ComboBox.ItemTemplate>
            </ComboBox>
          </Border>
        </ControlTemplate>

  
        <ControlTemplate TargetType="{x:Type local:EnumFlagsSelector}" x:Key="{x:Static local:EnumEditStyle.ItemsControl}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsControl ItemsSource="{TemplateBinding Items}"
            >
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <CheckBox Content="{Binding Item}" IsChecked="{Binding IsChecked,Mode=TwoWay}"></CheckBox>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </Border>
        </ControlTemplate>
  <Style TargetType="{x:Type local:EnumFlagsSelector}">
    <Style.Triggers>
      <Trigger Property="EditStyle" Value="ComboBox">
        <Setter Property="Control.Template" Value="{StaticResource {x:Static local:EnumEditStyle.ComboBox}}" />
      </Trigger>
      <Trigger Property="EditStyle" Value="ItemsControl">
        <Setter Property="Control.Template" Value="{StaticResource {x:Static local:EnumEditStyle.ItemsControl}}" />
      </Trigger>
    </Style.Triggers>

  </Style>
  <Style TargetType="{x:Type local:DropControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:DropControl}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" >
          <Grid>
            <ListView ItemsSource="{TemplateBinding Data}">
              <ListView.View>
                  <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Format}"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Data}"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Type}"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Length}"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Text}"></GridViewColumn>
                    <GridViewColumn><GridViewColumn.CellTemplate><DataTemplate>
                          <Image Source="{Binding ImageSource}"></Image></DataTemplate></GridViewColumn.CellTemplate></GridViewColumn>

                  </GridView>
              </ListView.View>
            </ListView>
          </Grid>
</Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>