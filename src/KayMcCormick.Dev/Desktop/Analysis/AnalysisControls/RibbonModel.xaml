<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AnalysisControls"
                    xmlns:kmWpf="http://kaymccormick.com/xaml/kmwpf"
                    xmlns:ribbonModel="clr-namespace:RibbonLib.Model;assembly=RibbonLib"
                    xmlns:model="clr-namespace:RibbonLib.Model;assembly=RibbonLib">
  <local:TestConverter2 x:Key="TestConverter2" />
  <kmWpf:GetTypeConverter x:Key="GetTypeConverter" />
  <local:ComboBoxTemplateSelector x:Key="ComboBoxTemplateSelector"/>
  <DataTemplate x:Key="RibbonModelGalleryContainer" DataType="{x:Type ribbonModel:RibbonModelGallery}">
    <local:MyRibbonGallery ItemsSource="{Binding Items}"/>
  </DataTemplate>
  <DataTemplate x:Key="RibbonModelGalleryCategoryContainer" DataType="{x:Type ribbonModel:RibbonModelGalleryCategory}">
    <local:MyRibbonGalleryCategory Header="{Binding Header}" ItemsSource="{Binding Items}"/>
  </DataTemplate>
  <DataTemplate x:Key="RibbonModelGalleryItemContainer" DataType="{x:Type ribbonModel:RibbonModelGalleryItem}">
    <local:MyRibbonGalleryItem Content="{Binding Content}"/>
  </DataTemplate>

  <Style x:Key="old" TargetType="{x:Type local:MyRibbonContextualTabGroupItemsControl}">
    <Setter Property="ItemTemplate">
      <Setter.Value>
        <DataTemplate DataType="{x:Type ribbonModel:RibbonModelContextualTabGroup}">
          <TextBlock Text="{Binding Header,NotifyOnTargetUpdated=True}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:MyRibbonContextualTabGroup}">
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Header" Value="{Binding Header,NotifyOnTargetUpdated=True}" />
    <Setter Property="ContentPresenter.Content" Value="{Binding Header,NotifyOnTargetUpdated=True}" />
    <Setter Property="Visibility" Value="{Binding Visibility,Mode=TwoWay,NotifyOnTargetUpdated=True,NotifyOnSourceUpdated=True}" />
  </Style>
  <Style TargetType="{x:Type local:MyRibbonGroup}">
    <Setter Property="ItemsSource" Value="{Binding Items,NotifyOnTargetUpdated=True}" />
    <Setter Property="IsDropDownOpen" Value="{Binding IsDropDownOpen,NotifyOnTargetUpdated=True,NotifyOnSourceUpdated=True,Mode=TwoWay}"/>
    <Setter Property="Background" Value="{Binding Background,Mode=TwoWay,NotifyOnTargetUpdated=True,NotifyOnSourceUpdated=True}"/>
  </Style>
  <Style TargetType="{x:Type local:MyRibbonTab}">
    <Setter Property="ContextualTabGroupHeader"
            Value="{Binding ContextualTabGroupHeader,NotifyOnTargetUpdated=True}" />
    <Setter Property="Visibility"
            Value="{Binding Visibility,Mode=TwoWay,NotifyOnTargetUpdated=True}" />

  </Style>
  <Style TargetType="{x:Type local:MyRibbonMenuItem}">
    <Setter Property="Header" Value="{Binding Header}" />
    <Setter Property="ImageSource" Value="{Binding Image}" />
    <Setter Property="RibbonControlService.ToolTipTitle" Value="{Binding ToolTipTitle}" />
    <Setter Property="RibbonControlService.ToolTipDescription" Value="{Binding ToolTipDescription}" />
    <Setter Property="RibbonControlService.ToolTipImageSource" Value="{Binding ToolTipImage}" />
    <Setter Property="RibbonControlService.ToolTipFooterTitle" Value="{Binding ToolTipFooterTitle}" />
    <Setter Property="RibbonControlService.ToolTipFooterDescription" Value="{Binding ToolTipFooterDescription}" />
    <Setter Property="RibbonControlService.ToolTipFooterImageSource" Value="{Binding ToolTipFooterImage}" />
    <Setter Property="KeyTipService.KeyTip" Value="{Binding KeyTip}" />
    <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
    <Setter Property="Command" Value="{Binding Command}" />
    <Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
    <Setter Property="IsChecked" Value="{Binding IsChecked}" />
    <Setter Property="CanUserResizeVertically" Value="{Binding IsVerticallyResizable}" />
    <Setter Property="CanUserResizeHorizontally" Value="{Binding IsHorizontallyResizable}" />
    <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
    <Setter Property="ItemsSource" Value="{Binding Items}" />

    <Style.Triggers>
      <DataTrigger Binding="{Binding Command}" Value="{x:Null}">
        <Setter Property="Command" Value="{x:Null}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding CommandParameter}" Value="{x:Null}">
        <Setter Property="CommandParameter" Value="{x:Null}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Image}" Value="{x:Null}">
        <Setter Property="ImageSource" Value="{x:Null}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding ToolTipImage}" Value="{x:Null}">
        <Setter Property="RibbonControlService.ToolTipImageSource" Value="{x:Null}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding ToolTipFooterImage}" Value="{x:Null}">
        <Setter Property="RibbonControlService.ToolTipFooterImageSource" Value="{x:Null}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelButton}">
    <RibbonButton Label="{Binding Label}" SmallImageSource="{Binding SmallImageSource}" Command="{Binding Command}" CommandParameter="{Binding CommandParameter}"
                  CommandTarget="{Binding CommandTarget}" />
  </HierarchicalDataTemplate>

  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelItemSplitButton}">
    <RibbonSplitButton Label="{Binding Label}" ItemsSource="{Binding Items}" />
  </HierarchicalDataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelItemTextBox}">
    <RibbonTextBox Text="{Binding Value}" Label="{Binding Label}" />
  </HierarchicalDataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelTwoLineText}">
    <RibbonTwoLineText Text="{Binding Text}" PathData="{Binding PathData}" PathFill="{Binding PathFill}"
                       PathStroke="{Binding PathStroke}" HasTwoLines="{Binding HasTwoLines}" />
  </HierarchicalDataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelToggleButton}">
    <RibbonToggleButton Label="{Binding Label,NotifyOnTargetUpdated=True}" LargeImageSource="{Binding LargeImageSource}"
                        IsChecked="{Binding IsChecked,Mode=TwoWay,NotifyOnTargetUpdated=True}"
                        Command="{Binding Command}" />
  </HierarchicalDataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelItemComboBox}">
    <local:MyRibbonComboBox Label="{Binding Label,NotifyOnTargetUpdated=True}" ItemsSource="{Binding Items}" ItemContainerTemplateSelector="{StaticResource ComboBoxTemplateSelector}" UsesItemContainerTemplate="True">
      <local:MyRibbonComboBox.Resources>
        <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelGallery}" ItemsSource="{Binding Items}">
          <TextBlock Text="{Binding Header,NotifyOnTargetUpdated=True}" />
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelGalleryCategory}"
                                  ItemsSource="{Binding Items}">
          <TextBlock Text="{Binding Header,NotifyOnTargetUpdated=True}" />
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelGalleryItem}">
          <ContentControl Content="{Binding Content,NotifyOnTargetUpdated=True}" />
        </HierarchicalDataTemplate>
      </local:MyRibbonComboBox.Resources>
    </local:MyRibbonComboBox>
  </HierarchicalDataTemplate>
  <DataTemplate DataType="{x:Type local:ModelDatePicker}">
    <DatePicker SelectedDate="{Binding SelectedDate}" />
  </DataTemplate>
  <DataTemplate DataType="{x:Type local:ModelCalendar}">
    <Calendar SelectedDate="{Binding SelectedDate}" />
  </DataTemplate>
  <local:GuidConverter x:Key="GuidConverter" />
  <DataTemplate DataType="{x:Type ribbonModel:RibbonModelItemMenuButton}">
    <local:MyRibbonMenuButton ItemContainerTemplateSelector="{StaticResource ComboBoxTemplateSelector}"
                              UsesItemContainerTemplate="True"
                              Visibility="{Binding Visibility}"
                              LargeImageSource="{Binding LargeImageSource}"
                              SmallImageSource="{Binding SmallImageSource}"
                              IsDropDownOpen="{Binding IsDropDownOpen,Mode=TwoWay}"
                              Foreground="{Binding Foreground}" Label="{Binding Label}" 
                              Background="{Binding Background}"
                              ItemsSource="{Binding Items}">
    </local:MyRibbonMenuButton>
  </DataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelControlGroup}">
    <RibbonControlGroup BorderBrush="{Binding BorderBrush}" Padding="10" Margin="5" BorderThickness="4"
                        ItemsSource="{Binding Items}" />
  </HierarchicalDataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type model:RibbonModelMenuItem}" ItemsSource="{Binding Items}">
    <ContentControl Content="{Binding Header}" />
  </HierarchicalDataTemplate>
  <DataTemplate DataType="{x:Type ribbonModel:RibbonModelRadioButton}">
    <RibbonRadioButton Label="{Binding Label}" IsChecked="{Binding IsChecked}" />
  </DataTemplate>
  <DataTemplate DataType="{x:Type ribbonModel:RibbonModelDropZone}">
    <Rectangle AllowDrop="True" MaxWidth="{Binding MaxWidth}" MaxHeight="{Binding MaxHeight}" Fill="{Binding Fill}"
               MinWidth="{Binding MinWidth}" MinHeight="{Binding MinHeight}" Width="{Binding Width}"
               Height="{Binding Height}" />
  </DataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelGalleryCategory}" ItemsSource="{Binding Items}">
    <TextBlock Text="{Binding Label}" />
  </HierarchicalDataTemplate>

  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelGalleryItem}">
    <TextBlock Background="Aqua"  Text="{Binding Content}" />
  </HierarchicalDataTemplate>

  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelGallery}" ItemsSource="{Binding Items}">
    <RibbonGallery />
  </HierarchicalDataTemplate>

  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelGroup}" ItemsSource="{Binding Items}">
    <TextBlock Foreground="White" Background="BlueViolet" Text="{Binding Header,NotifyOnTargetUpdated=True}" />
  </HierarchicalDataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelAppMenuItem}" ItemsSource="{Binding Items}"
                            x:Key="app1">
    <RibbonApplicationMenuItem Header="{Binding Header}" ImageSource="{Binding ImageSource}"
                               KeyTip="{Binding KeyTip}" />
  </HierarchicalDataTemplate>
  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelAppMenuItem}">
    <TextBlock Text="{Binding Header}" />
  </HierarchicalDataTemplate>

  <HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelAppSplitMenuItem}" ItemsSource="{Binding Items}">
    <TextBlock FontSize="14" FontStyle="Italic" Text="{Binding Header}" />
  </HierarchicalDataTemplate>
  <DataTemplate DataType="{x:Type ribbonModel:RibbonModelGallery}" x:Key="GalleryMenuContainer">
    <RibbonGallery />
  </DataTemplate>

</ResourceDictionary>