    <Style TargetType="{x:Type local:FormattedTextControl3}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FormattedTextControl3}">
                    <Border Background="{TemplateBinding Background}"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Grid">
                            <Grid.Resources>
                                <converters:SyntaxNodeConverter x:Key="SyntaxNodeConverter" />
                                <converters:SyntaxTokenConverter x:Key="SyntaxTokenConverter" />
                                <converters:SyntaxTriviaConverter x:Key="SyntaxTriviaConverter" />
                                <converters:SymbolInfoConverter x:Key="SymbolInfoConverter" />
                                <DataTemplate DataType="{x:Type local:CodeToolTipContent}">
                                    <StackPanel Orientation="Vertical">
                                        <ContentControl Content="{Binding SyntaxNode}" />
                                        <ContentControl Content="{Binding Symbol}" />
                                    </StackPanel>
                                </DataTemplate>

                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="10" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer VerticalAlignment="Stretch" x:Name="ScrollViewer"
                                          HorizontalContentAlignment="Left"
                                          VerticalContentAlignment="Top">

                                <Grid x:Name="InnerGrid">
                                    <Rectangle x:Name="Rectangle" VerticalAlignment="Top" HorizontalAlignment="Left"
                                               Stroke="Aqua"
                                               TextElement.FontSize="12">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="Uniform">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="TextDest" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="Rect2" Panel.ZIndex="100" VerticalAlignment="Top"
                                               HorizontalAlignment="Left">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush2" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="Uniform">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="DG2" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Canvas x:Name="Canvas" Panel.ZIndex="101" VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch" />

                                </Grid>

                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ElementTextFormatterControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ElementTextFormatterControl}">
                    <Border Background="{TemplateBinding Background}"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Grid">
                            <Grid.Resources>

                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="10" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="ScrollViewer" HorizontalContentAlignment="Left"
                                          VerticalContentAlignment="Top">

                                <Grid x:Name="InnerGrid">
                                    <Rectangle x:Name="Rectangle" VerticalAlignment="Top" HorizontalAlignment="Left"
                                               Stroke="Aqua"
                                               TextElement.FontSize="12">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="Uniform">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="TextDest" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="Rect2" Panel.ZIndex="100" VerticalAlignment="Top"
                                               HorizontalAlignment="Left">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush2" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="Uniform">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="DG2" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Canvas x:Name="Canvas" Panel.ZIndex="101" VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch" />

                                </Grid>

                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SymbolTextControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SymbolTextControl}">
                    <Border Background="{TemplateBinding Background}"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Grid">
                            <Grid.Resources>
                                <converters:SymbolInfoConverter x:Key="SymbolInfoConverter" />
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer VerticalAlignment="Stretch" x:Name="ScrollViewer"
                                          HorizontalContentAlignment="Left"
                                          VerticalContentAlignment="Top" VerticalScrollBarVisibility="Hidden">
                                <Rectangle x:Name="Rectangle" VerticalAlignment="Top" HorizontalAlignment="Left"
                                           TextElement.FontSize="12">
                                    <Rectangle.Fill>
                                        <DrawingBrush x:Name="DrawingBrush" AlignmentX="Left" AlignmentY="Top"
                                                      TileMode="None"
                                                      Stretch="Uniform">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup x:Name="TextDest" />
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LogEventInstancesControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LogEventInstancesControl}">
                    <Border Background="{TemplateBinding Background}"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Grid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer VerticalAlignment="Stretch" x:Name="ScrollViewer"
                                          HorizontalContentAlignment="Left"
                                          VerticalContentAlignment="Top" VerticalScrollBarVisibility="Hidden">
                                <Grid x:Name="InnerGrid">
                                    <Rectangle x:Name="Rectangle" VerticalAlignment="Top" HorizontalAlignment="Left"
                                               TextElement.FontSize="12">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="Uniform">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="TextDest" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="Rect2" Panel.ZIndex="100" VerticalAlignment="Top"
                                               HorizontalAlignment="Left">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush2" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="Uniform">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="DG2" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CodeControl2}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FormattedTextControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Grid">
                            <Grid.Resources>
                                <converters:SyntaxNodeConverter x:Key="SyntaxNodeConverter" />
                                <converters:SyntaxTokenConverter x:Key="SyntaxTokenConverter" />
                                <converters:SyntaxTriviaConverter x:Key="SyntaxTriviaConverter" />
                                <converters:SymbolInfoConverter x:Key="SymbolInfoConverter" />
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="10" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer VerticalAlignment="Stretch" x:Name="ScrollViewer"
                                          HorizontalContentAlignment="Left"
                                          VerticalContentAlignment="Top">
                                <Rectangle x:Name="Rectangle" VerticalAlignment="Top" HorizontalAlignment="Left"
                                           Stroke="Aqua"
                                           TextElement.FontSize="12">
                                    <Rectangle.Fill>
                                        <DrawingBrush x:Name="DrawingBrush" AlignmentX="Left" AlignmentY="Top"
                                                      TileMode="None"
                                                      Stretch="Uniform">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup x:Name="TextDest" />
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DevTypeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DevTypeControl}">
                    <Border Background="{TemplateBinding Background}"

                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush x:Name="myDrawingBrush" Stretch="None"
                                              AlignmentY="Top" AlignmentX="Left">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup x:Name="textDest" />
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CodeDiagnostics}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CodeDiagnostics}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <TabControl>
                            <TabControl.Resources>
                                <local:RectConverter x:Key="RectConverter" />
                            </TabControl.Resources>
                            <TabItem Header="Code">
                                <local:FormattedTextControl
                                    x:Name="code"
                                    SyntaxTree="{TemplateBinding SyntaxTree}"
                                    Compilation="{TemplateBinding Compilation}"
                                    Model="{TemplateBinding Model}" />
                            </TabItem>
                            <TabItem Header="Diag">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="80" />
                                    </Grid.RowDefinitions>
                                    <ListView x:Name="lines" Grid.ColumnSpan="2" Grid.Row="0" Grid.Column="0"
                                              ItemsSource="{Binding ElementName=code,Path=LineInfos}">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="Line no."
                                                                DisplayMemberBinding="{Binding LineNumber}" />
                                                <GridViewColumn Header="Offset"
                                                                DisplayMemberBinding="{Binding Path=Offset}" />
                                                <GridViewColumn Header="Length"
                                                                DisplayMemberBinding="{Binding Path=Length}" />
                                                <GridViewColumn Header="Size"
                                                                DisplayMemberBinding="{Binding Path=Size}" />
                                                <GridViewColumn Header="Origin"
                                                                DisplayMemberBinding="{Binding Path=Origin}" />
                                                <GridViewColumn Header="Text"
                                                                DisplayMemberBinding="{Binding Path=Text}" />

                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <ListView x:Name="regions" Grid.Row="1" Grid.Column="0"
                                              ItemsSource="{Binding ElementName=lines,Path=SelectedItem.Regions}">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="Offset"
                                                                DisplayMemberBinding="{Binding Path=Offset}" />
                                                <GridViewColumn Header="Length"
                                                                DisplayMemberBinding="{Binding Path=Length}" />
                                                <GridViewColumn Header="Bounding"
                                                                DisplayMemberBinding="{Binding Path=BoundingRect,Converter={StaticResource RectConverter}}" />
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <ListView Grid.Row="1" Grid.Column="1"
                                              ItemsSource="{Binding ElementName=regions,Path=SelectedItem.Characters}">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="Row" DisplayMemberBinding="{Binding Path=Row}" />
                                                <GridViewColumn Header="Column"
                                                                DisplayMemberBinding="{Binding Path=Column}" />
                                                <GridViewColumn Header="Char"
                                                                DisplayMemberBinding="{Binding Path=Char}" />
                                                <GridViewColumn Header="Bounding"
                                                                DisplayMemberBinding="{Binding Path=Bounds,Converter={StaticResource RectConverter}}" />
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <Rectangle x:Name="rect" Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="None">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="dgroup" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:EnhancedCodeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EnhancedCodeControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Grid"
                              DataContext="{Binding ElementName=CodeControl}">
                            <Grid.Resources>
                                <converters:SyntaxNodeConverter x:Key="SyntaxNodeConverter" />
                                <converters:SyntaxTokenConverter x:Key="SyntaxTokenConverter" />
                                <converters:SyntaxTriviaConverter x:Key="SyntaxTriviaConverter" />
                                <converters:SymbolInfoConverter x:Key="SymbolInfoConverter" />
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <ComboBox
                                    ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:EnhancedCodeControl,AncestorLevel=3,Mode=FindAncestor},Path=CommonFontSizes}"
                                    SelectedValue="{Binding ElementName=Rectangle,Path=(TextElement.FontSize),Mode=TwoWay,FallbackValue=12}"
                                    FontSize="20" />
                            </StackPanel>
                            <local:FormattedTextControl Grid.Row="1" Grid.Column="0"
                                                        SyntaxTree="{TemplateBinding SyntaxTree}"
                                                        Compilation="{TemplateBinding Compilation}"
                                                        x:Name="CodeControl" />
                            <StackPanel Margin="10" Grid.Row="2" Grid.Column="0" Orientation="Horizontal"
                                        TextElement.FontSize="16">
                                <TextBlock Margin="15,0,0,0" Text="{Binding HoverOffset}" />
                                <TextBlock Text=" ( " />
                                <TextBlock Text="{Binding HoverColumn}" />
                                <TextBlock Text=", " />
                                <TextBlock Text="{Binding HoverRow}" />
                                <TextBlock Text=" ) " />
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="15,0,0,0"
                                               Text="{Binding HoverSyntaxNode,Converter={StaticResource SyntaxNodeConverter},ConverterParameter={x:Static converters:SyntaxNodeInfo.Kind}}" />
                                    <TextBlock Margin="15,0,0,0"
                                               Text="{Binding HoverToken,Converter={StaticResource SyntaxTokenConverter},ConverterParameter=kind}" />
                                    <TextBlock Margin="15,0,0,0"
                                               Text="{Binding HoverToken,Converter={StaticResource SyntaxTokenConverter},ConverterParameter=text}" />
                                </StackPanel>
                                <StackPanel Background="Beige" Orientation="Horizontal" Margin="10,0,10,0">
                                    <TextBlock
                                        Text="{Binding HoverSymbol,Converter={StaticResource SymbolInfoConverter},ConverterParameter=kind}" />
                                    <local:SymbolTextControl DisplaySymbol="{Binding HoverSymbol}" />
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0" TextElement.FontSize="14">
                                <TextBlock Margin="10"
                                           Text="{Binding HoverRegionInfo.Trivia,Converter={StaticResource SyntaxTriviaConverter}}" />
                                <TextBlock Margin="10" Text="{Binding HoverRegionInfo.TriviaValue.HasStructure}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="0" TextElement.FontSize="14">
                                <StackPanel.Resources>
                                    <DataTemplate DataType="{x:Type local:SyntaxTokenTextCharacters}">
                                        <StackPanel Orientation="Horizontal" Background="Khaki">
                                            <TextBlock Margin="10" Text="Text:" />
                                            <TextBlock Margin="10" Text="{Binding Text}" />
                                            <TextBlock Margin="10" Text="Index:" />
                                            <TextBlock Margin="10" Text="{Binding Index}" />
                                            <TextBlock Margin="10" Text="Length:" />
                                            <TextBlock Margin="10" Text="{Binding Length}" />
                                            <TextBlock Margin="10" Text="Span:" />
                                            <TextBlock Margin="10" Text="{Binding Span}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type local:SyntaxTriviaTextCharacters}">
                                        <StackPanel Orientation="Horizontal" Background="Aquamarine">
                                            <TextBlock Margin="10" Text="{Binding Text}" />
                                            <TextBlock Margin="10" Text="{Binding Index}" />
                                            <TextBlock Margin="10" Text="{Binding Length}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type TextRun}">
                                        <TextBlock Text="{Binding Length}" Background="Gold" />
                                    </DataTemplate>
                                </StackPanel.Resources>
                                <TextBlock Margin="10" Text="Bounding Rect:" />
                                <TextBlock Text="{Binding HoverRegionInfo.BoundingRect}" />
                                <TextBlock Margin="10" Text="Offset:" />
                                <TextBlock Text="{Binding HoverRegionInfo.Offset}" />
                                <ContentControl Content="{Binding HoverRegionInfo.TextRun}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:WorkspaceView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WorkspaceView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <local:TestConverter2 x:Key="TestConverter" />
                            <HierarchicalDataTemplate DataType="{x:Type local:SolutionModel}"
                                                      ItemsSource="{Binding Projects}">
                                <TextBlock Text="{Binding Id.Id}" />
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:ProjectModel}"
                                                      ItemsSource="{Binding RootPathInfo.Entries.Values,Converter={StaticResource TestConverter}}">
                                <TextBlock Text="{Binding Name}">
                                    <TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Symbols" Command="wpf:WpfAppCommands.BrowseSymbols"
                                                      CommandParameter="{Binding}" />
                                            <MenuItem Header="Details" Command="wpf:WpfAppCommands.ViewDetails"
                                                      CommandParameter="{Binding}" />
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                </TextBlock>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:DiagnosticNodeModel}">
                                <TextBlock Text="{Binding Message}" />
                            </HierarchicalDataTemplate>

                            <HierarchicalDataTemplate DataType="{x:Type local:PathModel}"
                                                      ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding ElementName}">
                                    <TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Details" Command="wpf:WpfAppCommands.ViewDetails"
                                                      CommandParameter="{Binding}" />
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                </TextBlock>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:DocumentModel}">
                                <TextBlock Text="{Binding Name}">
                                    <TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Details" Command="wpf:WpfAppCommands.ViewDetails"
                                                      CommandParameter="{Binding}" />
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                </TextBlock>
                            </HierarchicalDataTemplate>

                        </Border.Resources>
                        <TreeView ItemsSource="{TemplateBinding Solutions}" x:Name="TreeView">
                            <TreeView.InputBindings>
                                <KeyBinding Key="Enter" Command="{x:Static wpf:WpfAppCommands.OpenSolutionItem}"
                                            CommandParameter="{Binding ElementName=TreeView,Path=SelectedItem}" />
                            </TreeView.InputBindings>
                        </TreeView>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:SemanticControl1}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SemanticControl1}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <converters:SymbolInfoConverter x:Key="SymbolInfoConverter" />
                        </Border.Resources>


                        <TreeView x:Name="TreeView">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type codeAnalysis:INamespaceOrTypeSymbol}"
                                                          ItemsSource="{Binding Converter={StaticResource SymbolInfoConverter},ConverterParameter=Members}">
                                    <local:SymbolTextControl DisplaySymbol="{Binding}" />
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AssembliesControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AssembliesControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <wpf:AssemblyInfoConverter x:Key="AssemblyInfoConverter" />

                        </Border.Resources>
                        <ListView x:Name="ListView" ItemsSource="{TemplateBinding AssemblySource}"
                                  SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedAssembly,Mode=TwoWay}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu>
                                                <MenuItem Header="Details" Command="wpf:WpfAppCommands.ViewDetails"
                                                          CommandParameter="{Binding}" />
                                                <MenuItem Header="Resources" Command="wpf:WpfAppCommands.ViewResources"
                                                          CommandParameter="{Binding}" />
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Name">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type reflection:Assembly}">
                                                <TextBlock
                                                    DataContext="{Binding Converter={StaticResource AssemblyInfoConverter},ConverterParameter=Name}"
                                                    Text="{Binding Path=Name}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="GAC" DisplayMemberBinding="{Binding GlobalAssemblyCache}" />
                                    <GridViewColumn Header="Company"
                                                    DisplayMemberBinding="{Binding ConverterParameter=Company,Converter={StaticResource AssemblyInfoConverter}}" />
                                    <GridViewColumn Header="Location">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding Converter={StaticResource AssemblyInfoConverter},ConverterParameter=Location}"
                                                    FontFamily="Lucida Console" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:SyntaxPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SyntaxPanel}">
                    <ControlTemplate.Resources>
                        <x:Array x:Key="Brushes" Type="Brush">
                            <SolidColorBrush Color="Azure" />
                            <SolidColorBrush Color="LemonChiffon" />
                            <SolidColorBrush Color="BlanchedAlmond" />
                            <SolidColorBrush Color="LavenderBlush" />
                        </x:Array>
                    </ControlTemplate.Resources>
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SyntaxTypeInfo}"
                        Grid.RowSpan="{TemplateBinding Grid.RowSpan}"
                        Grid.Column="{TemplateBinding Grid.Column}"
                        Grid.Row="{TemplateBinding Grid.Row}">
                        <Border.Resources>

                            <Style x:Key="FieldNameStyle" TargetType="TextBlock">
                                <Setter Property="TextDecorations" Value="Underline" />
                                <Setter Property="FontWeight" Value="Medium" />
                            </Style>
                            <local:TestConverter2 x:Key="TestConverter2" />
                            <BooleanToVisibilityConverter x:Key="BooleanTpVisibilityConverter" />
                            <DataTemplate DataType="{x:Type syntax:AppTypeInfo}">
                                <local:SyntaxPanel Margin="30" SyntaxTypeInfo="{Binding}"
                                                   ControlDepth="{Binding RelativeSource={RelativeSource TemplatedParent},Path=NextDepth,Converter={StaticResource TestConverter2}}" />
                            </DataTemplate>
                            <local:AppTypeInfoConvereter x:Key="AppTypeInfoConverter" />
                            <local:KindsConverter x:Key="KindsConverter" />
                        </Border.Resources>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock FontSize="24" Text="{Binding Title}" />
                            <TreeView Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Path=SubTypeInfos}"
                                      x:Name="TreeView">
                                <TreeView.Style>
                                    <Style TargetType="TreeView">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SubTypeInfos.Count}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.Style>
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Path=SubTypeInfos}"
                                                              DataType="{x:Type syntax:AppTypeInfo}">
                                        <TextBlock Text="{Binding Title}" />
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                            <ContentPresenter x:Name="KindPresenter" Grid.Row="2" Grid.Column="0"
                                              Content="{Binding Converter={StaticResource KindsConverter},Mode=OneTime}">
                                <ContentPresenter.Resources>
                                    <DataTemplate DataType="{x:Type cSharp:SyntaxKind}">
                                        <TextBlock Text="{Binding Mode=OneTime}" />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type syntax:SyntaxKindCollection}">
                                        <StackPanel>
                                            <TextBlock FontSize="20" TextDecorations="Underline" Text="Kinds:" />
                                            <ListBox MaxHeight="150" Margin="20,10,0,10" Grid.Row="1"
                                                     ItemsSource="{Binding Mode=OneTime}">
                                                <ListBox.Style>
                                                    <Style TargetType="ListBox">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Count}" Value="0">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBox.Style>
                                            </ListBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <ItemsControl ItemsSource="{Binding Fields}" Grid.Row="3">
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Control.BorderBrush" Value="BlueViolet" />
                                        <Setter Property="Control.BorderThickness" Value="0" />
                                        <Setter Property="DataContext" Value="{Binding Fields}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCollection}" Value="true">
                                                <Setter Property="Control.Background" Value="Gray" />
                                                <Setter Property="ContentTemplate">

                                                    <Setter.Value>
                                                        <DataTemplate DataType="{x:Type syntax:SyntaxFieldInfo}">
                                                            <Grid TextElement.FontSize="18">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="*" />
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Style="{StaticResource FieldNameStyle}"
                                                                           Text="{Binding Name}"
                                                                           Visibility="Visible" />
                                                                <TextBlock Grid.Row="0" Grid.Column="1" FontSize="14"
                                                                           FontStyle="Italic"
                                                                           Text="Collection-Type " />
                                                                <Expander ExpandDirection="Down" Grid.Row="1"
                                                                          Grid.Column="0" Grid.ColumnSpan="3">
                                                                    <ContentPresenter
                                                                        Content="{Binding Converter={StaticResource AppTypeInfoConverter}}" />
                                                                </Expander>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsCollection}" Value="false">
                                                <Setter Property="Control.Background" Value="Gray" />
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate DataType="{x:Type syntax:SyntaxFieldInfo}">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="*" />

                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="2*" />
                                                                    <ColumnDefinition Width="2*" />
                                                                    <ColumnDefinition Width="2*" />
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock Style="{StaticResource FieldNameStyle}"
                                                                           TextElement.FontSize="16"
                                                                           Grid.Row="0" Grid.Column="0"
                                                                           Grid.ColumnSpan="2" Text="{Binding Name}" />
                                                                <TextBlock TextElement.FontSize="16" Grid.Row="0"
                                                                           Grid.Column="2" FontStyle="Italic"
                                                                           Text="Non-collection-type " />

                                                                <WrapPanel TextElement.FontSize="16" Grid.Column="3"
                                                                           Grid.Row="0">
                                                                    <TextBlock Text=" ( " />
                                                                    <TextBlock FontStyle="Italic"
                                                                               Text="{Binding TypeName}" />
                                                                    <TextBlock Text=" )" />
                                                                </WrapPanel>
                                                                <StackPanel Grid.Row="1" Grid.Column="0"
                                                                            Grid.ColumnSpan="4"
                                                                            Orientation="Horizontal">
                                                                    <StackPanel.Style>
                                                                        <Style TargetType="StackPanel">
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition
                                                                                            Binding="{Binding Optional}"
                                                                                            Value="false" />
                                                                                        <Condition
                                                                                            Binding="{Binding Override}"
                                                                                            Value="false" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Visibility"
                                                                                            Value="Hidden" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </StackPanel.Style>
                                                                    <TextBlock Text="Optional"
                                                                               Visibility="{Binding Optional,Converter={StaticResource BooleanTpVisibilityConverter}}" />
                                                                    <TextBlock Text="Override"
                                                                               Visibility="{Binding Override,Converter={StaticResource BooleanTpVisibilityConverter}}" />
                                                                </StackPanel>
                                                                <ListBox Grid.Row="2" Grid.Column="1"
                                                                         Grid.ColumnSpan="3"
                                                                         ItemsSource="{Binding Kinds}">
                                                                    <ListBox.ItemContainerStyle>
                                                                        <Style TargetType="ListBoxItem">
                                                                            <Setter Property="FontSize" Value="18" />
                                                                        </Style>
                                                                    </ListBox.ItemContainerStyle>
                                                                    <ListBox.Style>
                                                                        <Style TargetType="ListBox">
                                                                            <Style.Triggers>
                                                                                <DataTrigger
                                                                                    Binding="{Binding Path=Kinds.Count}"
                                                                                    Value="0">
                                                                                    <Setter Property="Visibility"
                                                                                            Value="Hidden" />
                                                                                </DataTrigger>
                                                                                <DataTrigger
                                                                                    Binding="{Binding Path=Kinds.Count}"
                                                                                    Value="1">
                                                                                    <Setter Property="IsEnabled"
                                                                                            Value="False" />
                                                                                </DataTrigger>

                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ListBox.Style>
                                                                </ListBox>
                                                                <TextBlock Background="Black" Foreground="White"
                                                                           Text="{Binding Converter={StaticResource AppTypeInfoConverter},ConverterParameter=Verify}"
                                                                           Visibility="Collapsed" />
                                                                <Expander ExpandDirection="Down" Grid.Row="3"
                                                                          Grid.Column="0" Grid.ColumnSpan="4">
                                                                    <ContentPresenter
                                                                        Content="{Binding Converter={StaticResource AppTypeInfoConverter}}" />
                                                                </Expander>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.Template>
                                    <ControlTemplate TargetType="ItemsControl">
                                        <Border Margin="0,5,0,5" Padding="10,5,10,5" BorderThickness="0">
                                            <ItemsPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <ListBox Grid.Row="4" Grid.Column="0" ItemsSource="{Binding FactoryMethods}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type syntax:AppMethodInfo}">
                                        <WrapPanel>
                                            <TextBlock Text="{Binding MethodName}" />
                                            <TextBlock Text="  " />
                                            <ItemsControl ItemsSource="{Binding Parameters}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type syntax:AppParameterInfo}">
                                                        <WrapPanel>
                                                            <TextBlock Text="{Binding Name}" />
                                                            <TextBlock Text=" ( " />
                                                            <TextBlock Text="{Binding ParameterType.Name}" />
                                                            <TextBlock Text=" ) " />
                                                        </WrapPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </WrapPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SyntaxTypeComboBox}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type syntax:AppTypeInfo}">
                    <TextBlock Text="{Binding Title}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SyntaxTypeComboBox}">
                    <ControlTemplate.Resources>

                        <Style x:Key="{x:Type TreeView}"
                               TargetType="TreeView">
                            <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                            <Setter Property="SnapsToDevicePixels"
                                    Value="True" />
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                                    Value="Auto" />
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                                    Value="Auto" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TreeView">
                                        <ControlTemplate.Resources>
                                            <!--Control colors.-->
                                            <Color x:Key="WindowColor">#FFE8EDF9</Color>
                                            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                                            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                                            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                                            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                                            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                                            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                                            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                                            <Color x:Key="ControlLightColor">White</Color>
                                            <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                                            <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                                            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                                            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                                            <Color x:Key="GlyphColor">#FF444444</Color>
                                            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                                            <!--Border colors-->
                                            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                                            <Color x:Key="BorderMediumColor">#FF888888</Color>
                                            <Color x:Key="BorderDarkColor">#FF444444</Color>

                                            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                                            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                                            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                                            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                                            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                                            <!--Control-specific resources.-->
                                            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                                            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                                            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                                            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                                            <LinearGradientBrush x:Key="MenuPopupBrush"
                                                                 EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource ControlLightColor}"
                                                              Offset="0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                              Offset="0.5" />
                                                <GradientStop Color="{DynamicResource ControlLightColor}"
                                                              Offset="1" />
                                            </LinearGradientBrush>

                                            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                                                                 StartPoint="0,0"
                                                                 EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="#000000FF"
                                                                      Offset="0" />
                                                        <GradientStop Color="#600000FF"
                                                                      Offset="0.4" />
                                                        <GradientStop Color="#600000FF"
                                                                      Offset="0.6" />
                                                        <GradientStop Color="#000000FF"
                                                                      Offset="1" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </ControlTemplate.Resources>
                                        <Border Name="Border"
                                                CornerRadius="1"
                                                BorderThickness="1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                            </Border.BorderBrush>
                                            <Border.Background>
                                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                            </Border.Background>
                                            <ScrollViewer Focusable="False"
                                                          CanContentScroll="False"
                                                          Padding="4">
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ExpandCollapseToggleStyle"
                               TargetType="ToggleButton">
                            <Style.Triggers>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </Trigger>

                            </Style.Triggers>
                            <Setter Property="Focusable"
                                    Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid Width="15"
                                              Height="13"
                                              Background="Transparent">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CheckStates">
                                                    <VisualState x:Name="Checked">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="Collapsed">
                                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                                        Value="{x:Static Visibility.Hidden}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="Expanded">
                                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                                        Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unchecked" />
                                                    <VisualState x:Name="Indeterminate" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Path x:Name="Collapsed"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Margin="1,1,1,1"
                                                  Data="M 4 0 L 8 4 L 4 8 Z">
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                                </Path.Fill>
                                            </Path>
                                            <Path x:Name="Expanded"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Margin="1,1,1,1"
                                                  Data="M 0 4 L 8 4 L 4 8 Z"
                                                  Visibility="Hidden">
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                                </Path.Fill>
                                            </Path>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="TreeViewItemFocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border>
                                            <Rectangle Margin="0,0,0,0"
                                                       StrokeThickness="5"
                                                       Stroke="Black"
                                                       StrokeDashArray="1 2"
                                                       Opacity="0" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="{x:Type TreeViewItem}"
                               TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="HorizontalContentAlignment"
                                    Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="Padding"
                                    Value="1,0,0,0" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource TreeViewItemFocusVisual}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <ControlTemplate.Resources>

                                            <Color x:Key="WindowColor">#FFE8EDF9</Color>
                                            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                                            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                                            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                                            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                                            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                                            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                                            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                                            <Color x:Key="ControlLightColor">White</Color>
                                            <Color x:Key="ControlMediumColor">#FFdb97cd</Color>
                                            <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                                            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                                            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                                            <Color x:Key="GlyphColor">#FF444444</Color>
                                            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                                            <!--Border colors-->
                                            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                                            <Color x:Key="BorderMediumColor">#FF888888</Color>
                                            <Color x:Key="BorderDarkColor">#FF444444</Color>

                                            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                                            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                                            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                                            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                                            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                                            <!--Control-specific resources.-->
                                            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                                            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                                            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                                            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                                            <LinearGradientBrush x:Key="MenuPopupBrush"
                                                                 EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource ControlLightColor}"
                                                              Offset="0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                              Offset="0.5" />
                                                <GradientStop Color="{DynamicResource ControlLightColor}"
                                                              Offset="1" />
                                            </LinearGradientBrush>

                                            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                                                                 StartPoint="0,0"
                                                                 EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="#000000FF"
                                                                      Offset="0" />
                                                        <GradientStop Color="#600000FF"
                                                                      Offset="0.4" />
                                                        <GradientStop Color="#600000FF"
                                                                      Offset="0.6" />
                                                        <GradientStop Color="#000000FF"
                                                                      Offset="1" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </ControlTemplate.Resources>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="19"
                                                                  Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="SelectionStates">
                                                    <VisualState x:Name="Selected">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                                          Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                                     Value="{StaticResource SelectedBackgroundColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unselected" />
                                                    <VisualState x:Name="SelectedInactive">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                                          Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                                     Value="{StaticResource SelectedUnfocusedColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="ExpansionStates">
                                                    <VisualState x:Name="Expanded">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="ItemsHost">
                                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                                        Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Collapsed" />
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                Storyboard.TargetName="Bd">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                                     Value="{StaticResource ControlMouseOverColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <ToggleButton x:Name="Expander"
                                                          Style="{StaticResource ExpandCollapseToggleStyle}"
                                                          ClickMode="Press"
                                                          IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
                                            <Border x:Name="Bd"
                                                    Grid.Column="1"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0,1"
                                                                         StartPoint="0,0">
                                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                                                      Offset="0" />
                                                        <GradientStop Color="{DynamicResource BorderMediumColor}"
                                                                      Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                                <Border.Background>

                                                    <LinearGradientBrush StartPoint="0,0"
                                                                         EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop
                                                                    Color="{DynamicResource ControlLightColor}" />
                                                                <GradientStop
                                                                    Color="{DynamicResource ControlMediumColor}"
                                                                    Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>

                                                </Border.Background>
                                                <ContentPresenter x:Name="PART_Header"
                                                                  ContentSource="Header"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost"
                                                            Grid.Row="1"
                                                            Grid.Column="1"
                                                            Grid.ColumnSpan="2"
                                                            Visibility="Collapsed" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems"
                                                     Value="false">
                                                <Setter TargetName="Expander"
                                                        Property="Visibility"
                                                        Value="Hidden" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="HasHeader"
                                                               Value="false" />
                                                    <Condition Property="Width"
                                                               Value="Auto" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="PART_Header"
                                                        Property="MinWidth"
                                                        Value="75" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="HasHeader"
                                                               Value="false" />
                                                    <Condition Property="Height"
                                                               Value="Auto" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="PART_Header"
                                                        Property="MinHeight"
                                                        Value="19" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <DataTemplate DataType="{x:Type syntax:AppTypeInfo}">
                            <TextBlock Text="{Binding Title}" />
                        </DataTemplate>

                        <ControlTemplate x:Key="ComboBoxToggleButton"
                                         TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <!--Control colors.-->
                                <Color x:Key="WindowColor">#FFE8EDF9</Color>
                                <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                                <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                                <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                                <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                                <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                                <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                                <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                                <Color x:Key="ControlLightColor">White</Color>
                                <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                                <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                                <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                                <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                                <Color x:Key="GlyphColor">#FF444444</Color>
                                <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                                <!--Border colors-->
                                <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                                <Color x:Key="BorderMediumColor">#FF888888</Color>
                                <Color x:Key="BorderDarkColor">#FF444444</Color>

                                <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                                <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                                <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                                <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                                <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                                <!--Control-specific resources.-->
                                <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                                <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                                <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                                <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                                <LinearGradientBrush x:Key="MenuPopupBrush"
                                                     EndPoint="0.5,1"
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                                                  Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                  Offset="0.5" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                                                  Offset="1" />
                                </LinearGradientBrush>

                                <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                                                     StartPoint="0,0"
                                                     EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#000000FF"
                                                          Offset="0" />
                                            <GradientStop Color="#600000FF"
                                                          Offset="0.4" />
                                            <GradientStop Color="#600000FF"
                                                          Offset="0.6" />
                                            <GradientStop Color="#000000FF"
                                                          Offset="1" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                    Storyboard.TargetName="Border">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource ControlMouseOverColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                    Storyboard.TargetName="Border">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource DisabledControlDarkColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                                    Storyboard.TargetName="Arrow">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource DisabledForegroundColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                    Storyboard.TargetName="Border">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                    Storyboard.TargetName="Border">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource ControlPressedColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border"
                                        Grid.ColumnSpan="2"
                                        CornerRadius="2"
                                        BorderThickness="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0,1"
                                                             StartPoint="0,0">
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                                          Offset="0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>

                                        <LinearGradientBrush StartPoint="0,0"
                                                             EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                                  Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                </Border>
                                <Border Grid.Column="0"
                                        CornerRadius="2,0,0,2"
                                        Margin="1">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                    </Border.Background>
                                </Border>
                                <Path x:Name="Arrow"
                                      Grid.Column="1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 0 0 L 4 4 L 8 0 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </ControlTemplate>

                        <ControlTemplate x:Key="SyntaxTypeComboBoxTextBox"
                                         TargetType="{x:Type TextBox}">
                            <Border x:Name="PART_ContentHost"
                                    Focusable="False"
                                    Background="{TemplateBinding Background}" />
                        </ControlTemplate>

                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.Resources>
                            <!--Control colors.-->
                            <Color x:Key="WindowColor">#FFE8EDF9</Color>
                            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                            <Color x:Key="ControlLightColor">White</Color>
                            <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                            <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                            <Color x:Key="GlyphColor">#FF444444</Color>
                            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                            <!--Border colors-->
                            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                            <Color x:Key="BorderMediumColor">#FF888888</Color>
                            <Color x:Key="BorderDarkColor">#FF444444</Color>

                            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                            <!--Control-specific resources.-->
                            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                            <LinearGradientBrush x:Key="MenuPopupBrush"
                                                 EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ControlLightColor}"
                                              Offset="0" />
                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                                              Offset="0.5" />
                                <GradientStop Color="{DynamicResource ControlLightColor}"
                                              Offset="1" />
                            </LinearGradientBrush>

                            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                                                 StartPoint="0,0"
                                                 EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#000000FF"
                                                      Offset="0" />
                                        <GradientStop Color="#600000FF"
                                                      Offset="0.4" />
                                        <GradientStop Color="#600000FF"
                                                      Offset="0.6" />
                                        <GradientStop Color="#000000FF"
                                                      Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                                      Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{Binding RelativeSource={RelativeSource AncestorLevel=5,AncestorType=local:SyntaxTypeComboBox,Mode=FindAncestor},Path=SyntaxTypesModel.SelectedTypeInfo}"
                                          Margin="3,3,23,3"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Left">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate DataType="{x:Type syntax:AppTypeInfo}">
                                    <TextBlock Text="{Binding Title}" />
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{StaticResource SyntaxTypeComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Bottom"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="Transparent"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                    </Border.Background>
                                    <ScrollViewer Margin="4,6,4,6"
                                                  SnapsToDevicePixels="True">
                                        <Grid>
                                            <StackPanel x:Name="ItemsHost" IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained">
                                                <StackPanel.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                            </StackPanel>
                                            <TreeView x:Name="TreeView"
                                                      ItemsSource="{Binding Path=SyntaxTypesModel.TopLevelTypeInfos}">
                                                <TreeView.ItemTemplate>
                                                    <HierarchicalDataTemplate ItemsSource="{Binding Path=SubTypeInfos}"
                                                                              DataType="{x:Type syntax:AppTypeInfo}">
                                                        <TextBlock FontSize="16" Text="{Binding Title}" />
                                                    </HierarchicalDataTemplate>
                                                </TreeView.ItemTemplate>
                                            </TreeView>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                                 Property="AllowsTransparency"
                                 Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="4" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SyntaxFactoryPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SyntaxFactoryPanel}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid
                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent},Path=AppMethodInfo}">
                            <ItemsControl ItemsSource="{Binding Parameters}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type syntax:AppParameterInfo}">
                                        <WrapPanel>
                                            <TextBlock Text="{Binding Name}" />
                                            <TextBlock Text="{Binding ParameterType}" />
                                        </WrapPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AssemblyResourceTree}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AssemblyResourceTree}">
                    <ControlTemplate.Resources>
                        <Color x:Key="WindowColor">#FFE8EDF9</Color>
                        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                        <Color x:Key="ControlLightColor">White</Color>
                        <Color x:Key="ControlMediumColor">#ffb386c2</Color>
                        <Color x:Key="ControlDarkColor">#ff6b2980</Color>

                        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                        <Color x:Key="GlyphColor">#FF444444</Color>
                        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                        <!--Border colors-->
                        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                        <Color x:Key="BorderMediumColor">DarkOrange</Color>
                        <Color x:Key="BorderDarkColor">#FF444444</Color>

                        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                        <!--Control-specific resources.-->
                        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                        <Style TargetType="Window" x:Key="Borderless">
                            <Setter Property="WindowStyle" Value="None" />
                            <Setter Property="AllowsTransparency" Value="True" />
                            <Setter Property="Background" Value="{x:Null}" />
                        </Style>

                        <LinearGradientBrush x:Key="MenuPopupBrush"
                                             EndPoint="0.5,1"
                                             StartPoint="0.5,0">
                            <GradientStop
                                Color="{DynamicResource ControlLightColor}"
                                Offset="0" />
                            <GradientStop
                                Color="{DynamicResource ControlMediumColor}"
                                Offset="0.5" />
                            <GradientStop
                                Color="{DynamicResource ControlLightColor}"
                                Offset="1" />
                        </LinearGradientBrush>

                        <LinearGradientBrush
                            x:Key="ProgressBarIndicatorAnimatedFill"
                            StartPoint="0,0"
                            EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#000000FF"
                                                  Offset="0" />
                                    <GradientStop Color="#600000FF"
                                                  Offset="0.4" />
                                    <GradientStop Color="#600000FF"
                                                  Offset="0.6" />
                                    <GradientStop Color="#000000FF"
                                                  Offset="1" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <wpf:GetTypeConverter x:Key="GetTypeConverter" />

                        <Style x:Key="ExpandCollapseToggleStyle"
                               TargetType="local:CustomToggleButton">
                            <Setter Property="Focusable"
                                    Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="local:CustomToggleButton">
                                        <Grid Width="15"
                                              Height="13"
                                              Background="Azure">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup
                                                    x:Name="CheckStates">
                                                    <VisualState x:Name="Checked">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="Collapsed">
                                                                <DiscreteObjectKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="Expanded">
                                                                <DiscreteObjectKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unchecked" />
                                                    <VisualState x:Name="Indeterminate" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Path x:Name="Collapsed"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Margin="1,1,1,1"
                                                  Data="M 4 0 L 8 4 L 4 8 Z">
                                                <Path.Fill>
                                                    <SolidColorBrush
                                                        Color="{DynamicResource GlyphColor}" />
                                                </Path.Fill>
                                            </Path>
                                            <Path x:Name="Expanded"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Margin="1,1,1,1"
                                                  Data="M 0 4 L 8 4 L 4 8 Z"
                                                  Visibility="Hidden">
                                                <Path.Fill>
                                                    <SolidColorBrush
                                                        Color="{DynamicResource GlyphColor}" />
                                                </Path.Fill>
                                            </Path>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="TreeViewItemFocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border>
                                            <Rectangle Margin="0,0,0,0"
                                                       StrokeThickness="5"
                                                       Stroke="Black"
                                                       StrokeDashArray="1 2"
                                                       Opacity="0" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="{x:Type local:CustomTreeViewItem}"
                               TargetType="{x:Type local:CustomTreeViewItem}">
                            <Setter Property="IsExpanded"
                                    Value="{Binding IsExpanded, Mode=OneWay}" />
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="Foreground" Value="Crimson" />
                            <Setter Property="HorizontalContentAlignment"
                                    Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="Padding"
                                    Value="1,0,0,0" />
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource TreeViewItemFocusVisual}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate
                                        TargetType="{x:Type local:CustomTreeViewItem}">
                                        <Grid ShowGridLines="False">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="19"
                                                                  Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup
                                                    x:Name="SelectionStates">
                                                    <VisualState x:Name="Selected">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames
                                                                Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{StaticResource SelectedBackgroundColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unselected" />
                                                    <VisualState
                                                        x:Name="SelectedInactive">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames
                                                                Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{StaticResource SelectedUnfocusedColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup
                                                    x:Name="ExpansionStates">
                                                    <VisualState x:Name="Expanded">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="ItemsHost">
                                                                <DiscreteObjectKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Collapsed" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <local:CustomToggleButton x:Name="Expander"
                                                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                                                      Command="wpf:WpfAppCommands.ToggleNodeIsExpanded"
                                                                      ClickMode="Press"
                                                                      CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                      IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />
                                            <Border x:Name="Bd"
                                                    Grid.Row="0" Grid.Column="1"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter
                                                    x:Name="PART_Header"
                                                    ContentSource="Header"
                                                    HorizontalAlignment="Stretch" />
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost"
                                                            Grid.Row="1"
                                                            Grid.Column="1"
                                                            Grid.ColumnSpan="2"
                                                            Visibility="Collapsed" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems"
                                                     Value="false">
                                                <Setter TargetName="Expander"
                                                        Property="Visibility"
                                                        Value="Hidden" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="HasHeader"
                                                               Value="false" />
                                                    <Condition Property="Width"
                                                               Value="Auto" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="PART_Header"
                                                        Property="MinWidth"
                                                        Value="75" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="HasHeader"
                                                               Value="false" />
                                                    <Condition Property="Height"
                                                               Value="Auto" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="PART_Header"
                                                        Property="MinHeight"
                                                        Value="19" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <HierarchicalDataTemplate DataType="{x:Type local:Subnode}" ItemsSource="{Binding Items}">
                            <ContentPresenter Content="{Binding Name}">
                                <ContentPresenter.ToolTip>
                                    <TextBlock Text="{Binding Value,Converter={StaticResource GetTypeConverter}}" />
                                </ContentPresenter.ToolTip>
                            </ContentPresenter>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type local:RootNode}" ItemsSource="{Binding Items}">
                            <TextBlock Text="{Binding Name}">
                                <TextBlock.ToolTip>
                                    <kmDevWpfControls:TablePanel ColumnSpacing="10" RowSpacing="3">
                                        <TextBlock Text="FileName" />
                                        <TextBlock Text="{Binding FileName}" />
                                        <TextBlock Text="Resource Location" />
                                        <TextBlock Text="{Binding ResourceLocation}" />
                                        <TextBlock Text="Referenced Assembly" />
                                        <TextBlock Text="{Binding ReferencedAssembly}" TextTrimming="CharacterEllipsis" />
                                    </kmDevWpfControls:TablePanel>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </HierarchicalDataTemplate>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <local:CustomTreeView
                            ItemsSource="{Binding RootNodes,RelativeSource={RelativeSource TemplatedParent}}"
                            x:Name="TreeView" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DocumentView}">
        <Setter Property="TextElement.FontSize" Value="24.0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DocumentView}">
                    <ControlTemplate.Resources>

                        <!--Control colors.-->
                        <Color x:Key="WindowColor">#FFE8EDF9</Color>
                        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                        <Color x:Key="ControlLightColor">White</Color>
                        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                        <Color x:Key="GlyphColor">#FF444444</Color>
                        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                        <!--Border colors-->
                        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                        <Color x:Key="BorderMediumColor">#FF888888</Color>
                        <Color x:Key="BorderDarkColor">#FF444444</Color>

                        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                        <!--Control-specific resources.-->
                        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                        <LinearGradientBrush x:Key="MenuPopupBrush"
                                             EndPoint="0.5,1"
                                             StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource ControlLightColor}"
                                          Offset="0" />
                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                          Offset="0.5" />
                            <GradientStop Color="{DynamicResource ControlLightColor}"
                                          Offset="1" />
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                                             StartPoint="0,0"
                                             EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#000000FF"
                                                  Offset="0" />
                                    <GradientStop Color="#600000FF"
                                                  Offset="0.4" />
                                    <GradientStop Color="#600000FF"
                                                  Offset="0.6" />
                                    <GradientStop Color="#000000FF"
                                                  Offset="1" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <Style x:Key="{x:Type StatusBar}"
                               TargetType="{x:Type StatusBar}">
                            <Setter Property="SnapsToDevicePixels"
                                    Value="True" />
                            <Setter Property="OverridesDefaultStyle"
                                    Value="true" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type StatusBar}">
                                        <Border Padding="1">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush StartPoint="0,0"
                                                                     EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStopCollection>
                                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                                                          Offset="0.0" />
                                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                                          Offset="1.0" />
                                                        </GradientStopCollection>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0"
                                                                     EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStopCollection>
                                                            <GradientStop Color="{DynamicResource ControlLightColor}"
                                                                          Offset="0.0" />
                                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                                          Offset="1.0" />
                                                        </GradientStopCollection>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>

                                            </Border.Background>
                                            <ItemsPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}"
                               TargetType="{x:Type Separator}">
                            <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                            <Setter Property="SnapsToDevicePixels"
                                    Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Separator}">
                                        <Rectangle Width="1"
                                                   Margin="3">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="{x:Type StatusBarItem}"
                               TargetType="{x:Type StatusBarItem}">
                            <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type StatusBarItem}">
                                        <ContentPresenter Margin="3"
                                                          Name="ContentSite" />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled"
                                                     Value="false">
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <SolidColorBrush
                                                            Color="{StaticResource DisabledForegroundColor}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" VerticalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="0.00001" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <AdornerDecorator VerticalAlignment="Stretch">
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Content="{Binding Document.Content,RelativeSource={RelativeSource TemplatedParent}}" />
                            </AdornerDecorator>
                            <StatusBar Grid.Row="2" FontSize="22">
                                <StatusBarItem>
                                    <WrapPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Title,FallbackValue=Untitled}" />
                                        <TextBlock Text=" - " />
                                        <TextBlock Text="{Binding Title}" />
                                    </WrapPanel>
                                </StatusBarItem>
                            </StatusBar>
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ControlView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ControlView}">
                    <ControlTemplate.Resources>
                        <local:MetaLazyTypeConverter x:Key="MetaLazyTypeConverter" />
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToolBarTray>
                                <ToolBar Band="1" BandIndex="1">
                                    <TextBlock
                                        Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Controls.Count}" />
                                </ToolBar>
                            </ToolBarTray>
                            <ListView Grid.Row="1" Grid.Column="0" x:Name="ListView"
                                      ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Controls}">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn DisplayMemberBinding="{Binding Title}" />
                                        <GridViewColumn DisplayMemberBinding="{Binding Category}" />
                                        <GridViewColumn>
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type local:ControlInfo}">
                                                    <TextBlock
                                                        Text="{Binding Item,Converter={StaticResource MetaLazyTypeConverter}}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn>
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type local:ControlInfo}">
                                                    <Button Content="Open" Command="Open"
                                                            CommandParameter="{Binding Item}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>

                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="JsonNodeFocusVisualStyle" TargetType="{x:Type local:JsonNodeView}" />
    <Style x:Key="JsonNodeCollapsedStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontStyle" Value="Italic" />
    </Style>
    <Style TargetType="{x:Type local:JsonNodeView}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource JsonNodeFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:JsonNodeView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource SelectedBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)"
                                            Storyboard.TargetName="Bd">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Bd" Background="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock xml:space="preserve">{</TextBlock>
                                    <TextBlock Text="{TemplateBinding Header}" />
                                    <TextBlock Text=" : " />
                                </StackPanel>
                            </Border>
                            <TextBlock Grid.Column="1" x:Name="CollapsedBlock"
                                       Style="{StaticResource JsonNodeCollapsedStyle}">
                                {object}
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="CollapsedBlock" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MyRibbonMenuItem}">
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Background" Value="Transparent" />
        <Setter Property="Control.BorderBrush" Value="Transparent" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Padding" Value="3,2,3,2" />
        <Setter Property="RibbonMenuItem.MouseOverBorderBrush"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
        <Setter Property="RibbonMenuItem.MouseOverBackground"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
        <Setter Property="RibbonMenuItem.PressedBorderBrush"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
        <Setter Property="RibbonMenuItem.PressedBackground"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
        <Setter Property="RibbonMenuItem.CheckedBorderBrush"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
        <Setter Property="RibbonMenuItem.CheckedBackground"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
        <Setter Property="RibbonControlService.FocusedBorderBrush"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
        <Setter Property="RibbonControlService.FocusedBackground"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
        <Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MyRibbonMenuItem}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Border x:Name="Border" Background="{TemplateBinding Control.Background}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="22" Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="14" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="PART_SideBarBorder" Margin="0,-1,0,-1" BorderThickness="0,0,1,0"
                                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}"
                                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                    <Grid x:Name="SideBarOverlay" Background="{StaticResource ì}">
                                        <Image x:Name="Image" Width="16" Height="16" Margin="4,3,6,1"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               Source="{TemplateBinding RibbonMenuItem.ImageSource}" />
                                        <Border x:Name="CheckMarkBorder"
                                                Background="{TemplateBinding RibbonMenuItem.CheckedBackground}"
                                                BorderBrush="{TemplateBinding RibbonMenuItem.CheckedBorderBrush}"
                                                BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Margin="1" Width="20" Height="20" CornerRadius="2">
                                            <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Fill="{TemplateBinding Control.Foreground}"
                                                  FlowDirection="LeftToRight" Data="{StaticResource ï}" />
                                        </Border>
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true" />
                                <Path x:Name="Arrow" Visibility="Collapsed" Grid.Column="2" VerticalAlignment="Center"
                                      HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}"
                                      Data="{StaticResource ð}" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
                               Focusable="false"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                               IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent"
                                                            KeyTipService.IsKeyTipScope="true"
                                                            RenderOptions.ClearTypeHint="Enabled">
                                <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
                                        CornerRadius="2"
                                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                    <Border x:Name="SubMenuInnerBorder" Background="{StaticResource Ñ}"
                                            CornerRadius="2">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="BackgroundCanvas" Height="0" Width="0"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Top">
                                                        <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                                                   Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                                                   Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"
                                                                   Fill="{Binding ElementName=MenuBorder, Path=Background}" />
                                                        <Rectangle x:Name="OverlayRect" Fill="{StaticResource Ñ}"
                                                                   RadiusX="2" RadiusY="2"
                                                                   Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                                                   Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" />
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" Margin="2"
                                                                    Grid.IsSharedSizeScope="true"
                                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                </Grid>
                                            </ScrollViewer>
                                            <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed"
                                                    Background="{StaticResource Ò}"
                                                    BorderThickness="0,1,0,0"
                                                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                                <Thumb x:Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Border>
                            </classic:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll"
                                 Value="false">
                            <Setter TargetName="OpaqueRect"
                                    Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                                    Property="Canvas.Top" />
                            <Setter TargetName="OpaqueRect"
                                    Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                    Property="Canvas.Left" />
                            <Setter TargetName="OverlayRect"
                                    Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                                    Property="Canvas.Top" />
                            <Setter TargetName="OverlayRect"
                                    Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                    Property="Canvas.Left" />
                        </Trigger>
                        <Trigger Property="RibbonMenuItem.HasGallery" Value="true">
                            <Setter TargetName="PART_SubMenuScrollViewer"
                                    Property="ScrollViewer.HorizontalScrollBarVisibility"
                                    Value="Disabled" />
                            <Setter TargetName="PART_SubMenuScrollViewer"
                                    Property="ScrollViewer.VerticalScrollBarVisibility"
                                    Value="Disabled" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.HasItems" Value="true" />
                                <Condition Property="MenuItem.IsCheckable" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="RibbonMenuItem.CanUserResizeHorizontally" Value="true" />
                                <Condition Property="RibbonMenuItem.CanUserResizeVertically" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="RibbonMenuItem.CanUserResizeHorizontally" Value="false" />
                                <Condition Property="RibbonMenuItem.CanUserResizeVertically" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}"
                                    Property="FrameworkElement.Style" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="RibbonMenuItem.IsDropDownPositionedLeft" Value="true" />
                                <Condition Property="RibbonMenuItem.CanUserResizeHorizontally" Value="true" />
                                <Condition Property="RibbonMenuItem.CanUserResizeVertically" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}"
                                    Property="FrameworkElement.Style" />
                        </MultiTrigger>
                        <Trigger Value="{x:Null}" Property="RibbonMenuItem.ImageSource">
                            <Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="MenuItem.IsCheckable" Value="true">
                            <Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shadow" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shadow" Value="{StaticResource Ö}"
                                    Property="classic:SystemDropShadowChrome.Color" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
                            <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                                    Property="Border.Background" />
                            <Setter TargetName="Border"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent" />
                            <Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent" />
                            <Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="MenuItem.IsPressed" Value="true">
                            <Setter TargetName="Border"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                                    Property="Border.Background" />
                            <Setter TargetName="Border"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent" />
                            <Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent" />
                            <Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                            <Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                            <Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5" />
                            <Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                        </Trigger>
                        <DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                            <Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                            <Setter TargetName="MainGrid"
                                    Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                    Property="TextElement.Foreground" />
                            <Setter TargetName="Arrow"
                                    Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                    Property="Shape.Fill" />
                            <Setter TargetName="Border" Property="Border.CornerRadius" Value="0" />
                            <Setter TargetName="Border" Property="Border.Background" Value="Transparent" />
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="Transparent" />
                            <Setter TargetName="CheckMark"
                                    Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                    Property="Shape.Fill" />
                            <Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                            <Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                            <Setter TargetName="CheckMarkBorder"
                                    Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                    Property="Border.Background" />
                            <Setter TargetName="CheckMarkBorder"
                                    Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                            <Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color"
                                    Value="Transparent" />
                            <Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent" />
                            <Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent" />
                            <Setter TargetName="PART_SideBarBorder"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="PART_SubMenuScrollViewer"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                    Property="Control.Foreground" />
                            <Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent" />
                            <Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0" />
                            <Setter TargetName="MenuBorder"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="MenuBorder"
                                    Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                    Property="Border.Background" />
                            <Setter TargetName="ResizeControl"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="ResizeControl"
                                    Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                    Property="Border.Background" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainGrid"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                    Property="TextElement.Foreground" />
                            <Setter TargetName="Arrow"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                    Property="Shape.Fill" />
                            <Setter TargetName="CheckMark"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="Shape.Fill" />
                            <Setter TargetName="Border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="Border.Background" />
                            <Setter TargetName="Border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainGrid"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                    Property="TextElement.Foreground" />
                            <Setter TargetName="Border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="Border.Background" />
                            <Setter TargetName="Border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainGrid"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="TextElement.Foreground" />
                            <Setter TargetName="Arrow" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="Arrow"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Shape.Fill" />
                            <Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="CheckMarkBorder"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Border.BorderBrush" />
                            <Setter TargetName="CheckMark"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Property="Shape.Fill" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type controls:TraceSourcesView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TraceSourcesView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <local:CustomTreeView
                                ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=RootNodes}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TextControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextControl}">
                    <Border Background="{TemplateBinding Background}"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Grid">
                            <Grid.Resources>

                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="10" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="ScrollViewer" HorizontalContentAlignment="Left"
                                          VerticalContentAlignment="Top">

                                <Grid x:Name="InnerGrid">
                                    <Rectangle x:Name="Rectangle" VerticalAlignment="Top" HorizontalAlignment="Left"
                                               Stroke="Aqua"
                                               TextElement.FontSize="12">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="Uniform">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="TextDest" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="Rect2" Panel.ZIndex="100" VerticalAlignment="Top"
                                               HorizontalAlignment="Left">
                                        <Rectangle.Fill>
                                            <DrawingBrush x:Name="DrawingBrush2" AlignmentX="Left" AlignmentY="Top"
                                                          TileMode="None"
                                                          Stretch="Uniform">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup x:Name="DG2" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Canvas x:Name="Canvas" Panel.ZIndex="101" VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch" />

                                </Grid>

                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type typeDescriptors:GenericInterface}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type typeDescriptors:GenericInterface}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type typeDescriptors:GenericInterface3}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type typeDescriptors:GenericInterface3}">

                    <ControlTemplate.Resources>
                        <kmDevWpfControls:GetTypeConverter1 x:Key="GetTypeConverter" />
                        <DataTemplate x:Key="{x:Type system:Enum}" DataType="{x:Type typeDescriptors:InstanceProperty}">
                            <kmDevWpfControls:EnumFlagsSelector EnumValue="{Binding}"
                                                                EnumType="{Binding Converter={StaticResource GetTypeConverter}}" />
                        </DataTemplate>
                        <DataTemplate x:Key="EnumFlags" DataType="{x:Type typeDescriptors:InstanceProperty}">
                            <kmDevWpfControls:EnumFlagsSelector EnumValue="{Binding Value,Mode=TwoWay}"
                                                                EnumType="{Binding Value,Converter={StaticResource GetTypeConverter}}" />
                        </DataTemplate>
                        <local:CTS x:Key="cts" />
                        <DataTemplate x:Key="StandardValues" DataType="{x:Type typeDescriptors:InstanceProperty}">
                            <ComboBox SelectedItem="{Binding Value}"
                                      ItemsSource="{Binding StandardValues}" />
                        </DataTemplate>
                        <DataTemplate x:Key="DefaultValue" DataType="{x:Type typeDescriptors:InstanceProperty}">
                            <ContentPresenter Content="{Binding Value}" />
                        </DataTemplate>
                        <DataTemplate x:Key="String" DataType="{x:Type typeDescriptors:InstanceProperty}">
                            <TextBox Text="{Binding Value,Mode=TwoWay}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type typeDescriptors:InstanceProperty}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Margin="10" Text="{Binding PropertyDescriptor.DisplayName}" />
                                <ContentPresenter Margin="10" Grid.Column="1"
                                                  ContentTemplateSelector="{StaticResource cts}"
                                                  Content="{Binding}" />
                            </Grid>
                        </DataTemplate>
                        <CollectionViewSource x:Key="src"
                                              Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=InstanceProperties}" />

                        <local:InstPropValTempSel x:Key="InstPropValTempSel" />
                    </ControlTemplate.Resources>
                    <Border x:Name="Border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <typeDescriptors:PropItems x:Name="ListView">
                            <typeDescriptors:PropItems.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <kmDevWpfControls:TablePanel ColumnSpacing="20" ColumnBasedOnWidth="True"
                                                                 IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </typeDescriptors:PropItems.ItemsPanel>
                            <typeDescriptors:PropItems.ItemContainerStyle>
                                <Style TargetType="typeDescriptors:PropItem">
                                    <Setter Property="Background" Value="Azure" />
                                </Style>
                            </typeDescriptors:PropItems.ItemContainerStyle>
                        </typeDescriptors:PropItems>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type typeDescriptors:PropItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type typeDescriptors:PropItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding DataContext}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type typeDescriptors:PropItems}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type typeDescriptors:PropItems}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter x:Name="ItemsPresenter" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ContainerView}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ContainerView}">
                    <ControlTemplate.Resources>
                        <Style x:Key="ExpandCollapseToggleStyle"
                               TargetType="kmDevWpfControls:CustomToggleButton1">
                            <Setter Property="Focusable"
                                    Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="kmDevWpfControls:CustomToggleButton1">
                                        <Grid Width="15"
                                              Height="13"
                                              Background="Azure">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup
                                                    x:Name="CheckStates">
                                                    <VisualState x:Name="Checked">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="Collapsed">
                                                                <DiscreteObjectKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="Expanded">
                                                                <DiscreteObjectKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unchecked" />
                                                    <VisualState x:Name="Indeterminate" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Path x:Name="Collapsed"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Margin="1,1,1,1"
                                                  Data="M 4 0 L 8 4 L 4 8 Z">
                                                <Path.Fill>
                                                    <SolidColorBrush
                                                        Color="{DynamicResource GlyphColor}" />
                                                </Path.Fill>
                                            </Path>
                                            <Path x:Name="Expanded"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Margin="1,1,1,1"
                                                  Data="M 0 4 L 8 4 L 4 8 Z"
                                                  Visibility="Hidden">
                                                <Path.Fill>
                                                    <SolidColorBrush
                                                        Color="{DynamicResource GlyphColor}" />
                                                </Path.Fill>
                                            </Path>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="{x:Type kmDevWpfControls:CustomTreeViewItem}"
                               TargetType="{x:Type kmDevWpfControls:CustomTreeViewItem}">
                            <Setter Property="IsExpanded"
                                    Value="{Binding IsExpanded, Mode=OneWay}" />
                            <Setter Property="IsSelected"
                                    Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate
                                        TargetType="{x:Type kmDevWpfControls:CustomTreeViewItem}">
                                        <Grid ShowGridLines="False">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="19"
                                                                  Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup
                                                    x:Name="SelectionStates">
                                                    <VisualState x:Name="Selected">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames
                                                                Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{StaticResource SelectedBackgroundColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unselected" />
                                                    <VisualState
                                                        x:Name="SelectedInactive">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames
                                                                Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{StaticResource SelectedUnfocusedColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup
                                                    x:Name="ExpansionStates">
                                                    <VisualState x:Name="Expanded">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                Storyboard.TargetName="ItemsHost">
                                                                <DiscreteObjectKeyFrame
                                                                    KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Collapsed" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <kmDevWpfControls:CustomToggleButton1 x:Name="Expander"
                                                                                  Style="{StaticResource ExpandCollapseToggleStyle}"
                                                                                  Command="kmDevWpfControls:CustomTreeView.ToggleNodeIsExpanded"
                                                                                  ClickMode="Press"
                                                                                  CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                                  IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />
                                            <Border x:Name="Bd"
                                                    Grid.Row="0" Grid.Column="1"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter
                                                    x:Name="PART_Header"
                                                    ContentSource="Header"
                                                    HorizontalAlignment="Stretch" />
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost"
                                                            Grid.Row="1"
                                                            Grid.Column="1"
                                                            Grid.ColumnSpan="2"
                                                            Visibility="Collapsed" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems"
                                                     Value="false">
                                                <Setter TargetName="Expander"
                                                        Property="Visibility"
                                                        Value="Hidden" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="HasHeader"
                                                               Value="false" />
                                                    <Condition Property="Width"
                                                               Value="Auto" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="PART_Header"
                                                        Property="MinWidth"
                                                        Value="75" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="HasHeader"
                                                               Value="false" />
                                                    <Condition Property="Height"
                                                               Value="Auto" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="PART_Header"
                                                        Property="MinHeight"
                                                        Value="19" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <HierarchicalDataTemplate DataType="{x:Type local:LifetimeScopeNode}"
                                                  ItemsSource="{Binding Items}">
                            <TextBlock Text="{Binding Header}" />
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type local:RegNode}" ItemsSource="{Binding Items}">
                            <TextBlock Text="{Binding Header}" />
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type local:InstanceNode}" ItemsSource="{Binding Items}">
                            <TextBlock Text="{Binding Header}" />
                        </HierarchicalDataTemplate>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <kmDevWpfControls:CustomTreeView x:Name="TreeView" Grid.RowSpan="2"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Root}" />
                            <GroupBox Header="Selected" Grid.Column="1" TextElement.FontSize="14">
                                <ScrollViewer>
                                    <StackPanel>
                                        <ContentPresenter Content="{Binding ElementName=TreeView,Path=SelectedItem.NodeItem}" Grid.Column="1">
                                            <ContentPresenter.Resources>
                                                <DataTemplate DataType="{x:Type lifetime:LifetimeScope}">
                                                    <StackPanel>
                                                        <GroupBox Header="Tag">
                                                            <ContentPresenter Content="{Binding Path=Tag}"/>
                                                        </GroupBox>
                                                        <GroupBox Header="Parent" Margin="10,0,0,0">
                                                            <ContentPresenter Content="{Binding Path=ParentLifetimeScope}"/>
                                                        </GroupBox>
                                                    </StackPanel>
                                                </DataTemplate>

                                                <DataTemplate DataType="{x:Type dev:InstanceInfo}">
                                                    <StackPanel>
                                                        <ContentPresenter Content="{Binding Instance}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                                <DataTemplate DataType="{x:Type reg:ComponentRegistration}">
                                                    <StackPanel>
                                                        <WrapPanel>
                                                            <Button Content="Resolve" Command="wpf:WpfAppCommands.ResolveComponent" CommandParameter="{Binding}" CommandTarget="{x:Reference Name=B1}"/>
                                                        </WrapPanel>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="2*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="Id"/>
                                                            <ContentPresenter Content="{Binding Path=Id}" Grid.Column="1"/>
                                                            <TextBlock Text="Activator" Grid.Row="1"/>
                                                            <ContentPresenter Content="{Binding Path=Activator}" Grid.Column="1" Grid.Row="1"/>
                                                            <GroupBox Header="Metadata" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                                                                <GroupBox.Style>
                                                                    <Style TargetType="GroupBox">
                                                                        <Setter Property="HeaderTemplate">
                                                                            <Setter.Value>
                                                                            <DataTemplate>
                                                                                <TextBlock FontSize="18" Text="{Binding}"/>
                                                                            </DataTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </GroupBox.Style>
                                                                <ItemsControl ItemsSource="{Binding Metadata}">
                                                                    <ItemsControl.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <StackPanel Orientation="Horizontal">
                                                                                <TextBlock Text="{Binding Key}"/>
                                                                                <TextBlock Text="{Binding Value}" Margin="10,0,0,0"/>
                                                                            </StackPanel>
                                                                        </DataTemplate>
                                                                    </ItemsControl.ItemTemplate>
                                                                </ItemsControl>
                                                            </GroupBox>
                                                        </Grid>
                                                    </StackPanel>
                                                </DataTemplate>

                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </StackPanel>
                                </ScrollViewer>
                            </GroupBox>
                            <Border Grid.Row="1" Grid.Column="1" x:Name="B1"></Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PowerShellTemplate" TargetType="{x:Type local:PowerShellConsole}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <wpfTerminalControlLib:WpfTerminalControl DiagnosticsEnabled="True" ForegroundColor="Black"
                                                      BackgroundColor="White" AutoResize="True" Grid.Row="1"
                                                      CursorBrush="DarkOrange" x:Name="Terminal"
                                                      BorderBrush="Green" BorderThickness="1" Focusable="False" />
            <wpfTerminalControlLib:WrappedPowerShell x:Name="Shell" Terminal="{x:Reference Terminal}" />
            <wpfTerminalControlLib:WpfInputLine LineMode="True" InputOnly="True" CursorBrush="Azure" x:Name="Input"
                                                BorderBrush="Red"
                                                BorderThickness="1" AutoResize="True" Grid.Row="2" Focusable="True" />
            <StatusBar Grid.Row="3">
                <TextBlock x:Name="MainStatus" Width="200" />
                <ProgressBar Width="200" Maximum="100" x:Name="ProgressBar" />
            </StatusBar>
        </Grid>

    </ControlTemplate>
    <Style TargetType="{x:Type local:PowerShellConsole}">
        <Setter Property="Template" Value="{StaticResource PowerShellTemplate}" />
    </Style>
    <Style TargetType="{x:Type analysisControl:SubjectView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type analysisControl:SubjectView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border BorderBrush="Red" BorderThickness="5">
                            <ItemsPresenter />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type analysisControl:SubjectView2}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type analysisControl:SubjectView2}">
                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                        <Border BorderBrush="Red" BorderThickness="5">
                            <DataGrid ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Items}"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>