<windows:ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:classic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
                            xmlns:controls="clr-namespace:System.Windows.Controls"
                            xmlns:ribbon="clr-namespace:System.Windows.Controls.Ribbon"
                            xmlns:primitives="clr-namespace:System.Windows.Controls.Ribbon.Primitives"
                            xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
                            xmlns:windows="clr-namespace:System.Windows;assembly=PresentationFramework"
                            xmlns:coreInternal="clr-namespace:MS.Internal;assembly=PresentationCore"
                            xmlns:system="clr-namespace:System;assembly=mscorlib">
  <windows:Style TargetType="{x:Type ribbon:RibbonControl}">
    <windows:Style.Triggers>
      <windows:DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.MinWidth.RibbonControlLengthUnitType}"
                           Value="Pixel">
        <windows:Setter Property="windows:FrameworkElement.MinWidth"
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.MinWidth.Value}"/>
      </windows:DataTrigger>
      <windows:DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.MaxWidth.RibbonControlLengthUnitType}"
                           Value="Pixel">
        <windows:Setter Property="windows:FrameworkElement.MaxWidth"
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.MaxWidth.Value}"/>
      </windows:DataTrigger>
      <windows:DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.RibbonControlLengthUnitType}"
                           Value="Pixel">
        <windows:Setter Property="windows:FrameworkElement.Width"
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.Value}"/>
      </windows:DataTrigger>
      <windows:DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.RibbonControlLengthUnitType}"
                           Value="Auto">
        <windows:Setter Property="windows:FrameworkElement.Width" Value="Auto"/>
      </windows:DataTrigger>
    </windows:Style.Triggers>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonControl}">
          <ribbon:RibbonContentPresenter x:Name="PART_ContentPresenter"/>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonContextualTabGroupItemsControl}">
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonContextualTabGroupItemsControl}">
          <Border Background="{windows:TemplateBinding Control.Background}">
            <ItemsPresenter/>
          </Border>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <RadialGradientBrush x:Key="Đ" GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1">
    <GradientStop Offset="0" Color="#FFFFFFFF"/>
    <GradientStop Offset="1" Color="#77FFFFFF"/>
  </RadialGradientBrush>
  <windows:Style TargetType="{x:Type ribbon:RibbonContextualTabGroup}">
    <windows:Setter Property="windows:FrameworkElement.Height"
                    Value="{Binding Path=(SystemParameters.WindowCaptionHeight)}"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="UIElement.Focusable" Value="false"/>
    <windows:Setter Property="TextBlock.TextAlignment" Value="Center"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonContextualTabGroup}">
          <windows:FrameworkTemplate.Resources>
            <windows:DataTemplate DataType="{x:Type system:String}">
              <TextBlock Text="{windows:TemplateBinding ContentPresenter.Content}" TextTrimming="CharacterEllipsis"/>
            </windows:DataTemplate>
          </windows:FrameworkTemplate.Resources>
          <Border x:Name="OuterBorder" Padding="{windows:TemplateBinding Control.Padding}"
                  Background="{windows:TemplateBinding Control.Background}"
                  BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                  BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="2,2,0,0"
                  RenderOptions.ClearTypeHint="Enabled">
            <Border x:Name="InnerBorder" Background="{windows:StaticResource Đ}"
                    BorderBrush="{windows:TemplateBinding Control.Background}" BorderThickness="1,1,1,2"
                    CornerRadius="2,2,0,0">
              <ContentPresenter ContentSource="Header" VerticalAlignment="Center" Margin="2,0,2,0"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderThickness" Value="2,2,2,3"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ActiveCaptionBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter Value="{windows:DynamicResource {x:Static windows:SystemColors.ActiveCaptionTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonSeparator}">
    <windows:Setter Property="UIElement.Focusable" Value="false"/>
    <windows:Setter Property="Control.Background"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
          <Border x:Name="MainBorder" BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                  BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                  Background="{windows:TemplateBinding Control.Background}">
            <TextBlock x:Name="Text" Text="{windows:TemplateBinding ribbon:RibbonSeparator.Label}"/>
          </Border>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="Text"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextBlock.Foreground"/>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.Background"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
        <windows:Setter Property="Control.Template">
          <windows:Setter.Value>
            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
              <StackPanel>
                <Line x:Name="Line" X1="0" Y1="0" X2="1" Y2="0" Stroke="{windows:TemplateBinding Control.BorderBrush}"
                      StrokeThickness="1" Stretch="Fill"/>
                <Line x:Name="HighlightLine" X1="0" Y1="0" X2="1" Y2="0" Stroke="White" StrokeThickness="1"
                      Stretch="Fill"/>
              </StackPanel>
              <ControlTemplate.Triggers>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="Line"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.InfoTextBrushKey}}"
                                  Property="Shape.Stroke"/>
                  <windows:Setter TargetName="HighlightLine" Property="Shape.Stroke" Value="Transparent"/>
                </windows:DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </windows:Setter.Value>
        </windows:Setter>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <LinearGradientBrush x:Key="Û" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#FFFEFBF4"/>
    <GradientStop Offset="0.19" Color="#FFFDE7CE"/>
    <GradientStop Offset="0.39" Color="#FFFDDEB8"/>
    <GradientStop Offset="0.39" Color="#FFFFCE6B"/>
    <GradientStop Offset="0.79" Color="#FFFFDE9A"/>
    <GradientStop Offset="1" Color="#FFFFEBAA"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ú" Color="#FFFFB700"/>
  <LinearGradientBrush x:Key="Ý" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#FFE3C085"/>
    <GradientStop Offset="0.19" Color="#FFF4CC89"/>
    <GradientStop Offset="0.36" Color="#FFF5C777"/>
    <GradientStop Offset="0.36" Color="#FFF5BB56"/>
    <GradientStop Offset="0.79" Color="#FFF4CE9A"/>
    <GradientStop Offset="1" Color="#FFF3E28D"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ü" Color="#FFC29B29"/>
  <LinearGradientBrush x:Key="Þ" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#FFFFDCA0"/>
    <GradientStop Offset="0.18" Color="#FFFFD692"/>
    <GradientStop Offset="0.39" Color="#FFFFC45D"/>
    <GradientStop Offset="1" Color="#FFFFD178"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ë" Color="#80FFFFFF"/>
  <SolidColorBrush x:Key="í" Color="#B8FFFFFF"/>
  <SolidColorBrush x:Key="ĉ" Color="#EEFFFFFF"/>
  <SolidColorBrush x:Key="Ë" Color="#FF9E9E9E"/>
  <LinearGradientBrush x:Key="Ă" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#FFE7CBAD"/>
    <GradientStop Offset="0.1" Color="#FFF7D7B5"/>
    <GradientStop Offset="0.36" Color="#FFFFD38C"/>
    <GradientStop Offset="0.36" Color="#FFFFC75A"/>
    <GradientStop Offset="1" Color="#FFFFEFA5"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ď" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#40FFFEFE"/>
    <GradientStop Offset="0.39" Color="#40FFFEFE"/>
    <GradientStop Offset="0.39" Color="#20FFCE68"/>
    <GradientStop Offset="0.69" Color="#20FFCE68"/>
    <GradientStop Offset="1" Color="#10FFFFFF"/>
  </LinearGradientBrush>
  <system:Double x:Key="ą">20.0</system:Double>
  <system:Double x:Key="Ć">22.0</system:Double>
  <system:Double x:Key="ß">91.0</system:Double>
  <system:Double x:Key="á">94.0</system:Double>
  <system:Int32 x:Key="Í">900</system:Int32>
  <system:Int32 x:Key="Î">20000</system:Int32>
  <system:Int32 x:Key="Ï">0</system:Int32>
  <Color x:Key="Ö">#71000000</Color>
  <BooleanToVisibilityConverter x:Key="à"/>
  <Geometry x:Key="Ð">
    M 0 0 L 2.5 3 L 5 0 Z
  </Geometry>
  <Geometry x:Key="ï">
    M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z
  </Geometry>
  <Geometry x:Key="ñ">
    M10,1.2L4.5,7.3 1.5,5 1.5,7.5 4.5,10 4.5,10 10,4Z
  </Geometry>
  <Geometry x:Key="ð">
    M 0,0 L 4,3.5 L 0,7 Z
  </Geometry>
  <SolidColorBrush x:Key="Ñ" Color="#F0FFFFFF"/>
  <SolidColorBrush x:Key="Ò" Color="#FFE5EFF9"/>
  <SolidColorBrush x:Key="ħ" Color="#FF6C747D"/>
  <DrawingBrush x:Key="Ĩ" Viewbox="0,0,3,3" Viewport="0,0,3,3" TileMode="Tile" ViewportUnits="Absolute"
                ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <DrawingGroup.Children>
          <GeometryDrawing Brush="{windows:StaticResource ħ}" Geometry="M 0,0 L 2,0 2,2 0,2 Z"/>
        </DrawingGroup.Children>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <windows:Style x:Key="Ó" TargetType="{x:Type Thumb}">
    <windows:Setter Property="windows:FrameworkElement.Width" Value="11"/>
    <windows:Setter Property="windows:FrameworkElement.Height" Value="11"/>
    <windows:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Bottom"/>
    <windows:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Right"/>
    <windows:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNWSE"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent">
            <Path Margin="0,0,2,2" Data="M 9,0 L 11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3 Z"
                  Fill="{windows:StaticResource Ĩ}"/>
          </Border>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="windows:FrameworkElement.FlowDirection" Value="RightToLeft">
        <windows:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNESW"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style x:Key="ó" TargetType="{x:Type Thumb}">
    <windows:Setter Property="windows:FrameworkElement.Width" Value="11"/>
    <windows:Setter Property="windows:FrameworkElement.Height" Value="11"/>
    <windows:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Bottom"/>
    <windows:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Left"/>
    <windows:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNESW"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent">
            <Path Margin="2,0,0,2" Data="M 0,0 L 2,0 2,3 5,3 5,6 8,6 8,9 11,9 11,11 0,11 Z"
                  Fill="{windows:StaticResource Ĩ}"/>
          </Border>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="windows:FrameworkElement.FlowDirection" Value="RightToLeft">
        <windows:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNWSE"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style x:Key="Õ" TargetType="{x:Type Thumb}">
    <windows:Setter Property="windows:FrameworkElement.Width" Value="11"/>
    <windows:Setter Property="windows:FrameworkElement.Height" Value="11"/>
    <windows:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Top"/>
    <windows:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Right"/>
    <windows:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNESW"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent">
            <Path Margin="0,2,2,0" Data="M 0,0 L 0,3 3,3 3,6 6,6 6,9 9,9 9,11 11,11 11,0 Z"
                  Fill="{windows:StaticResource Ĩ}"/>
          </Border>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="windows:FrameworkElement.FlowDirection" Value="RightToLeft">
        <windows:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNWSE"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style x:Key="Ô" TargetType="{x:Type Thumb}">
    <windows:Setter Property="windows:FrameworkElement.Height" Value="11"/>
    <windows:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNS"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent">
            <Path Margin="0,0,2,2" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                  Fill="{windows:StaticResource Ĩ}">
              <Path.Data>
                <RectangleGeometry Rect="0,0,11,3"/>
              </Path.Data>
            </Path>
          </Border>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <SolidColorBrush x:Key="ī" Color="#88FFFFFF"/>
  <LinearGradientBrush x:Key="Ĭ" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#AAFFFFFF" Offset="0"/>
    <GradientStop Color="#FFFFFF" Offset="1.0"/>
  </LinearGradientBrush>
  <windows:Style TargetType="{x:Type ribbon:RibbonTabHeader}">
    <windows:Setter Property="windows:FrameworkElement.Margin" Value="0,1,0,0"/>
    <windows:Setter Property="Control.Padding" Value="9,1,9,0"/>
    <windows:Setter Property="windows:FrameworkElement.MinHeight" Value="22"/>
    <windows:Setter Property="Control.Background"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="ribbon:RibbonTabHeader.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonTabHeader.CheckedBackground" Value="{windows:StaticResource Ĭ}"/>
    <windows:Setter Property="ribbon:RibbonTabHeader.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonTabHeader.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonTabHeader}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Border x:Name="PART_OuterBorder" Background="{windows:TemplateBinding Control.Background}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}" BorderThickness="1,1,1,0"
                    CornerRadius="3,3,0,0" Margin="2,-1,2.5,0">
              <Border x:Name="InnerBorder" RenderOptions.ClearTypeHint="Enabled" BorderThickness="1,1,1,0"
                      CornerRadius="3,3,0,0" Padding="{windows:TemplateBinding Control.Padding}">
                <ContentPresenter ContentSource="Content" VerticalAlignment="Center" HorizontalAlignment="Center"/>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="PART_OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="PART_OuterBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="PART_OuterBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{x:Null}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{x:Null}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{x:Null}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{x:Null}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ī}" Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder" Property="Border.Background" Value="Transparent"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder" Property="Border.Background" Value="Transparent"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="ribbon:RibbonTabHeader.IsRibbonTabSelected" Value="true">
        <windows:Setter Property="Control.TabIndex" Value="-1"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style x:Key="ĭ" TargetType="{x:Type RepeatButton}">
    <windows:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <windows:Setter Property="UIElement.Focusable" Value="false"/>
    <windows:Setter Property="windows:FrameworkElement.Width" Value="14"/>
    <windows:Setter Property="Control.Background"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).Background}"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).BorderBrush}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Name="OuterBorder" CornerRadius="3,0,0,3" BorderThickness="1"
                  BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                  Background="{windows:TemplateBinding Control.Background}">
            <Border Name="InnerBorder" CornerRadius="3,0,0,3" Background="#80FFFFFF">
              <Path Name="GlyphPath" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#808080"
                    Data="M 4,0 L 0,3.5 4,7 "/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="Control.HorizontalContentAlignment" Value="Right">
              <windows:Setter TargetName="GlyphPath" Property="Path.Data" Value="M 0,0 L 4,3.5 0,7 "/>
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0,3,3,0"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0,3,3,0"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder"
                              Value="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).MouseOverBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder"
                              Value="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).PressedBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="GlyphPath"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <primitives:RibbonScrollButtonVisibilityConverter x:Key="Į"/>
  <ControlTemplate x:Key="į" TargetType="{x:Type ScrollViewer}">
    <Grid x:Name="Grid" Background="{windows:TemplateBinding Control.Background}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{windows:TemplateBinding Control.Padding}"
                              Grid.ColumnSpan="3" Content="{windows:TemplateBinding ContentControl.Content}"
                              ContentTemplate="{windows:TemplateBinding ContentControl.ContentTemplate}"
                              CanContentScroll="{windows:TemplateBinding ScrollViewer.CanContentScroll}"/>
      <RepeatButton Style="{windows:StaticResource ĭ}" HorizontalContentAlignment="Left" Grid.Column="0"
                    Command="{x:Static ScrollBar.LineLeftCommand}" Focusable="false"
                    CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
        <UIElement.Visibility>
          <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{windows:StaticResource Į}" ConverterParameter="0">
            <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
        </UIElement.Visibility>
      </RepeatButton>
      <RepeatButton Style="{windows:StaticResource ĭ}" HorizontalContentAlignment="Right" Grid.Column="2"
                    Command="{x:Static ScrollBar.LineRightCommand}" Focusable="false"
                    CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
        <UIElement.Visibility>
          <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{windows:StaticResource Į}"
                        ConverterParameter="100">
            <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
        </UIElement.Visibility>
      </RepeatButton>
    </Grid>
  </ControlTemplate>
  <windows:Style x:Key="Ī" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <windows:Setter Property="UIElement.Focusable" Value="false"/>
    <windows:Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    <windows:Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <windows:Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <windows:Setter Property="Control.Template" Value="{windows:StaticResource į}"/>
  </windows:Style>
  <ControlTemplate x:Key="Ħ" TargetType="{x:Type ribbon:RibbonToggleButton}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
      <Border x:Name="OuterBorder"
              CornerRadius="{windows:TemplateBinding ribbon:RibbonToggleButton.CornerRadius}"
              Background="{windows:TemplateBinding Control.Background}"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              BorderThickness="{windows:TemplateBinding Control.BorderThickness}"/>
      <Border x:Name="MiddleBorder"
              CornerRadius="{windows:TemplateBinding ribbon:RibbonToggleButton.CornerRadius}"
              Background="Transparent" BorderBrush="Transparent"
              BorderThickness="{windows:TemplateBinding Control.BorderThickness}">
        <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent"
                BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                Padding="{windows:TemplateBinding Control.Padding}"
                CornerRadius="{windows:TemplateBinding ribbon:RibbonToggleButton.CornerRadius}">
          <StackPanel x:Name="StackPanel"
                      HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                      VerticalAlignment="{windows:TemplateBinding Control.VerticalContentAlignment}">
            <Image x:Name="PART_Image" Source="{windows:TemplateBinding ribbon:RibbonToggleButton.LargeImageSource}"
                   Width="32" Height="32" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"
                   HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                   Margin="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}}"/>
            <Grid x:Name="Grid" VerticalAlignment="Center" HorizontalAlignment="Center">
              <ribbon:RibbonTwoLineText x:Name="TwoLineText" Text="{windows:TemplateBinding ribbon:RibbonToggleButton.Label}"
                                        TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center" LineHeight="13px"
                                        LineStackingStrategy="BlockLineHeight"
                                        HasTwoLines="{windows:TemplateBinding ribbon:RibbonTwoLineText.HasTwoLines}"
                                        PathData="{windows:TemplateBinding ribbon:RibbonTwoLineText.PathData}"
                                        PathFill="{windows:TemplateBinding Control.Foreground}" Margin="1,1,1,0"/>
            </Grid>
          </StackPanel>
        </Border>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:DataTrigger Value="Large"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
        <windows:Setter Property="windows:FrameworkElement.Height" Value="66"/>
        <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26"/>
        <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
      </windows:DataTrigger>
      <windows:DataTrigger Value="Small"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter Value="{windows:StaticResource Ć}" Property="windows:FrameworkElement.Height"/>
        <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Margin" Value="1,0,1,0"/>
        <windows:Setter TargetName="PART_Image"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}"
                        Property="Image.Source"/>
        <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Width" Value="16"/>
        <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Height" Value="16"/>
        <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left"/>
        <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="1"/>
        <windows:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                             Value="Small"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter Property="windows:FrameworkElement.Height" Value="Auto"/>
      </windows:MultiDataTrigger>
      <windows:DataTrigger Value="False"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
        <windows:Setter TargetName="TwoLineText" Value="{x:Null}" Property="ribbon:RibbonTwoLineText.Text"/>
        <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="0"/>
      </windows:DataTrigger>
      <windows:DataTrigger Value="Collapsed"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter TargetName="PART_Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:DataTrigger>
      <windows:Trigger Property="UIElement.IsMouseOver" Value="true">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsKeyboardFocused" Value="true">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="PART_Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText" Value="{windows:StaticResource Ë}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
      </windows:Trigger>
      <windows:Trigger Property="ToggleButton.IsChecked" Value="True">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource Ă}" Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="ButtonBase.IsPressed" Value="true">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ToggleButton.IsChecked" Value="True"/>
          <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ToggleButton.IsChecked" Value="True"/>
          <windows:Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ButtonBase.IsPressed" Value="true"/>
          <windows:Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="ribbon:RibbonToggleButton.IsInControlGroup" Value="true">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="Transparent"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="MiddleBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, FallbackValue=false}"
                             Value="True"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MiddleBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="TwoLineText"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="ribbon:RibbonTwoLineText.PathFill"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <windows:Style TargetType="{x:Type ribbon:RibbonToggleButton}">
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CornerRadius" Value="2"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <windows:Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="Control.Template" Value="{windows:StaticResource Ħ}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.QuickAccessToolBarControlSizeDefinition">
      <windows:Setter.Value>
        <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Resources>
      <windows:Thickness Left="1" Top="1" Right="1" Bottom="2"
                         x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}"/>
    </windows:Style.Resources>
  </windows:Style>
  <SolidColorBrush x:Key="Ĉ" Color="#90B1BBC6"/>
  <SolidColorBrush x:Key="ć" Color="#90DEDEDE"/>
  <windows:Style TargetType="{x:Type ribbon:RibbonTextBox}">
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource ĉ}"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="UIElement.AllowDrop" Value="true"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="ribbon:RibbonTextBox.TextBoxWidth" Value="80"/>
    <windows:Setter Property="ribbon:RibbonTextBox.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonTextBox.MouseOverBackground" Value="White"/>
    <windows:Setter Property="ribbon:RibbonTextBox.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonTextBox.FocusedBackground" Value="White"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="ribbon:RibbonTextBox.QuickAccessToolBarControlSizeDefinition">
      <windows:Setter.Value>
        <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonTextBox}">
          <Border x:Name="MainBorder" Margin="1">
            <Grid Margin="1,0,1,0" SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition x:Name="OuterTextColumn" Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Image x:Name="Image" Source="{windows:TemplateBinding ribbon:RibbonTextBox.LargeImageSource}"
                     RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"
                     HorizontalAlignment="Center" Grid.Row="0" Grid.Column="1" Margin="1" Width="32" Height="32"/>
              <Grid x:Name="Grid" Row="1" Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Grid Name="InnerGrid" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition x:Name="TextColumn" Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid x:Name="TwoLineTextPanel" Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ribbon:RibbonTwoLineText x:Name="TwoLineText" Text="{windows:TemplateBinding ribbon:RibbonTextBox.Label}"
                                              TextAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="2,0,2,0"/>
                    <Rectangle x:Name="FocusVisual" Margin="1" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                               Visibility="Collapsed"/>
                  </Grid>
                  <Border x:Name="Border" Grid.Column="1" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                          BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                          Background="{windows:TemplateBinding Control.Background}" Height="{windows:StaticResource ą}"
                          HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0,2,0">
                    <ScrollViewer x:Name="PART_ContentHost" Margin="0,1,0,1"
                                  Width="{windows:TemplateBinding ribbon:RibbonTextBox.TextBoxWidth}" VerticalAlignment="Center"/>
                  </Border>
                </Grid>
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="True"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.IsStar}">
              <windows:Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="*"/>
              <windows:Setter TargetName="OuterTextColumn" Property="ColumnDefinition.Width" Value="*"/>
              <windows:Setter TargetName="PART_ContentHost" Property="windows:FrameworkElement.Width" Value="Auto"/>
              <windows:Setter TargetName="Border" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch"/>
              <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch"/>
              <windows:Setter TargetName="InnerGrid" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Large"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
              <windows:Setter Property="windows:FrameworkElement.Height" Value="66"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="32"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="32"/>
              <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26"/>
              <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Small"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Value="{windows:StaticResource Ć}" Property="windows:FrameworkElement.Height"/>
              <windows:Setter TargetName="Image"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}"
                              Property="Image.Source"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="16"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="16"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Margin" Value="2,0,1,0"/>
              <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="2,0,1,0"/>
              <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="false"/>
              <windows:Setter TargetName="Image" Property="Grid.Column" Value="0"/>
              <windows:Setter TargetName="Image" Property="Grid.Row" Value="1"/>
              <windows:Setter TargetName="InnerGrid" Property="windows:FrameworkElement.Margin" Value="0"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Collapsed"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="False"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
              <windows:Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:Trigger Property="ribbon:RibbonTextBox.ShowKeyboardCues" Value="true">
              <windows:Setter TargetName="FocusVisual" Property="UIElement.Visibility" Value="Visible"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="Border" Value="{windows:StaticResource ć}" Property="Border.Background"/>
              <windows:Setter TargetName="Border" Value="{windows:StaticResource Ĉ}" Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainBorder" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonTextBox.IsInControlGroup" Value="true">
              <windows:Setter TargetName="MainBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowBrushKey}}"
                              Property="Control.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="Border" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="FocusVisual"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                              Property="Shape.Stroke"/>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Resources>
      <windows:Style TargetType="{x:Type ScrollViewer}">
        <windows:Setter Property="ContentControl.ContentTemplate">
          <windows:Setter.Value>
            <windows:DataTemplate>
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle x:Name="OpaqueRect" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}"
                             Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}"
                             Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:Ribbon}}, Path=Background}"/>
                  <Rectangle x:Name="OverlayRect" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}"
                             Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}"
                             Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonTextBox}}, Path=Background}"/>
                </Canvas>
                <ContentPresenter Content="{Binding}"/>
              </Grid>
              <windows:DataTemplate.Triggers>
                <windows:DataTrigger Value="false"
                                     Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}, Path=(ScrollViewer.CanContentScroll)}">
                  <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                                  Property="Canvas.Top"/>
                  <windows:Setter TargetName="OpaqueRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                  Property="Canvas.Left"/>
                  <windows:Setter TargetName="OverlayRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
                  <windows:Setter TargetName="OverlayRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                  Property="Canvas.Left"/>
                </windows:DataTrigger>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
                </windows:DataTrigger>
              </windows:DataTemplate.Triggers>
            </windows:DataTemplate>
          </windows:Setter.Value>
        </windows:Setter>
      </windows:Style>
    </windows:Style.Resources>
  </windows:Style>
  <LinearGradientBrush x:Key="Ê" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#CAFFFFFF" Offset="0"/>
      <GradientStop Color="#20FFFFFF" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <windows:Style TargetType="{x:Type ribbon:RibbonToolTip}">
    <windows:Setter Property="Control.Background"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="Control.FontSize"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.StatusFontSizeKey}}"/>
    <windows:Setter Property="Control.FontStyle"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.StatusFontStyleKey}}"/>
    <windows:Setter Property="Control.FontWeight"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.StatusFontWeightKey}}"/>
    <windows:Setter Property="Control.FontFamily"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.StatusFontFamilyKey}}"/>
    <windows:Setter Property="Control.Foreground"
                    Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"/>
    <windows:Setter Property="ToolTip.HasDropShadow"
                    Value="{windows:DynamicResource {x:Static windows:SystemParameters.DropShadowKey}}"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <windows:Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <windows:Setter Property="Control.Padding" Value="5,5,5,4"/>
    <windows:Setter Property="ToolTip.Placement" Value="Mouse"/>
    <windows:Setter Property="windows:FrameworkElement.Width" Value="318"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonToolTip}">
          <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" UIElement.SnapsToDevicePixels="true" CornerRadius="2"
                                          RenderOptions.ClearTypeHint="Enabled">
            <Border x:Name="Border" Background="{windows:TemplateBinding Control.Background}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}" MinHeight="50" CornerRadius="2">
              <Border x:Name="InnerBorder" Background="{windows:StaticResource Ê}" BorderThickness="0"
                      BorderBrush="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      Padding="{windows:TemplateBinding Control.Padding}" CornerRadius="2">
                <StackPanel>
                  <Grid x:Name="Header">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock x:Name="Title" Text="{windows:TemplateBinding ribbon:RibbonToolTip.Title}" FontWeight="Bold"
                               TextWrapping="Wrap" Grid.ColumnSpan="2"/>
                    <Image x:Name="Image" Margin="7,9,6,4" Source="{windows:TemplateBinding ribbon:RibbonToolTip.ImageSource}"
                           Grid.Row="1" Stretch="None"
                           HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"/>
                    <TextBlock x:Name="Description" Margin="8,8,0,0"
                               Text="{windows:TemplateBinding ribbon:RibbonToolTip.Description}" Grid.Row="1" Grid.Column="1"
                               TextWrapping="Wrap"
                               HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"/>
                  </Grid>
                  <ribbon:RibbonSeparator x:Name="Separator" Margin="0,6,0,0" BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                                          Visibility="Collapsed"/>
                  <Grid x:Name="Footer" Margin="0,4,0,0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Image x:Name="FooterImage" Margin="0,0,7,0" Stretch="None"
                           HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                           Source="{windows:TemplateBinding ribbon:RibbonToolTip.FooterImageSource}"/>
                    <TextBlock x:Name="FooterTitle" Text="{windows:TemplateBinding ribbon:RibbonToolTip.FooterTitle}"
                               FontWeight="Bold" TextWrapping="Wrap" Grid.Column="1"/>
                    <TextBlock x:Name="FooterDescription" Margin="0,0,6,0"
                               Text="{windows:TemplateBinding ribbon:RibbonToolTip.FooterDescription}" TextWrapping="Wrap"
                               Grid.Column="1" Grid.Row="1"/>
                  </Grid>
                </StackPanel>
              </Border>
            </Border>
          </classic:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="ribbon:RibbonToolTip.HasHeader" Value="false">
              <windows:Setter TargetName="Header" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:Trigger>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonToolTip.ImageSource">
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="Description" Property="Grid.Column" Value="0"/>
              <windows:Setter TargetName="Description" Property="Grid.ColumnSpan" Value="2"/>
              <windows:Setter Property="windows:FrameworkElement.Width" Value="210"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonToolTip.HasFooter" Value="true">
              <windows:Setter TargetName="Separator" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="Footer" Property="UIElement.Visibility" Value="Visible"/>
            </windows:Trigger>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonToolTip.FooterDescription">
              <windows:Setter TargetName="FooterDescription" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:Trigger>
            <windows:Trigger Property="ToolTip.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static windows:SystemColors.InfoBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.InfoTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.InfoTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
            </windows:DataTrigger>
            <windows:Trigger Property="ribbon:RibbonToolTip.IsPlacementTargetInRibbonGroup" Value="true">
              <windows:Setter Property="ToolTip.Placement" Value="Custom"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Value="{x:Null}" Property="ribbon:RibbonToolTip.ImageSource"/>
                <windows:Condition Value="{x:Null}" Property="ribbon:RibbonToolTip.Description"/>
                <windows:Condition Property="ribbon:RibbonToolTip.HasFooter" Value="false"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="Border" Property="windows:FrameworkElement.MinHeight" Value="0"/>
              <windows:Setter TargetName="Title" Property="TextBlock.FontWeight" Value="Normal"/>
              <windows:Setter TargetName="Description" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter Property="windows:FrameworkElement.Width" Value="Auto"/>
            </windows:MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonTwoLineText}">
    <windows:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Center"/>
    <windows:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Center"/>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonTwoLineText}">
          <Grid SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Name="PART_TextBlock1"
                       BaselineOffset="{windows:TemplateBinding ribbon:RibbonTwoLineText.BaselineOffset}"
                       LineHeight="{windows:TemplateBinding ribbon:RibbonTwoLineText.LineHeight}"
                       LineStackingStrategy="{windows:TemplateBinding ribbon:RibbonTwoLineText.LineStackingStrategy}"
                       Padding="{windows:TemplateBinding ribbon:RibbonTwoLineText.Padding}"
                       TextAlignment="{windows:TemplateBinding ribbon:RibbonTwoLineText.TextAlignment}"
                       TextDecorations="{windows:TemplateBinding ribbon:RibbonTwoLineText.TextDecorations}"
                       TextEffects="{windows:TemplateBinding ribbon:RibbonTwoLineText.TextEffects}" TextTrimming="None"
                       TextWrapping="NoWrap"
                       VerticalAlignment="{windows:TemplateBinding windows:FrameworkElement.VerticalAlignment}"
                       Grid.Row="0"/>
            <DockPanel Grid.Row="1"
                       HorizontalAlignment="{windows:TemplateBinding windows:FrameworkElement.HorizontalAlignment}">
              <Grid x:Name="pathGrid" MinHeight="{windows:TemplateBinding ribbon:RibbonTwoLineText.LineHeight}"
                    Margin="2,0,0,0" DockPanel.Dock="Right">
                <Path Name="PART_Path" VerticalAlignment="Center"
                      Data="{windows:TemplateBinding ribbon:RibbonTwoLineText.PathData}"
                      Fill="{windows:TemplateBinding ribbon:RibbonTwoLineText.PathFill}"
                      Stroke="{windows:TemplateBinding ribbon:RibbonTwoLineText.PathStroke}"/>
              </Grid>
              <TextBlock Name="PART_TextBlock2" Margin="0,0,2,0"
                         BaselineOffset="{windows:TemplateBinding ribbon:RibbonTwoLineText.BaselineOffset}"
                         LineHeight="{windows:TemplateBinding ribbon:RibbonTwoLineText.LineHeight}"
                         LineStackingStrategy="{windows:TemplateBinding ribbon:RibbonTwoLineText.LineStackingStrategy}"
                         Padding="{windows:TemplateBinding ribbon:RibbonTwoLineText.Padding}"
                         TextAlignment="{windows:TemplateBinding ribbon:RibbonTwoLineText.TextAlignment}"
                         TextDecorations="{windows:TemplateBinding ribbon:RibbonTwoLineText.TextDecorations}"
                         TextEffects="{windows:TemplateBinding ribbon:RibbonTwoLineText.TextEffects}"
                         TextTrimming="{windows:TemplateBinding ribbon:RibbonTwoLineText.TextTrimming}"
                         TextWrapping="NoWrap"
                         VerticalAlignment="{windows:TemplateBinding windows:FrameworkElement.VerticalAlignment}"
                         DockPanel.Dock="Left"/>
            </DockPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonTwoLineText.PathData">
              <windows:Setter TargetName="pathGrid" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:Trigger>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonTwoLineText.Text">
              <windows:Setter TargetName="PART_TextBlock2" Property="windows:FrameworkElement.Margin" Value="0"/>
            </windows:Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonQuickAccessToolBar}">
    <windows:Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="true"/>
    <windows:Setter Property="windows:FrameworkElement.Height"
                    Value="{windows:DynamicResource {x:Static windows:SystemParameters.CaptionHeightKey}}"/>
    <windows:Setter Property="windows:FrameworkElement.Margin" Value="3,-0.5,3,-1.4"/>
    <windows:Setter Property="Control.Background"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonQuickAccessToolBar}">
          <Grid SnapsToDevicePixels="true" Margin="{windows:TemplateBinding windows:FrameworkElement.Margin}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="1"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <UIElement.Effect>
              <DropShadowEffect Color="White" BlurRadius="15.0" ShadowDepth="0"/>
            </UIElement.Effect>
            <primitives:RibbonQuickAccessToolBarPanel Name="PART_MainPanel" IsItemsHost="true" Grid.Column="0"/>
            <ContentPresenter Name="MainCustomizeMenuHost" Grid.Column="2"
                              Content="{Binding Path=CustomizeMenuButton, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Grid x:Name="OverflowButtonHost" Column="2" Visibility="Collapsed">
              <ribbon:RibbonToggleButton x:Name="PART_OverflowButton" Style="{windows:StaticResource {x:Type ribbon:RibbonToggleButton}}"
                                         Width="12" ClickMode="Press" KeyTip="00"
                                         IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ribbon:RibbonToggleButton.ControlSizeDefinition>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                </ribbon:RibbonToggleButton.ControlSizeDefinition>
              </ribbon:RibbonToggleButton>
              <Path HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1,0,0,0" IsHitTestVisible="false"
                    Width="7" Height="5" Fill="{windows:TemplateBinding Control.Foreground}" Stretch="Fill"
                    Stroke="{windows:TemplateBinding Control.Foreground}" Data="M 0,0 L 2,2 0,4 M 4,0 L 6,2 4,4 "/>
              <Popup x:Name="PART_OverflowPopup" AllowsTransparency="true" Placement="Bottom" Focusable="false"
                     PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                     IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shdw" Color="Transparent" UIElement.Focusable="true"
                                                RenderOptions.ClearTypeHint="Enabled" windows:FrameworkElement.FocusVisualStyle="{x:Null}">
                  <Border x:Name="PopupBorder" Background="{windows:TemplateBinding Control.Background}"
                          BorderBrush="{windows:TemplateBinding Control.BorderBrush}" CornerRadius="2" BorderThickness="1"
                          Padding="2">
                    <DockPanel>
                      <primitives:RibbonQuickAccessToolBarOverflowPanel Name="PART_OverflowPanel" KeyboardNavigation.TabNavigation="Cycle"
                                                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                      <ContentPresenter Name="OverflowCustomizeMenuHost" DockPanel.Dock="Right"/>
                    </DockPanel>
                  </Border>
                </classic:SystemDropShadowChrome>
              </Popup>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="false"
                                 Binding="{Binding RelativeSource={RelativeSource AncestorType=ribbon:Ribbon}, Path=ShowQuickAccessToolBarOnTop}">
              <windows:Setter TargetName="PART_MainPanel" Property="windows:FrameworkElement.Margin" Value="2,0,2,0"/>
            </windows:DataTrigger>
            <windows:Trigger Property="ribbon:RibbonQuickAccessToolBar.HasOverflowItems" Value="true">
              <windows:Setter TargetName="OverflowButtonHost" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="MainCustomizeMenuHost" Value="{x:Null}" Property="ContentPresenter.Content"/>
              <windows:Setter TargetName="OverflowCustomizeMenuHost"
                              Value="{Binding Path=CustomizeMenuButton, RelativeSource={RelativeSource TemplatedParent}}"
                              Property="ContentPresenter.Content"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_OverflowPopup" Property="Popup.IsOpen" Value="false">
              <windows:Setter TargetName="PART_OverflowPopup" Property="Popup.PopupAnimation" Value="None"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="PART_OverflowPopup" Property="Popup.PopupAnimation" Value="None"/>
              <windows:Setter TargetName="PopupBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PopupBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PopupBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="Shdw" Property="classic:SystemDropShadowChrome.CornerRadius" Value="0"/>
            </windows:DataTrigger>
            <windows:Trigger SourceName="PART_OverflowPopup" Property="Popup.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shdw" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shdw" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
        <windows:Setter Property="windows:FrameworkElement.Margin" Value="4,0,6,0"/>
      </windows:DataTrigger>
    </windows:Style.Triggers>
  </windows:Style>
  <shell:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeGeneric}"
                      x:Shared="false"/>
  <shell:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeAeroLiteWithGlass}"
                      x:Shared="false" NonClientFrameEdges="Bottom"/>
  <shell:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeAeroLiteBasic}"
                      x:Shared="false"/>
  <shell:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeAeroWithGlass}"
                      x:Shared="false" NonClientFrameEdges="Bottom"/>
  <shell:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeAeroBasic}"
                      x:Shared="false" CornerRadius="9,9,0,0"/>
  <LinearGradientBrush x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=ActiveCaptionGradient}"
                       x:Shared="false" EndPoint="0,0" StartPoint="1,0">
    <GradientStop Color="{windows:DynamicResource {x:Static windows:SystemColors.GradientActiveCaptionColorKey}}"
                  Offset="0"/>
    <GradientStop Color="{windows:DynamicResource {x:Static windows:SystemColors.ActiveCaptionColorKey}}" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=InactiveCaptionGradient}"
                       x:Shared="false" EndPoint="0,0" StartPoint="1,0">
    <GradientStop Color="{windows:DynamicResource {x:Static windows:SystemColors.GradientInactiveCaptionColorKey}}"
                  Offset="0"/>
    <GradientStop Color="{windows:DynamicResource {x:Static windows:SystemColors.InactiveCaptionColorKey}}"
                  Offset="1"/>
  </LinearGradientBrush>
  <primitives:RibbonWindowSmallIconConverter x:Key="İ"/>
  <windows:Style x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=RibbonWindowStyle}"
                 TargetType="{x:Type ribbon:RibbonWindow}">
    <windows:Setter Property="shell:WindowChrome.WindowChrome"
                    Value="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeGeneric}}"/>
    <windows:Setter Property="Control.Background"
                    Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowBrushKey}}"/>
    <windows:Setter Property="Control.BorderBrush" Value="{x:Null}"/>
    <windows:Setter Property="Control.BorderThickness" Value="0"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonWindow}">
          <windows:FrameworkTemplate.Resources>
            <windows:Style TargetType="{x:Type Button}" x:Key="ı">
              <windows:Setter Property="Control.Template">
                <windows:Setter.Value>
                  <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}">
                      <Border x:Name="OuterTopLeftBorder" BorderThickness="1,1,0,0"
                              BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"/>
                      <Border x:Name="OuterBottomRightBorder" BorderThickness="0,0,1,1"
                              BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"/>
                      <Border x:Name="InnerTopLeftBorder" BorderThickness="1,1,0,0" Margin="1"
                              BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"/>
                      <Border x:Name="InnerBottomRightBorder" BorderThickness="0,0,1,1" Margin="1"
                              BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"/>
                      <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <windows:Trigger Property="ButtonBase.IsPressed" Value="true">
                        <windows:Setter TargetName="OuterTopLeftBorder"
                                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"
                                        Property="Border.BorderBrush"/>
                        <windows:Setter TargetName="OuterBottomRightBorder"
                                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                                        Property="Border.BorderBrush"/>
                        <windows:Setter TargetName="InnerTopLeftBorder"
                                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                                        Property="Border.BorderBrush"/>
                        <windows:Setter TargetName="InnerBottomRightBorder"
                                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                                        Property="Border.BorderBrush"/>
                      </windows:Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </windows:Setter.Value>
              </windows:Setter>
            </windows:Style>
          </windows:FrameworkTemplate.Resources>
          <Grid>
            <Border Name="NonClientAreaBorder"
                    BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                    BorderThickness="{Binding Path=(SystemParameters.WindowNonClientFrameThickness)}">
              <Border Name="PART_ClientAreaBorder" Background="{windows:TemplateBinding Control.Background}"
                      BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                      BorderThickness="{windows:TemplateBinding Control.BorderThickness}"/>
            </Border>
            <Border BorderThickness="1,1,0,0"
                    BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"/>
            <Border BorderThickness="0,0,1,1"
                    BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"/>
            <Border Name="WindowHighlightBorder" BorderThickness="1,1,0,0" Margin="1"
                    BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"/>
            <Border Name="WindowShadowBorder" BorderThickness="0,0,1,1" Margin="1"
                    BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"/>
            <Border Name="MiddleBorder" BorderThickness="1" Margin="2"
                    BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ActiveBorderBrushKey}}"/>
            <Grid Name="ButtonPanel" VerticalAlignment="Top"
                  Margin="{Binding Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                  Height="{Binding Path=(shell:WindowChrome.WindowChrome).CaptionHeight, RelativeSource={RelativeSource TemplatedParent}}"
                  Background="{windows:DynamicResource {windows:ComponentResourceKey ResourceId=ActiveCaptionGradient, TypeInTargetAssembly={x:Type ribbon:Ribbon}}}">
              <Image Name="PART_Icon" shell:WindowChrome.IsHitTestVisibleInChrome="true" Margin="3,0,0,0"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon, Converter={windows:StaticResource İ}}"
                     Width="{Binding Path=(SystemParameters.SmallIconWidth)}"
                     Height="{Binding Path=(SystemParameters.SmallIconHeight)}"/>
              <Grid HorizontalAlignment="Right" Height="{Binding Path=(SystemParameters.WindowCaptionButtonHeight)}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{Binding Path=(SystemParameters.WindowCaptionButtonWidth)}"/>
                  <ColumnDefinition Width="{Binding Path=(SystemParameters.WindowCaptionButtonWidth)}"/>
                  <ColumnDefinition Width="2"/>
                  <ColumnDefinition Width="{Binding Path=(SystemParameters.WindowCaptionButtonWidth)}"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Margin="4,2,-4,3" Padding="0,0,2,0">
                  <Button Name="PART_MinimizeWindowButton" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                          Command="windows:SystemCommands.MinimizeWindowCommand" Focusable="false"
                          Style="{windows:StaticResource ı}">
                    <Path x:Name="MinimizeWindowButtonGlyph"
                          Stroke="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                          StrokeThickness="2">
                      <Path.Data>
                        <PathGeometry>
                          <PathFigure StartPoint="0,6">
                            <LineSegment Point="6,6"/>
                          </PathFigure>
                        </PathGeometry>
                      </Path.Data>
                    </Path>
                  </Button>
                </Border>
                <Border Grid.Column="1" Margin="2,2,-2,3" Padding="0,0,2,0">
                  <Grid>
                    <Button Name="PART_RestoreWindowButton" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                            Command="windows:SystemCommands.RestoreWindowCommand" Focusable="false"
                            Style="{windows:StaticResource ı}" Visibility="Collapsed">
                      <Path x:Name="RestoreWindowButtonGlyph"
                            Stroke="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                            StrokeThickness="1">
                        <Path.Data>
                          <PathGeometry>
                            <PathFigure StartPoint="0,3" IsClosed="false">
                              <LineSegment Point="0,8"/>
                              <LineSegment Point="5,8"/>
                              <LineSegment Point="5,3"/>
                              <LineSegment Point="0,3"/>
                              <LineSegment Point="0,4"/>
                              <LineSegment Point="5,4"/>
                              <LineSegment Point="5,5"/>
                              <LineSegment Point="7,5"/>
                              <LineSegment Point="7,0"/>
                              <LineSegment Point="2,0"/>
                              <LineSegment Point="2,1"/>
                              <LineSegment Point="7,1"/>
                            </PathFigure>
                            <PathFigure StartPoint="2,1" IsClosed="false">
                              <LineSegment Point="2,3"/>
                            </PathFigure>
                          </PathGeometry>
                        </Path.Data>
                      </Path>
                    </Button>
                    <Button Name="PART_MaximizeWindowButton" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                            Command="windows:SystemCommands.MaximizeWindowCommand" Focusable="false"
                            Style="{windows:StaticResource ı}">
                      <Path x:Name="MaximizeWindowButtonGlyph"
                            Stroke="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                            StrokeThickness="1">
                        <Path.Data>
                          <PathGeometry>
                            <PathFigure StartPoint="0,0" IsClosed="false">
                              <LineSegment Point="0,8"/>
                              <LineSegment Point="8,8"/>
                              <LineSegment Point="8,0"/>
                              <LineSegment Point="0,0"/>
                            </PathFigure>
                            <PathFigure StartPoint="0.5,1">
                              <LineSegment Point="7.5,1"/>
                            </PathFigure>
                          </PathGeometry>
                        </Path.Data>
                      </Path>
                    </Button>
                  </Grid>
                </Border>
                <Border Grid.Column="3" Margin="0,2,0,3" Padding="0,0,2,0">
                  <Button Name="PART_CloseWindowButton" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                          Command="windows:SystemCommands.CloseWindowCommand" Focusable="false"
                          Style="{windows:StaticResource ı}">
                    <Path x:Name="CloseWindowButtonGlyph"
                          Stroke="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                          StrokeThickness="1.5">
                      <Path.Data>
                        <PathGeometry>
                          <PathFigure StartPoint="0,0">
                            <LineSegment Point="8,7"/>
                          </PathFigure>
                          <PathFigure StartPoint="8,0">
                            <LineSegment Point="0,7"/>
                          </PathFigure>
                        </PathGeometry>
                      </Path.Data>
                    </Path>
                  </Button>
                </Border>
              </Grid>
            </Grid>
            <Border BorderThickness="{Binding Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
              <Grid>
                <AdornerDecorator>
                  <ContentPresenter Name="PART_RootContentPresenter"/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" shell:WindowChrome.ResizeGripDirection="BottomRight"
                            HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="false"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="windows:Window.IsActive" Value="false">
              <windows:Setter TargetName="ButtonPanel"
                              Value="{windows:DynamicResource {windows:ComponentResourceKey ResourceId=InactiveCaptionGradient, TypeInTargetAssembly={x:Type ribbon:Ribbon}}}"
                              Property="Panel.Background"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.InactiveBorderBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="windows:Window.WindowState" Value="Maximized">
              <windows:Setter TargetName="PART_MaximizeWindowButton" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="PART_RestoreWindowButton" Property="UIElement.Visibility" Value="Visible"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="PART_MinimizeWindowButton" Property="windows:FrameworkElement.Width" Value="18"/>
              <windows:Setter TargetName="PART_MaximizeWindowButton" Property="windows:FrameworkElement.Width" Value="18"/>
              <windows:Setter TargetName="PART_RestoreWindowButton" Property="windows:FrameworkElement.Width" Value="18"/>
              <windows:Setter TargetName="PART_CloseWindowButton" Property="windows:FrameworkElement.Width" Value="18"/>
            </windows:DataTrigger>
            <windows:Trigger Value="{x:Null}" Property="windows:Window.Icon">
              <windows:Setter TargetName="PART_Icon" Property="Image.Source"
                              Value="/System.Windows.Controls.Ribbon;component/Images/DefaultSystemIcon.png"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="windows:Window.ResizeMode" Value="CanResizeWithGrip"/>
                <windows:Condition Property="windows:Window.WindowState" Value="Normal"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible"/>
            </windows:MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <SolidColorBrush x:Key="Ø" Color="#60FFFFFF"/>
  <SolidColorBrush x:Key="È" Color="#DFE9F5"/>
  <SolidColorBrush x:Key="É" Color="#B9C9DA"/>
  <LinearGradientBrush x:Key="Ù" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientStop Color="#EEFFFFFF" Offset="0.0"/>
    <GradientStop Color="#BBFFFFFF" Offset="0.1"/>
    <GradientStop Color="#05FFFFFF" Offset="0.5"/>
    <GradientStop Color="#20FFFFFF" Offset="1.0"/>
  </LinearGradientBrush>
  <windows:Style TargetType="{x:Type ribbon:Ribbon}">
    <windows:Style.Resources>
      <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">Fade</PopupAnimation>
    </windows:Style.Resources>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource È}"/>
    <windows:Setter Property="Control.BorderBrush" Value="{windows:StaticResource É}"/>
    <windows:Setter Property="ribbon:Ribbon.MouseOverBorderBrush" Value="{windows:StaticResource Ú}"/>
    <windows:Setter Property="ribbon:Ribbon.MouseOverBackground" Value="{windows:StaticResource Û}"/>
    <windows:Setter Property="ribbon:Ribbon.PressedBorderBrush" Value="{windows:StaticResource Ü}"/>
    <windows:Setter Property="ribbon:Ribbon.PressedBackground" Value="{windows:StaticResource Ý}"/>
    <windows:Setter Property="ribbon:Ribbon.CheckedBorderBrush" Value="{windows:StaticResource Ü}"/>
    <windows:Setter Property="ribbon:Ribbon.CheckedBackground" Value="{windows:StaticResource Þ}"/>
    <windows:Setter Property="ribbon:Ribbon.FocusedBorderBrush" Value="{windows:StaticResource Ú}"/>
    <windows:Setter Property="ribbon:Ribbon.FocusedBackground" Value="{windows:StaticResource Û}"/>
    <windows:Setter Property="Control.FontSize"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.MenuFontSizeKey}}"/>
    <windows:Setter Property="Control.FontStyle"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.MenuFontStyleKey}}"/>
    <windows:Setter Property="Control.FontWeight"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.MenuFontWeightKey}}"/>
    <windows:Setter Property="Control.FontFamily"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.MenuFontFamilyKey}}"/>
    <windows:Setter Property="Control.Foreground"
                    Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:Ribbon}">
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Name="BackgroundBorder" Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="3"
                    Background="{windows:TemplateBinding Control.Background}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}"/>
            <Border Grid.ColumnSpan="3" Grid.Row="1">
              <Popup x:Name="PART_ITEMSPRESENTERPOPUP" AllowsTransparency="true"
                     PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                     IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shdw" UIElement.Focusable="true" Color="Transparent"
                                                windows:FrameworkElement.Margin="0,0,5,5" RenderOptions.ClearTypeHint="Enabled"
                                                windows:FrameworkElement.FocusVisualStyle="{x:Null}">
                  <Border Name="CollapsedPopupBackgroundBorder" Background="{windows:TemplateBinding Control.Background}">
                    <ContentControl x:Name="popupItemsPresenterHost" Margin="0,1,0,0" Focusable="false"
                                    KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                  </Border>
                </classic:SystemDropShadowChrome>
              </Popup>
            </Border>
            <ContentControl x:Name="mainItemsPresenterHost" Grid.ColumnSpan="3" Grid.Row="2" Focusable="false">
              <Border x:Name="groupsBorder" Background="{windows:StaticResource Ù}"
                      BorderBrush="{windows:TemplateBinding Control.BorderBrush}" BorderThickness="1,0,1,1"
                      Height="{windows:StaticResource ß}" SnapsToDevicePixels="true">
                <Border BorderThickness="0,0,0,1" Margin="0,0,0,1" BorderBrush="{windows:StaticResource Ø}"
                        SnapsToDevicePixels="true">
                  <ItemsPresenter Name="ItemsPresenter"/>
                </Border>
              </Border>
            </ContentControl>
            <Border x:Name="QatBottomHost" Grid.Row="3" Grid.ColumnSpan="3"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}">
              <ContentPresenter x:Name="QatBottomHostContentPresenter" HorizontalAlignment="Left" VerticalAlignment="Center"
                                IsHitTestVisible="true"/>
            </Border>
            <Border Name="titleBarBackground" Grid.ColumnSpan="3" Background="{windows:StaticResource Ù}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}" BorderThickness="0,0,0,1"
                    Visibility="Collapsed"/>
            <DockPanel Grid.Column="0" Grid.ColumnSpan="3" LastChildFill="true"
                       Height="{Binding Path=(SystemParameters.WindowCaptionHeight)}">
              <ContentControl x:Name="windowButtonPlaceHolder" IsHitTestVisible="false" DockPanel.Dock="Right" Focusable="false"
                              Margin="3,0,0,0" Width="{Binding Path=(SystemParameters.WindowCaptionButtonWidth)}"
                              Visibility="{windows:TemplateBinding IsHostedInRibbonWindow, Converter={windows:StaticResource à}}"/>
              <ContentControl x:Name="windowIconPadding" Margin="0,0,3,0" IsHitTestVisible="false" DockPanel.Dock="Left"
                              Focusable="false" Width="{Binding Path=(SystemParameters.SmallIconWidth)}"/>
              <primitives:RibbonTitlePanel x:Name="PART_TitlePanel">
                <Grid x:Name="QatTopHost">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Border x:Name="QatTopHostLeftBorder" Grid.Column="0" Margin="8,2,0,2" Width="3" Background="#77222222"
                          BorderBrush="#66CCCCCC" BorderThickness="1,0,1,0.9" CornerRadius="0,0,2,2"/>
                  <ContentPresenter x:Name="QatTopHostContentPresenter" Grid.Column="1"
                                    Content="{windows:TemplateBinding ribbon:Ribbon.QuickAccessToolBar}" IsHitTestVisible="true"/>
                  <Border x:Name="QatTopHostRightBorder" Grid.Column="2" Margin="0,2,1,2" Width="3" Background="#77222222"
                          BorderBrush="#66CCCCCC" BorderThickness="1,0,1,0.9" CornerRadius="0,0,2,2"/>
                </Grid>
                <ContentPresenter x:Name="PART_TitleHost" ContentSource="Title"
                                  ContentTemplate="{windows:TemplateBinding ribbon:Ribbon.TitleTemplate}"
                                  TextBlock.FontSize="{windows:DynamicResource {x:Static windows:SystemFonts.CaptionFontSizeKey}}"
                                  TextBlock.FontFamily="{windows:DynamicResource {x:Static windows:SystemFonts.CaptionFontFamilyKey}}"
                                  TextBlock.FontWeight="{windows:DynamicResource {x:Static windows:SystemFonts.CaptionFontWeightKey}}"
                                  TextElement.Foreground="{windows:DynamicResource {x:Static windows:SystemColors.ActiveCaptionTextBrushKey}}"
                                  HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}" Margin="3,0"
                                  MinWidth="75" IsHitTestVisible="false"
                                  MinHeight="{Binding Path=(SystemParameters.WindowCaptionHeight)}">
                  <windows:FrameworkElement.Resources>
                    <windows:DataTemplate DataType="{x:Type system:String}">
                      <TextBlock x:Name="titleTextBlock" Margin="0,-2,0,0" Text="{windows:TemplateBinding ContentPresenter.Content}"
                                 TextTrimming="CharacterEllipsis"
                                 HorizontalAlignment="{windows:TemplateBinding windows:FrameworkElement.HorizontalAlignment}"/>
                      <windows:DataTemplate.Triggers>
                        <windows:MultiDataTrigger>
                          <windows:MultiDataTrigger.Conditions>
                            <windows:Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="True"/>
                            <windows:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:Ribbon}, Path=IsHostedInRibbonWindow}"
                                               Value="True"/>
                          </windows:MultiDataTrigger.Conditions>
                          <windows:Setter TargetName="titleTextBlock" Property="UIElement.Effect">
                            <windows:Setter.Value>
                              <DropShadowEffect Color="White" BlurRadius="5.0" ShadowDepth="0"/>
                            </windows:Setter.Value>
                          </windows:Setter>
                        </windows:MultiDataTrigger>
                        <windows:DataTrigger Value="False" Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}">
                          <windows:Setter TargetName="titleTextBlock" Property="windows:FrameworkElement.Margin" Value="0"/>
                          <windows:Setter TargetName="titleTextBlock" Property="windows:FrameworkElement.VerticalAlignment" Value="Center"/>
                        </windows:DataTrigger>
                        <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                          <windows:Setter TargetName="titleTextBlock" Property="windows:FrameworkElement.Margin" Value="0,1,0,0"/>
                        </windows:DataTrigger>
                        <windows:MultiDataTrigger>
                          <windows:MultiDataTrigger.Conditions>
                            <windows:Condition Binding="{Binding Path=(SystemParameters.UxThemeName)}" Value="AeroLite"/>
                            <windows:Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="False"/>
                            <windows:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:Ribbon}, Path=IsHostedInRibbonWindow}"
                                               Value="True"/>
                            <windows:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:RibbonWindow}, Path=WindowState}"
                                               Value="Normal"/>
                          </windows:MultiDataTrigger.Conditions>
                          <windows:Setter TargetName="titleTextBlock" Property="windows:FrameworkElement.Margin" Value="0,0,0,7"/>
                        </windows:MultiDataTrigger>
                      </windows:DataTemplate.Triggers>
                    </windows:DataTemplate>
                  </windows:FrameworkElement.Resources>
                </ContentPresenter>
                <ribbon:RibbonContextualTabGroupItemsControl x:Name="PART_ContextualTabGroupItemsControl" IsHitTestVisible="true"
                                                             shell:WindowChrome.IsHitTestVisibleInChrome="true" HorizontalAlignment="Center"/>
              </primitives:RibbonTitlePanel>
            </DockPanel>
            <ContentPresenter x:Name="applicationMenu" Grid.Row="1"
                              Content="{windows:TemplateBinding ribbon:Ribbon.ApplicationMenu}" VerticalAlignment="Top"/>
            <ribbon:RibbonTabHeaderItemsControl x:Name="TabHeaderItemsControl" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="1"
                                                Grid.Column="1" Margin="1,1,1,0"/>
            <ContentPresenter x:Name="PART_HelpPane" ContentSource="HelpPaneContent"
                              ContentTemplate="{windows:TemplateBinding ribbon:Ribbon.HelpPaneContentTemplate}" Grid.Column="2"
                              Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top"/>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="ribbon:Ribbon.IsCollapsed" Value="true">
              <windows:Setter TargetName="applicationMenu" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="QatBottomHost" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="QatTopHost" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="mainItemsPresenterHost" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="TabHeaderItemsControl" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="PART_HelpPane" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="PART_ContextualTabGroupItemsControl" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="PART_TitleHost" Property="windows:FrameworkElement.MinWidth" Value="0"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:Ribbon.IsCollapsed" Value="true"/>
                <windows:Condition Property="ribbon:Ribbon.IsHostedInRibbonWindow" Value="false"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="ribbon:Ribbon.ShowQuickAccessToolBarOnTop" Value="false">
              <windows:Setter TargetName="QatTopHostContentPresenter" Value="{x:Null}" Property="ContentPresenter.Content"/>
              <windows:Setter TargetName="QatTopHost" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="QatBottomHostContentPresenter"
                              Value="{Binding Path=QuickAccessToolBar, RelativeSource={RelativeSource TemplatedParent}}"
                              Property="ContentPresenter.Content"/>
              <windows:Setter TargetName="BackgroundBorder" Property="Border.BorderThickness" Value="0,0,0,1"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=QuickAccessToolBar.HasItems}"
                                   Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=QuickAccessToolBar.CustomizeMenuButton}"
                                   Value="{x:Null}"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="QatTopHost" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="QatBottomHost" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:MultiDataTrigger>
            <windows:Trigger Property="ribbon:Ribbon.IsMinimized" Value="true">
              <windows:Setter TargetName="mainItemsPresenterHost" Value="{x:Null}" Property="ContentControl.Content"/>
              <windows:Setter TargetName="mainItemsPresenterHost" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="popupItemsPresenterHost" Value="{Binding ElementName=groupsBorder}"
                              Property="ContentControl.Content"/>
              <windows:Setter TargetName="BackgroundBorder" Property="Border.BorderThickness" Value="0,0,0,1"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:Ribbon.WindowIconVisibility" Value="Collapsed">
              <windows:Setter TargetName="windowIconPadding" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:Ribbon.IsMinimized" Value="true"/>
                <windows:Condition Property="ribbon:Ribbon.ShowQuickAccessToolBarOnTop" Value="false"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="QatBottomHost" Property="Border.BorderThickness" Value="0,1,0,0"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="ribbon:Ribbon.IsHostedInRibbonWindow" Value="false">
              <windows:Setter TargetName="BackgroundBorder" Property="Grid.Row" Value="0"/>
              <windows:Setter TargetName="BackgroundBorder" Property="Grid.RowSpan" Value="4"/>
              <windows:Setter TargetName="titleBarBackground" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="windowIconPadding" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:Ribbon.IsDropDownOpen" Value="true">
              <windows:Setter TargetName="BackgroundBorder" Property="Border.BorderThickness" Value="0"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_ITEMSPRESENTERPOPUP" Property="Popup.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shdw" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:RibbonWindow}, Path=IsActive}"
                                   Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHostedInRibbonWindow}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_TitleHost"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.InactiveCaptionTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="BackgroundBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="groupsBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="groupsBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="groupsBorder" Value="{windows:StaticResource á}"
                              Property="windows:FrameworkElement.Height"/>
              <windows:Setter TargetName="QatBottomHost"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="titleBarBackground" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="titleBarBackground"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="CollapsedPopupBackgroundBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_ITEMSPRESENTERPOPUP" Property="Popup.PopupAnimation" Value="None"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="windows:FrameworkElement.Margin" Value="10,1,2,2"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="windows:FrameworkElement.Width" Value="1"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="Border.BorderThickness" Value="0"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="QatTopHostLeftBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="QatTopHostRightBorder" Property="windows:FrameworkElement.Margin" Value="0,1,2,2"/>
              <windows:Setter TargetName="QatTopHostRightBorder" Property="windows:FrameworkElement.Width" Value="1"/>
              <windows:Setter TargetName="QatTopHostRightBorder" Property="Border.BorderThickness" Value="0"/>
              <windows:Setter TargetName="QatTopHostRightBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="QatTopHostRightBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"
                              Property="Border.Background"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Aero" Binding="{Binding Path=(SystemParameters.UxThemeName)}">
              <windows:Setter TargetName="QatTopHost" Property="windows:FrameworkElement.Margin" Value="0,-3,0,0"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="windows:FrameworkElement.Margin" Value="3,3,0,5"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="Border.Background" Value="#81444444"/>
              <windows:Setter TargetName="QatTopHostLeftBorder" Property="Border.BorderBrush" Value="#69EEEEEE"/>
              <windows:Setter TargetName="QatTopHostRightBorder" Property="windows:FrameworkElement.Margin" Value="0,3,1,5"/>
              <windows:Setter TargetName="QatTopHostRightBorder" Property="Border.Background" Value="#81444444"/>
              <windows:Setter TargetName="QatTopHostRightBorder" Property="Border.BorderBrush" Value="#69EEEEEE"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.UxThemeName)}" Value="Aero"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:RibbonWindow}, Path=WindowState}"
                                   Value="Maximized"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="QatTopHost" Property="windows:FrameworkElement.Margin" Value="0"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <ControlTemplate x:Key="î" TargetType="{x:Type ribbon:RibbonApplicationMenuItem}">
    <Border x:Name="Border" Background="{windows:TemplateBinding Control.Background}"
            BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
            BorderBrush="{windows:TemplateBinding Control.BorderBrush}" CornerRadius="2"
            SnapsToDevicePixels="true">
      <Grid Margin="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
          <ColumnDefinition Width="*" MinWidth="44"/>
          <ColumnDefinition Width="22"/>
        </Grid.ColumnDefinitions>
        <Image x:Name="Image" Margin="6,4,6,4" Width="32" Height="32"
               Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center"
               HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
        <Border x:Name="CheckMarkBorder"
                Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
                BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
                BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
                Margin="1" Width="30" Height="30" CornerRadius="2">
          <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
                HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
                FlowDirection="LeftToRight" Data="{windows:StaticResource ï}">
            <UIElement.RenderTransform>
              <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
            </UIElement.RenderTransform>
          </Path>
        </Border>
        <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left"
                          Margin="{windows:TemplateBinding Control.Padding}" RecognizesAccessKey="true"/>
        <Path x:Name="Arrow" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center"
              Fill="{windows:TemplateBinding Control.Foreground}" Data="{windows:StaticResource ð}"
              Visibility="{windows:TemplateBinding HasItems, Converter={windows:StaticResource à}}"/>
        <Popup x:Name="PART_Popup" AllowsTransparency="true"
               PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
               Placement="Relative" Focusable="false" SnapsToDevicePixels="true"
               IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                          RenderOptions.ClearTypeHint="Enabled">
            <Grid>
              <Border x:Name="PopupBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                      CornerRadius="2"
                      BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                      Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Border x:Name="PopupOverlayBorder" BorderBrush="{windows:StaticResource ë}"
                      Background="{windows:StaticResource í}"
                      BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="2">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <ScrollViewer x:Name="PART_SubMenuScrollViewer" CanContentScroll="true" HorizontalScrollBarVisibility="Disabled"
                                Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                   Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                   Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                   Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                        <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                   Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                   Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                   Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                      </Canvas>
                      <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                      KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                    </Grid>
                  </ScrollViewer>
                  <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                          BorderThickness="0,1,0,0"
                          BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                    <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                  </Border>
                </Grid>
              </Border>
            </Grid>
          </classic:SystemDropShadowChrome>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsCheckable" Value="true">
        <windows:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="Border" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="Border" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="Border" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="Arrow"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PopupOverlayBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="Arrow"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ò" TargetType="{x:Type ribbon:RibbonApplicationMenuItem}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
      <Border x:Name="Border" Background="{windows:TemplateBinding Control.Background}"
              BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}" CornerRadius="2">
        <Grid Margin="1">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="44" SharedSizeGroup="MenuItemIconColumnGroup"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="22"/>
          </Grid.ColumnDefinitions>
          <Image x:Name="Image" Margin="6,4,6,4" Width="32" Height="32"
                 Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center"
                 HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
          <Border x:Name="CheckMarkBorder"
                  Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
                  BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
                  BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
                  Margin="1" Width="30" Height="30" CornerRadius="2">
            <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
                  HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
                  FlowDirection="LeftToRight" Data="{windows:StaticResource ï}">
              <UIElement.RenderTransform>
                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
              </UIElement.RenderTransform>
            </Path>
          </Border>
          <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left"
                            Margin="{windows:TemplateBinding Control.Padding}" RecognizesAccessKey="true"/>
          <Path x:Name="Arrow" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center"
                Fill="{windows:TemplateBinding Control.Foreground}" Data="{windows:StaticResource ð}"
                Visibility="{windows:TemplateBinding HasItems, Converter={windows:StaticResource à}}"/>
        </Grid>
      </Border>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
             Focusable="false"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             SnapsToDevicePixels="true"
             IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled">
          <Grid>
            <Border x:Name="PopupBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    CornerRadius="2"
                    BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border x:Name="PopupOverlayBorder" BorderBrush="{windows:StaticResource ë}"
                    Background="{windows:StaticResource í}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="2">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="PART_SubMenuScrollViewer" CanContentScroll="true" HorizontalScrollBarVisibility="Disabled"
                              Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                      <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                      <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                      <Rectangle x:Name="InnerOverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                  </Grid>
                </ScrollViewer>
                <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                  <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                </Border>
              </Grid>
            </Border>
          </Grid>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsCheckable" Value="true">
        <windows:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="Border" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="Border" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="Arrow"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PopupOverlayBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.Foreground"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="Arrow"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ô" TargetType="{x:Type ribbon:RibbonApplicationMenuItem}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
      <Border x:Name="Border" Background="{windows:TemplateBinding Control.Background}"
              BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}" CornerRadius="2">
        <Grid Margin="1">
          <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
            <ColumnDefinition Width="4"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="37"/>
            <ColumnDefinition Width="17"/>
          </Grid.ColumnDefinitions>
          <Image x:Name="Image" Margin="1" Width="16" Height="16"
                 Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center"
                 HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
          <Border x:Name="CheckMarkBorder"
                  Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
                  BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
                  BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
                  Margin="1" Width="20" Height="20" CornerRadius="2">
            <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
                  HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
                  FlowDirection="LeftToRight" Data="{windows:StaticResource ï}"/>
          </Border>
          <ContentPresenter Grid.Column="2" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left"
                            Margin="{windows:TemplateBinding Control.Padding}" RecognizesAccessKey="true"/>
          <Path x:Name="Arrow" Grid.Column="5" VerticalAlignment="Center" Margin="4,0,0,0"
                Fill="{windows:TemplateBinding Control.Foreground}" Data="{windows:StaticResource ð}"
                Visibility="{windows:TemplateBinding HasItems, Converter={windows:StaticResource à}}"/>
        </Grid>
      </Border>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
             Focusable="false"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             SnapsToDevicePixels="true"
             IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled">
          <Grid>
            <Border x:Name="PopupBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    CornerRadius="2"
                    BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border x:Name="PopupOverlayBorder" BorderBrush="{windows:StaticResource ë}"
                    Background="{windows:StaticResource í}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="2">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="PART_SubMenuScrollViewer" CanContentScroll="true"
                              Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                      <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                      <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                      <Rectangle x:Name="InnerOverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                  </Grid>
                </ScrollViewer>
                <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                  <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                </Border>
              </Grid>
            </Border>
          </Grid>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsCheckable" Value="true">
        <windows:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="Border" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="Border" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="Arrow"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PopupOverlayBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.Foreground"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="Arrow"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <windows:Style TargetType="{x:Type ribbon:RibbonApplicationMenuItem}">
    <windows:Setter Property="Control.HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.Padding" Value="3,2,3,2"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonControlService.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonControlService.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="Control.Template" Value="{windows:StaticResource î}"/>
    <windows:Style.Triggers>
      <windows:Trigger Property="ribbon:RibbonApplicationMenuItem.Level" Value="Middle">
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource ò}"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonApplicationMenuItem.Level" Value="Sub">
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource ô}"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <ControlTemplate x:Key="þ" TargetType="{x:Type ribbon:RibbonButton}">
    <Border x:Name="OuterBorder" CornerRadius="{windows:TemplateBinding ribbon:RibbonButton.CornerRadius}"
            Background="{windows:TemplateBinding Control.Background}"
            BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
            BorderThickness="{windows:TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
      <Border x:Name="InnerBorder" BorderBrush="Transparent"
              BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
              Padding="{windows:TemplateBinding Control.Padding}"
              CornerRadius="{windows:TemplateBinding ribbon:RibbonButton.CornerRadius}">
        <StackPanel x:Name="StackPanel">
          <Image x:Name="PART_Image" Source="{windows:TemplateBinding ribbon:RibbonButton.LargeImageSource}"
                 Width="32" Height="32" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"
                 HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                 Margin="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}}"/>
          <Grid x:Name="Grid" VerticalAlignment="Center" HorizontalAlignment="Center">
            <ribbon:RibbonTwoLineText x:Name="TwoLineText" Text="{windows:TemplateBinding ribbon:RibbonButton.Label}"
                                      TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center" LineHeight="13px"
                                      LineStackingStrategy="BlockLineHeight" Margin="1,1,1,0"/>
          </Grid>
        </StackPanel>
      </Border>
    </Border>
    <ControlTemplate.Triggers>
      <windows:DataTrigger Value="Large"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
        <windows:Setter Property="windows:FrameworkElement.Height" Value="66"/>
        <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26"/>
        <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
      </windows:DataTrigger>
      <windows:DataTrigger Value="Small"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter Property="windows:FrameworkElement.Height" Value="22"/>
        <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Margin" Value="1,0,1,0"/>
        <windows:Setter TargetName="PART_Image"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}"
                        Property="Image.Source"/>
        <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Width" Value="16"/>
        <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Height" Value="16"/>
        <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left"/>
        <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="1"/>
        <windows:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                             Value="Small"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter Property="windows:FrameworkElement.Height" Value="Auto"/>
      </windows:MultiDataTrigger>
      <windows:DataTrigger Value="False"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
        <windows:Setter TargetName="TwoLineText" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:DataTrigger>
      <windows:DataTrigger Value="Collapsed"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter TargetName="PART_Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:DataTrigger>
      <windows:Trigger Property="UIElement.IsMouseOver" Value="true">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsKeyboardFocused" Value="true">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="ButtonBase.IsPressed" Value="true">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonButton.IsInControlGroup" Value="true">
        <windows:Setter TargetName="OuterBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="PART_Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="OuterBorder" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, FallbackValue=false}"
                             Value="True"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="OuterBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <windows:Style TargetType="{x:Type ribbon:RibbonButton}">
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="ribbon:RibbonButton.CornerRadius" Value="2"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <windows:Setter Property="ribbon:RibbonButton.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonButton.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonButton.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonButton.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonButton.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="Control.Template" Value="{windows:StaticResource þ}"/>
    <windows:Setter Property="ribbon:RibbonButton.QuickAccessToolBarControlSizeDefinition">
      <windows:Setter.Value>
        <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Resources>
      <windows:Thickness Left="1" Top="1" Right="1" Bottom="2"
                         x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}"/>
    </windows:Style.Resources>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonControlGroup}">
    <windows:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Center"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonControlGroup}">
          <Border x:Name="MainBorder" BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                  BorderThickness="1,1,0,1" CornerRadius="2" SnapsToDevicePixels="true">
            <ItemsPresenter/>
          </Border>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainBorder" Property="Border.CornerRadius" Value="0"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <SolidColorBrush x:Key="Ċ" Color="#FFB5BEDE"/>
  <LinearGradientBrush x:Key="ċ" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Offset="0" Color="#FFE7E7F7"/>
    <GradientStop Offset="1" Color="White"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Č" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Offset="0" Color="#80F7F7FF"/>
    <GradientStop Offset="1" Color="#F0F7F7FF"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="č" x:Shared="false" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Offset="0" Color="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkColorKey}}"/>
    <GradientStop Offset="0.5" Color="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkColorKey}}"/>
    <GradientStop Offset="0.5"
                  Color="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightColorKey}}"/>
    <GradientStop Offset="1"
                  Color="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightColorKey}}"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ď" x:Shared="false" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Offset="0"
                  Color="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkColorKey}}"/>
    <GradientStop Offset="0.5"
                  Color="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkColorKey}}"/>
    <GradientStop Offset="0.5" Color="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightColorKey}}"/>
    <GradientStop Offset="1" Color="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightColorKey}}"/>
  </LinearGradientBrush>
  <windows:Style TargetType="{x:Type ribbon:RibbonCheckBox}">
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource ċ}"/>
    <windows:Setter Property="Control.BorderBrush" Value="{windows:StaticResource Ċ}"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="ribbon:RibbonCheckBox.QuickAccessToolBarControlSizeDefinition">
      <windows:Setter.Value>
        <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonCheckBox}">
          <Border x:Name="MainBorder" Margin="1">
            <StackPanel x:Name="StackPanel" Background="Transparent" Orientation="Vertical" Margin="1"
                        SnapsToDevicePixels="true">
              <Image x:Name="Image" Source="{windows:TemplateBinding ribbon:RibbonCheckBox.LargeImageSource}"
                     RenderOptions.BitmapScalingMode="NearestNeighbor" Height="32" Width="32" Margin="1"
                     VerticalAlignment="Center"
                     HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"/>
              <Grid x:Name="Grid" HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="Center">
                <Grid VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Border x:Name="PART_CheckBorder" Background="White"
                            BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                            BorderThickness="{windows:TemplateBinding Control.BorderThickness}" Height="13" Width="13">
                      <Grid>
                        <Border x:Name="MiddleBorder" BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                                Background="{windows:TemplateBinding Control.Background}" BorderThickness="1" Margin="1"/>
                        <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="{windows:StaticResource Č}"
                                BorderThickness="1" Margin="1"/>
                        <Path x:Name="CheckMark"
                              Stroke="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Fill="{windows:TemplateBinding Control.Foreground}" StrokeThickness="0.4"
                              Data="{windows:StaticResource ï}" FlowDirection="LeftToRight" Opacity="0"/>
                      </Grid>
                    </Border>
                  </Grid>
                  <Image x:Name="SmallImage" Grid.Column="1"
                         Source="{windows:TemplateBinding ribbon:RibbonCheckBox.SmallImageSource}"
                         RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16" Margin="2,0,1,0"
                         VerticalAlignment="Center"
                         HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                         Visibility="Collapsed"/>
                  <Grid x:Name="TwoLineTextPanel" Column="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ribbon:RibbonTwoLineText x:Name="TwoLineText" Text="{windows:TemplateBinding ribbon:RibbonCheckBox.Label}"
                                              TextAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="5,0,5,0"/>
                    <Rectangle x:Name="FocusVisual" Margin="1" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                               Visibility="Collapsed"/>
                  </Grid>
                </Grid>
              </Grid>
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="Large"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
              <windows:Setter Property="windows:FrameworkElement.Height" Value="66"/>
              <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26"/>
              <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Small"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="22"/>
              <windows:Setter Value="{windows:StaticResource Ć}" Property="windows:FrameworkElement.Height"/>
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="SmallImage" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="2,0,2,0"/>
              <windows:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
              <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="false"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Small"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter Property="windows:FrameworkElement.Height" Value="Auto"/>
            </windows:MultiDataTrigger>
            <windows:DataTrigger Value="False"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
              <windows:Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Collapsed"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="SmallImage" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter Value="{windows:StaticResource Ć}" Property="windows:FrameworkElement.Height"/>
            </windows:DataTrigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="SmallImage" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="PART_CheckBorder" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="MainBorder" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="PART_CheckBorder" Value="{windows:StaticResource č}" Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_CheckBorder" Value="{windows:StaticResource Ď}" Property="Border.Background"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="CheckMark"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowTextBrushKey}}"
                              Property="Shape.Fill"/>
              <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="FocusVisual"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                              Property="Shape.Stroke"/>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_CheckBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:TriggerBase.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                  </Storyboard>
                </BeginStoryboard>
              </windows:TriggerBase.EnterActions>
              <windows:TriggerBase.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.4"/>
                  </Storyboard>
                </BeginStoryboard>
              </windows:TriggerBase.ExitActions>
              <windows:Setter TargetName="PART_CheckBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_CheckBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:Trigger Property="ribbon:RibbonCheckBox.ShowKeyboardCues" Value="true">
              <windows:Setter TargetName="FocusVisual" Property="UIElement.Visibility" Value="Visible"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_CheckBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ToggleButton.IsChecked" Value="True"/>
                <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ToggleButton.IsChecked" Value="True"/>
                <windows:Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ButtonBase.IsPressed" Value="true"/>
                <windows:Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="ribbon:RibbonCheckBox.IsInControlGroup" Value="true">
              <windows:Setter TargetName="MainBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="CheckMark" Property="UIElement.Opacity" Value="1"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonFilterMenuButton}">
    <windows:Style.Resources>
      <SolidColorBrush x:Key="đ" Color="#959595"/>
      <SolidColorBrush x:Key="Ē" Color="#FFD232"/>
    </windows:Style.Resources>
    <windows:Setter Property="Control.Foreground" Value="White"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource đ}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.MouseOverBorderBrush" Value="{x:Null}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.MouseOverBackground" Value="{x:Null}"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <windows:Setter Property="Control.Padding" Value="6,0,0,0"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonFilterMenuButton}">
          <windows:FrameworkTemplate.Resources>
            <ControlTemplate x:Key="ē" TargetType="{x:Type ribbon:RibbonToggleButton}">
              <Grid SnapsToDevicePixels="true">
                <Border x:Name="OuterBorder" CornerRadius="2,2,0,0"
                        Background="{windows:TemplateBinding Control.Background}"
                        BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                        BorderThickness="{windows:TemplateBinding Control.BorderThickness}">
                  <Grid Margin="{windows:TemplateBinding Control.Padding}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ribbon:RibbonMenuItem x:Name="PART_CurrentFilterItem" IsHitTestVisible="false" Focusable="false">
                      <Control.Template>
                        <ControlTemplate TargetType="{x:Type ribbon:RibbonMenuItem}">
                          <Border Background="{windows:TemplateBinding Control.Background}"
                                  BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                                  BorderThickness="{windows:TemplateBinding Control.BorderThickness}">
                            <ContentPresenter ContentSource="Header"/>
                          </Border>
                        </ControlTemplate>
                      </Control.Template>
                    </ribbon:RibbonMenuItem>
                    <ribbon:RibbonTwoLineText x:Name="TwoLineText" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left"
                                              LineHeight="13px" LineStackingStrategy="BlockLineHeight"
                                              PathData="{windows:TemplateBinding ribbon:RibbonTwoLineText.PathData}"
                                              PathFill="{windows:TemplateBinding Control.Foreground}"
                                              PathStroke="{windows:TemplateBinding Control.Foreground}" Margin="1"/>
                  </Grid>
                </Border>
              </Grid>
            </ControlTemplate>
          </windows:FrameworkTemplate.Resources>
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ribbon:RibbonToggleButton x:Name="PART_ToggleButton" ribbon:RibbonTwoLineText.PathData="{windows:StaticResource Ð}"
                                       Label="{windows:TemplateBinding ribbon:RibbonMenuButton.Label}"
                                       LargeImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}"
                                       SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}"
                                       Foreground="{windows:TemplateBinding Control.Foreground}"
                                       BorderBrush="{windows:TemplateBinding Control.BorderBrush}" BorderThickness="1"
                                       Background="{windows:TemplateBinding Control.Background}"
                                       MouseOverBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}"
                                       MouseOverBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}"
                                       CheckedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                       CheckedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                       FocusedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.FocusedBorderBrush}"
                                       FocusedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.FocusedBackground}"
                                       HorizontalContentAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                                       Padding="{windows:TemplateBinding Control.Padding}" ClickMode="Press"
                                       Template="{windows:StaticResource ē}" Style="{x:Null}"
                                       IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"/>
            <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
                   Placement="Bottom" Focusable="false"
                   PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                   TextElement.Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ribbon:RibbonGallery}}, Path=Foreground}"
                   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}">
              <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shadow" Color="Transparent"
                                              controls:KeyTipService.IsKeyTipScope="true" RenderOptions.ClearTypeHint="Enabled">
                <Border Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                        CornerRadius="2"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                  <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" BorderThickness="0"
                          CornerRadius="2">
                    <ScrollViewer x:Name="PART_SubMenuScrollViewer" Margin="1"
                                  Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                      <Grid RenderOptions.ClearTypeHint="Enabled">
                        <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                          <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                     Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                     Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"
                                     Fill="{Binding ElementName=MenuBorder, Path=Background}"/>
                          <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                     Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}"
                                     Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}"
                                     Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}"/>
                        </Canvas>
                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                      </Grid>
                    </ScrollViewer>
                  </Border>
                </Border>
              </classic:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OpaqueRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
              <windows:Setter TargetName="PART_SubMenuScrollViewer"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Control.Foreground"/>
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
        <windows:Setter Property="Control.Background"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowBrushKey}}"/>
        <windows:Setter Property="Control.Foreground"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowTextBrushKey}}"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
          <windows:Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
          <windows:Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter Property="Control.Foreground" Value="{windows:StaticResource Ē}"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
          <windows:Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
          <windows:Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter Property="Control.Background"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowTextBrushKey}}"/>
        <windows:Setter Property="Control.Foreground"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowBrushKey}}"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
          <windows:Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True"/>
          <windows:Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter Property="Control.Foreground" Value="{windows:StaticResource Ē}"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
          <windows:Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True"/>
          <windows:Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter Property="Control.Background"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowTextBrushKey}}"/>
        <windows:Setter Property="Control.Foreground"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowBrushKey}}"/>
      </windows:MultiDataTrigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonGallery}">
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="Control.Background"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}"/>
    <windows:Setter Property="Control.BorderThickness" Value="0,1"/>
    <windows:Setter Property="UIElement.Focusable" Value="false"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <windows:Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <windows:Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
    <windows:Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <windows:Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <windows:Setter Property="ribbon:RibbonGallery.CommandParameter"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}"/>
    <windows:Setter Property="ribbon:RibbonGallery.PreviewCommandParameter"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=HighlightedItem}"/>
    <windows:Setter Property="ItemsControl.ItemsPanel">
      <windows:Setter.Value>
        <ItemsPanelTemplate>
          <primitives:RibbonGalleryCategoriesPanel Name="ItemsHostPanel" IsItemsHost="true"/>
        </ItemsPanelTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonGallery}">
          <Border x:Name="Border" BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                  Background="{windows:TemplateBinding Control.Background}"
                  BorderThickness="{windows:TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <Border x:Name="InnerBorder" Background="{windows:StaticResource Ñ}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid x:Name="FilterHost">
                  <ContentPresenter x:Name="PART_FilterContentPane" ContentSource="FilterPaneContent"/>
                  <ribbon:RibbonFilterMenuButton x:Name="PART_FilterMenuButton"
                                                 Style="{windows:TemplateBinding ribbon:RibbonGallery.FilterMenuButtonStyle}"
                                                 ItemContainerStyleSelector="{windows:TemplateBinding ribbon:RibbonGallery.FilterItemContainerStyleSelector}"
                                                 ItemTemplateSelector="{windows:TemplateBinding ribbon:RibbonGallery.FilterItemTemplateSelector}"
                                                 HorizontalContentAlignment="Left" Visibility="Collapsed"/>
                </Grid>
                <ScrollViewer x:Name="PART_ScrollViewer" Grid.Row="1" Padding="{windows:TemplateBinding Control.Padding}"
                              Focusable="false">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                      <Rectangle x:Name="OpaqueRect" Height="{Binding ElementName=Border, Path=ActualHeight}"
                                 Width="{Binding ElementName=Border, Path=ActualWidth}"
                                 Fill="{Binding ElementName=Border, Path=Background}"/>
                      <Rectangle x:Name="OverlayRect" Fill="{windows:StaticResource Ñ}"
                                 Height="{Binding ElementName=Border, Path=ActualHeight}"
                                 Width="{Binding ElementName=Border, Path=ActualWidth}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Continue"
                                    HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"/>
                  </Grid>
                </ScrollViewer>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <windows:Trigger SourceName="PART_ScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_ScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_ScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_ScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_ScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowBrushKey}}"
                              Property="Border.Background"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonGallery.CanUserFilter" Value="false">
              <windows:Setter TargetName="FilterHost" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Value="{x:Null}" Property="ribbon:RibbonGallery.FilterPaneContent"/>
                <windows:Condition Value="{x:Null}" Property="ribbon:RibbonGallery.FilterPaneContentTemplate"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="PART_FilterMenuButton" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="PART_FilterContentPane" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:MultiTrigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="Border" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <SolidColorBrush x:Key="Ĕ" Color="#0C000000"/>
  <windows:Style TargetType="{x:Type ribbon:RibbonGalleryCategory}">
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource Ĕ}"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="0"/>
    <windows:Setter Property="Control.HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="ItemsControl.ItemsPanel">
      <windows:Setter.Value>
        <ItemsPanelTemplate>
          <primitives:RibbonGalleryItemsPanel Name="ItemsHostPanel" IsItemsHost="true"/>
        </ItemsPanelTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonGalleryCategory}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <Border x:Name="HeaderBorder" CornerRadius="2" Background="{windows:TemplateBinding Control.Background}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    Padding="{windows:TemplateBinding Control.Padding}"
                    Visibility="{windows:TemplateBinding ribbon:RibbonGalleryCategory.HeaderVisibility}">
              <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{windows:TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="HeaderBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="HeaderBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="HeaderBorder" Property="Border.CornerRadius" Value="0"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <SolidColorBrush x:Key="ĕ" Color="#30FFFFFF"/>
  <SolidColorBrush x:Key="Ė" Color="#FF3F3F3F"/>
  <windows:Style TargetType="{x:Type ribbon:RibbonGalleryItem}">
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="ribbon:RibbonGalleryItem.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonGalleryItem.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonGalleryItem.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonGalleryItem.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonGalleryItem.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonGalleryItem.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="UIElement.Focusable" Value="true"/>
    <windows:Setter Property="Control.HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.Padding" Value="0"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonGalleryItem}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Border x:Name="OuterBorder" CornerRadius="2" Background="{windows:TemplateBinding Control.Background}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    Padding="{windows:TemplateBinding Control.Padding}">
              <Border x:Name="InnerBorder" CornerRadius="2" Background="Transparent" BorderBrush="Transparent"
                      BorderThickness="{windows:TemplateBinding Control.BorderThickness}">
                <ContentPresenter HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{windows:TemplateBinding Control.VerticalContentAlignment}" Margin="2"
                                  RecognizesAccessKey="true"/>
              </Border>
            </Border>
            <Border x:Name="PressedStateOverlay" CornerRadius="2" HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"/>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ė}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="PressedStateOverlay" Property="Border.CornerRadius" Value="0"/>
            </windows:DataTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonGalleryItem.IsHighlighted" Value="true"/>
                <windows:Condition Property="ribbon:RibbonGalleryItem.IsPressed" Value="false"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
            </windows:MultiTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:Trigger Property="ribbon:RibbonGalleryItem.IsPressed" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PressedStateOverlay" Value="{windows:StaticResource ĕ}" Property="Border.Background"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PressedStateOverlay" Value="{windows:StaticResource ĕ}" Property="Border.Background"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:Trigger Property="ribbon:RibbonGalleryItem.IsSelected" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonGalleryItem.IsHighlighted" Value="true"/>
                <windows:Condition Property="ribbon:RibbonGalleryItem.IsSelected" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="InnerBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <SolidColorBrush x:Key="ė" Color="#50FFFFFF"/>
  <RadialGradientBrush x:Key="Ę" GradientOrigin="0.5,1" Center="0.5,0.5" RadiusX="1" RadiusY="0.5">
    <GradientStop Offset="0" Color="#30FFFFFF"/>
    <GradientStop Offset="1" Color="#08808080"/>
  </RadialGradientBrush>
  <RadialGradientBrush x:Key="ę" GradientOrigin="0.5,0.95" Center="0.5,1" RadiusX="0.9" RadiusY="0.5">
    <GradientStop Offset="0" Color="#AAFFFFFF"/>
    <GradientStop Offset="1" Color="#40BBBBBB"/>
  </RadialGradientBrush>
  <SolidColorBrush x:Key="Ě" Color="#40FFFFFF"/>
  <LinearGradientBrush x:Key="ě" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#88FFFFFF" Offset="0.0"/>
    <GradientStop Color="#88DBE7F4" Offset="1.0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ĝ" Color="#AEBECF"/>
  <SolidColorBrush x:Key="ĝ" Color="#FCFCFC"/>
  <LinearGradientBrush x:Key="Ğ" StartPoint="0.0,0.5" EndPoint="1.0,0.5">
    <GradientStop Color="#01FFFFFF" Offset="0.0"/>
    <GradientStop Color="#80FFFFFF" Offset="0.5"/>
    <GradientStop Color="#01FFFFFF" Offset="1.0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ğ" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#F5F9FD" Offset="0"/>
    <GradientStop Color="#EDF1F5" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ġ" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Offset="0" Color="#80FFFFFF"/>
    <GradientStop Offset="0.5" Color="#60FFFFFF"/>
    <GradientStop Offset="1" Color="#40808080"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ġ" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Offset="0" Color="#80808080"/>
    <GradientStop Offset="1" Color="#80FFFFFF"/>
  </LinearGradientBrush>
  <windows:Style x:Key="Ģ" TargetType="{x:Type ribbon:RibbonToggleButton}">
    <windows:Setter Property="UIElement.Focusable" Value="true"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonGroup}}, Path=BorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush" Value="Transparent"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground" Value="{windows:StaticResource Ě}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush" Value="Transparent"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBackground" Value="Transparent"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush" Value="Transparent"/>
    <windows:Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
          <windows:FrameworkTemplate.Resources>
            <windows:DataTemplate DataType="{x:Type system:String}">
              <ribbon:RibbonTwoLineText Margin="2,4,2,0" TextAlignment="Center" VerticalAlignment="Top" LineHeight="13px"
                                        LineStackingStrategy="BlockLineHeight"
                                        HasTwoLines="{windows:TemplateBinding ribbon:RibbonTwoLineText.HasTwoLines}"
                                        PathFill="{windows:TemplateBinding TextElement.Foreground}"
                                        PathData="{windows:TemplateBinding ribbon:RibbonTwoLineText.PathData}" Text="{Binding}"/>
            </windows:DataTemplate>
          </windows:FrameworkTemplate.Resources>
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Border x:Name="ButtonInnerBorder" CornerRadius="2" BorderThickness="1" Margin="1" BorderBrush="#EAF1FB"/>
            <Border x:Name="ButtonOuterBorder" BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                    Background="{windows:TemplateBinding Control.Background}" CornerRadius="2" BorderThickness="1"/>
            <Border x:Name="PART_HotBackground" Opacity="0" CornerRadius="2" BorderThickness="1"
                    Background="{windows:TemplateBinding ribbon:RibbonToggleButton.MouseOverBackground}"
                    BorderBrush="{windows:TemplateBinding ribbon:RibbonToggleButton.MouseOverBorderBrush}"/>
            <Grid Margin="2">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <Border x:Name="ImageOuterBorder" Grid.Row="0">
                <Border x:Name="ImageMiddleBorder" Margin="3" VerticalAlignment="Top" HorizontalAlignment="Center"
                        BorderBrush="{windows:StaticResource Ĝ}" BorderThickness="0" Width="32" Height="32"
                        CornerRadius="3">
                  <Grid>
                    <Border x:Name="ImageInnerBorder" BorderBrush="{windows:StaticResource ĝ}" BorderThickness="0"
                            CornerRadius="3"/>
                    <Image x:Name="GroupImage" Source="{windows:TemplateBinding ribbon:RibbonToggleButton.LargeImageSource}"
                           Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center"
                           RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                  </Grid>
                </Border>
              </Border>
              <Border x:Name="LabelBorder" Grid.Row="1" Grid.RowSpan="2" Background="{windows:StaticResource Ę}">
                <ContentPresenter ribbon:RibbonTwoLineText.HasTwoLines="true"
                                  ribbon:RibbonTwoLineText.PathData="{windows:StaticResource Ð}"/>
              </Border>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonToggleButton.LargeImageSource">
              <windows:Setter TargetName="GroupImage"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}"
                              Property="Image.Source"/>
              <windows:Setter TargetName="GroupImage" Property="windows:FrameworkElement.Width" Value="16"/>
              <windows:Setter TargetName="GroupImage" Property="windows:FrameworkElement.Height" Value="16"/>
              <windows:Setter TargetName="ImageMiddleBorder" Property="Border.BorderThickness" Value="1"/>
              <windows:Setter TargetName="ImageMiddleBorder" Value="{windows:StaticResource ě}" Property="Border.Background"/>
              <windows:Setter TargetName="ImageInnerBorder" Property="Border.BorderThickness" Value="1"/>
              <windows:Setter TargetName="ImageInnerBorder" Value="{windows:StaticResource ė}" Property="Border.Background"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="GroupImage" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="ImageMiddleBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="ImageMiddleBorder" Property="Border.BorderThickness" Value="0"/>
              <windows:Setter TargetName="ImageInnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="ImageInnerBorder" Property="Border.BorderThickness" Value="0"/>
              <windows:Setter TargetName="PART_HotBackground" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="LabelBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="ButtonOuterBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="ButtonOuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="ButtonOuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="ButtonInnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="ButtonInnerBorder" Property="Border.BorderThickness" Value="0,1,0,0"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="ButtonInnerBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="ButtonInnerBorder" Property="Border.BorderThickness" Value="1"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="ButtonInnerBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="ButtonInnerBorder" Property="Border.BorderThickness" Value="1"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="ButtonOuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
                <windows:Condition Property="ToggleButton.IsChecked" Value="False"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="PART_HotBackground" Property="UIElement.Opacity" Value="1"/>
            </windows:MultiTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HotBackground" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="PART_HotBackground"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_HotBackground"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HotBackground" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="PART_HotBackground"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_HotBackground"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="ImageOuterBorder" Property="Border.Background" Value="#20BBBBBB"/>
              <windows:Setter TargetName="LabelBorder" Value="{windows:StaticResource ę}" Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style x:Key="ģ" TargetType="{x:Type ribbon:RibbonToggleButton}">
    <windows:Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
    <windows:Setter Property="UIElement.Focusable" Value="true"/>
    <windows:Setter Property="Control.BorderBrush" Value="#80808080"/>
    <windows:Setter Property="Control.Background" Value="#AAFFFFFF"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush" Value="Transparent"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground" Value="{windows:StaticResource Ġ}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush" Value="Transparent"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBackground" Value="{windows:StaticResource ġ}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush" Value="Transparent"/>
    <windows:Setter Property="windows:FrameworkElement.Margin" Value="0,-1,0,0"/>
    <windows:Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
          <Border Name="OuterBorder" BorderBrush="{windows:TemplateBinding Control.BorderBrush}" BorderThickness="1"
                  CornerRadius="3" Background="{windows:TemplateBinding Control.Background}">
            <Grid>
              <Border Name="InnerBorder" CornerRadius="3"
                      Background="{windows:TemplateBinding ribbon:RibbonToggleButton.MouseOverBackground}"
                      BorderBrush="{windows:TemplateBinding ribbon:RibbonToggleButton.MouseOverBorderBrush}" Opacity="0"/>
              <Image Name="GroupImage" Margin="3,2"
                     Source="{windows:TemplateBinding ribbon:RibbonToggleButton.SmallImageSource}" Width="16"
                     Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
                     RenderOptions.BitmapScalingMode="{windows:TemplateBinding RenderOptions.BitmapScalingMode}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="GroupImage" Property="UIElement.Opacity" Value="0.5"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding Path=Background, RelativeSource={RelativeSource Self}}" Value="Transparent"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="InnerBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="InnerBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="InnerBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="InnerBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#AA808080"/>
            </windows:MultiDataTrigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <ControlTemplate x:Key="Ĥ" TargetType="{x:Type ribbon:RibbonGroup}">
    <Border Name="GroupBorder" Background="{windows:TemplateBinding Control.Background}" Margin="1,2,0,0">
      <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto" MinHeight="16"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Border Name="PART_HotBackground"
                Background="{windows:TemplateBinding ribbon:RibbonGroup.MouseOverBackground}"
                BorderBrush="{windows:TemplateBinding ribbon:RibbonGroup.MouseOverBorderBrush}" Opacity="0"
                Grid.RowSpan="3" CornerRadius="2" BorderThickness="1" SnapsToDevicePixels="true"/>
        <Border Name="SeparatorBorder" Background="{windows:TemplateBinding Control.BorderBrush}" Grid.Column="1"
                Grid.RowSpan="3" Height="75" Width="1" VerticalAlignment="Center" SnapsToDevicePixels="true"/>
        <Border Margin="2,1,2,0" Padding="3,0,3,0">
          <Grid>
            <ItemsPresenter Name="ItemsPresenter"/>
            <ContentControl Name="PART_TemplateContentControl" Visibility="Collapsed" Focusable="false"/>
          </Grid>
        </Border>
        <Border Name="LabelSeparatorBorder" Grid.Row="1" Height="1" Margin="5,1,5,-1"/>
        <Grid Margin="2,0,2,0" Row="2">
          <ContentPresenter Name="PART_Header" TextElement.Foreground="{windows:StaticResource Ë}" ContentSource="Header"
                            Margin="2,0,2,0" MaxHeight="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_HotBackground" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="SeparatorBorder" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="GroupBorder" Property="Border.BorderThickness" Value="1"/>
        <windows:Setter TargetName="GroupBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="GroupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="LabelSeparatorBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                        Property="Border.Background"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ĥ" TargetType="{x:Type ribbon:RibbonGroup}">
    <Grid x:Name="MainGrid">
      <ribbon:RibbonToggleButton x:Name="PART_ToggleButton" Margin="0,3,0,0" Style="{windows:StaticResource Ģ}"
                                 Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                                 ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                                 ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                 ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                 Background="{windows:TemplateBinding Control.Background}"
                                 LargeImageSource="{windows:TemplateBinding ribbon:RibbonGroup.LargeImageSource}"
                                 SmallImageSource="{windows:TemplateBinding ribbon:RibbonGroup.SmallImageSource}"
                                 IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Bottom" Focusable="false"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             PlacementTarget="{Binding ElementName=PART_ToggleButton}"
             IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shdw" Color="Transparent" UIElement.SnapsToDevicePixels="true"
                                        CornerRadius="2" UIElement.Focusable="true" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled" windows:FrameworkElement.FocusVisualStyle="{x:Null}">
          <Grid Name="PART_PopupGrid" Height="{windows:TemplateBinding windows:FrameworkElement.ActualHeight}"
                Margin="0,1.5,0,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto" MinHeight="16"/>
            </Grid.RowDefinitions>
            <Border Name="PopupBorder" Grid.RowSpan="2" Background="{windows:TemplateBinding Control.Background}"
                    BorderThickness="1"
                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"/>
            <Border Name="PART_HotBackground"
                    Background="{windows:TemplateBinding ribbon:RibbonGroup.MouseOverBackground}"
                    BorderBrush="{windows:TemplateBinding ribbon:RibbonGroup.MouseOverBorderBrush}" Opacity="0"
                    Grid.RowSpan="2" CornerRadius="2" BorderThickness="1" SnapsToDevicePixels="true"/>
            <Border Margin="2,3.5,2,0" Padding="3,0,3,0">
              <Grid>
                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle"
                                KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="true"
                                Grid.IsSharedSizeScope="true"/>
                <ContentControl Name="PART_TemplateContentControl" Visibility="Collapsed" Focusable="false"/>
              </Grid>
            </Border>
            <Grid Margin="2,0,2,1" Row="1">
              <ContentPresenter Name="PART_Header" TextElement.Foreground="{windows:StaticResource Ë}" ContentSource="Header"
                                Margin="2,0,2,0" MaxHeight="15" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
          </Grid>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
          <windows:Condition Binding="{Binding Path=Background, RelativeSource={RelativeSource Self}}" Value="Transparent"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="PopupBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}"
                        Property="Border.Background"/>
      </windows:MultiDataTrigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_HotBackground" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Shdw" Property="classic:SystemDropShadowChrome.CornerRadius" Value="0"/>
      </windows:DataTrigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shdw" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shdw" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonGroup.IsInQuickAccessToolBar" Value="true">
        <windows:Setter TargetName="PART_PopupGrid" Value="{windows:StaticResource ß}"
                        Property="windows:FrameworkElement.Height"/>
        <windows:Setter TargetName="PART_ToggleButton" Value="{windows:StaticResource ģ}"
                        Property="windows:FrameworkElement.Style"/>
        <windows:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Margin" Value="0"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonGroup.IsDropDownOpen" Value="true">
        <windows:Setter TargetName="MainGrid" Property="ToolTipService.IsEnabled" Value="false"/>
      </windows:Trigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <windows:Style TargetType="{x:Type ribbon:RibbonGroup}">
    <windows:Setter Property="windows:FrameworkElement.Margin" Value="1"/>
    <windows:Setter Property="Control.Padding" Value="3,0,3,0"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.Template" Value="{windows:StaticResource Ĥ}"/>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonGroup.MouseOverBackground" Value="{windows:StaticResource Ğ}"/>
    <windows:Setter Property="ribbon:RibbonGroup.MouseOverBorderBrush" Value="Transparent"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Style.Triggers>
      <windows:Trigger Property="ribbon:RibbonGroup.IsCollapsed" Value="true">
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource ĥ}"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <LinearGradientBrush x:Key="ì" StartPoint="0,0" EndPoint="1,0">
    <GradientStop Offset="0" Color="#A0FFFFFF"/>
    <GradientStop Offset="0.4" Color="#80FFFFFF"/>
    <GradientStop Offset="0.8" Color="#0AFFFFFF"/>
    <GradientStop Offset="1" Color="#08FFFFFF"/>
  </LinearGradientBrush>
  <windows:Style TargetType="{x:Type ribbon:RibbonMenuItem}">
    <windows:Setter Property="Control.HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.Padding" Value="3,2,3,2"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonControlService.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonControlService.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonMenuItem}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Border x:Name="Border" Background="{windows:TemplateBinding Control.Background}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}" CornerRadius="2">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="14"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="PART_SideBarBorder" Margin="0,-1,0,-1" BorderThickness="0,0,1,0"
                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                  <Grid x:Name="SideBarOverlay" Background="{windows:StaticResource ì}">
                    <Image x:Name="Image" Width="16" Height="16" Margin="4,3,6,1" VerticalAlignment="Center"
                           HorizontalAlignment="Center" Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"/>
                    <Border x:Name="CheckMarkBorder"
                            Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
                            BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
                            BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
                            Margin="1" Width="20" Height="20" CornerRadius="2">
                      <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
                            HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
                            FlowDirection="LeftToRight" Data="{windows:StaticResource ï}"/>
                    </Border>
                  </Grid>
                </Border>
                <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center"
                                  Margin="{windows:TemplateBinding Control.Padding}" RecognizesAccessKey="true"/>
                <Path x:Name="Arrow" Visibility="Collapsed" Grid.Column="2" VerticalAlignment="Center"
                      HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
                      Data="{windows:StaticResource ð}"/>
              </Grid>
            </Border>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
                   Focusable="false"
                   PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                              RenderOptions.ClearTypeHint="Enabled">
                <Border Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                        CornerRadius="2"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                  <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" CornerRadius="2">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                    Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                          <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                       Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                       Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"
                                       Fill="{Binding ElementName=MenuBorder, Path=Background}"/>
                            <Rectangle x:Name="OverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                                       Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                       Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"/>
                          </Canvas>
                          <ItemsPresenter x:Name="ItemsPresenter" Margin="2" Grid.IsSharedSizeScope="true"
                                          KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Grid>
                      </ScrollViewer>
                      <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                              BorderThickness="0,1,0,0"
                              BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                        <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                      </Border>
                    </Grid>
                  </Border>
                </Border>
              </classic:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OpaqueRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
              <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                              Value="Disabled"/>
              <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                              Value="Disabled"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ItemsControl.HasItems" Value="true"/>
                <windows:Condition Property="MenuItem.IsCheckable" Value="false"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Visible"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:Trigger>
            <windows:Trigger Property="MenuItem.IsCheckable" Value="true">
              <windows:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden"/>
            </windows:Trigger>
            <windows:Trigger Property="MenuItem.IsChecked" Value="true">
              <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
            </windows:Trigger>
            <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
            </windows:Trigger>
            <windows:Trigger Property="MenuItem.IsPressed" Value="true">
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="Shape.Fill"/>
              <windows:Setter TargetName="Border" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="Border" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="Border" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="CheckMark"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="Shape.Fill"/>
              <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
              <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="CheckMarkBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="CheckMarkBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
              <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
              <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="PART_SideBarBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_SubMenuScrollViewer"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Control.Foreground"/>
              <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Shape.Fill"/>
              <windows:Setter TargetName="CheckMark"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Shape.Fill"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="Shape.Fill"/>
              <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="CheckMarkBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="CheckMark"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonRadioButton}">
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.CornerRadius" Value="2"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="ribbon:RibbonRadioButton.QuickAccessToolBarControlSizeDefinition">
      <windows:Setter.Value>
        <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonRadioButton}">
          <Grid SnapsToDevicePixels="true">
            <Border x:Name="OuterBorder" CornerRadius="{windows:TemplateBinding ribbon:RibbonRadioButton.CornerRadius}"
                    Background="{windows:TemplateBinding Control.Background}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}"/>
            <Border x:Name="MiddleBorder"
                    CornerRadius="{windows:TemplateBinding ribbon:RibbonRadioButton.CornerRadius}"
                    Background="Transparent" BorderBrush="Transparent"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}">
              <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent"
                      BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                      Padding="{windows:TemplateBinding Control.Padding}"
                      CornerRadius="{windows:TemplateBinding ribbon:RibbonRadioButton.CornerRadius}">
                <StackPanel x:Name="StackPanel"
                            HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}">
                  <Image x:Name="PART_Image" Source="{windows:TemplateBinding ribbon:RibbonRadioButton.LargeImageSource}"
                         Width="32" Height="32" Margin="1,1,1,2" RenderOptions.BitmapScalingMode="NearestNeighbor"
                         VerticalAlignment="Center"
                         HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"/>
                  <Grid x:Name="Grid" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ribbon:RibbonTwoLineText x:Name="TwoLineText" Text="{windows:TemplateBinding ribbon:RibbonRadioButton.Label}"
                                              TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center" LineHeight="13px"
                                              LineStackingStrategy="BlockLineHeight" Margin="1,1,1,0"/>
                  </Grid>
                </StackPanel>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="Large"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
              <windows:Setter Property="windows:FrameworkElement.Height" Value="66"/>
              <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26"/>
              <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Small"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Value="{windows:StaticResource Ć}" Property="windows:FrameworkElement.Height"/>
              <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Margin" Value="1,0,1,0"/>
              <windows:Setter TargetName="PART_Image"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}"
                              Property="Image.Source"/>
              <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Width" Value="16"/>
              <windows:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Height" Value="16"/>
              <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left"/>
              <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="1"/>
              <windows:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Small"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter Property="windows:FrameworkElement.Height" Value="Auto"/>
            </windows:MultiDataTrigger>
            <windows:DataTrigger Value="False"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
              <windows:Setter TargetName="TwoLineText" Value="{x:Null}" Property="ribbon:RibbonTwoLineText.Text"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Collapsed"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter TargetName="PART_Image" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:DataTrigger>
            <windows:Trigger Property="UIElement.IsMouseOver" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="PART_Image" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="OuterBorder" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:Trigger Property="ToggleButton.IsChecked" Value="True">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource Ă}" Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="ButtonBase.IsPressed" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ToggleButton.IsChecked" Value="True"/>
                <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ToggleButton.IsChecked" Value="True"/>
                <windows:Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ButtonBase.IsPressed" Value="true"/>
                <windows:Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource ď}" Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="ribbon:RibbonRadioButton.IsInControlGroup" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="MiddleBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="MiddleBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <LinearGradientBrush x:Key="ĩ" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#FFFFFFFF"/>
    <GradientStop Offset="0.19" Color="#AAFFFFFF"/>
    <GradientStop Offset="0.39" Color="#77FFFFFF"/>
    <GradientStop Offset="0.39" Color="#77FFFFFF"/>
    <GradientStop Offset="0.79" Color="#AAFFFFFF"/>
    <GradientStop Offset="1" Color="#FFFFFFFF"/>
  </LinearGradientBrush>
  <windows:Style TargetType="{x:Type ribbon:RibbonSplitButton}">
    <windows:Style.Resources>
      <windows:Style TargetType="{x:Type ribbon:RibbonSeparator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
        <windows:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <windows:Setter Property="UIElement.Focusable" Value="false"/>
        <windows:Setter Property="Control.BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}"/>
        <windows:Setter Property="Control.Background"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.Background}"/>
        <windows:Setter Property="Control.FontWeight" Value="Bold"/>
        <windows:Setter Property="Control.Template">
          <windows:Setter.Value>
            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
              <Border x:Name="MainBorder" BorderThickness="0,1,0,1"
                      BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                      Background="{windows:TemplateBinding Control.Background}">
                <Border x:Name="Overlay" Background="{windows:StaticResource ì}">
                  <TextBlock x:Name="Text" Margin="2,1,2,1" Text="{windows:TemplateBinding ribbon:RibbonSeparator.Label}"/>
                </Border>
              </Border>
              <ControlTemplate.Triggers>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="Text"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                                  Property="TextBlock.Foreground"/>
                  <windows:Setter TargetName="Overlay" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                                  Property="Border.Background"/>
                </windows:DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </windows:Setter.Value>
        </windows:Setter>
        <windows:Style.Triggers>
          <windows:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
            <windows:Setter Property="Control.Template">
              <windows:Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                  <Grid x:Name="Grid" SnapsToDevicePixels="true" Margin="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="14"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="SideBarBorder" BorderThickness="0,0,1,0" Margin="0,-1,0,-1"
                            Background="{windows:TemplateBinding Control.Background}"
                            BorderBrush="{windows:TemplateBinding Control.BorderBrush}">
                      <Border x:Name="SideBarOverlay" Background="{windows:StaticResource ì}"/>
                    </Border>
                    <Line x:Name="Line" Grid.Column="1" Grid.ColumnSpan="2" Margin="2,0,0,0" X1="0" Y1="0" X2="1" Y2="0"
                          Stroke="{windows:TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                      <windows:Setter TargetName="SideBarBorder" Property="Border.Background" Value="Transparent"/>
                      <windows:Setter TargetName="SideBarBorder"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Border.BorderBrush"/>
                      <windows:Setter TargetName="SideBarOverlay" Property="Border.Background" Value="Transparent"/>
                      <windows:Setter TargetName="Line"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Shape.Stroke"/>
                    </windows:DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </windows:Setter.Value>
            </windows:Setter>
          </windows:Trigger>
        </windows:Style.Triggers>
      </windows:Style>
    </windows:Style.Resources>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <windows:Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <windows:Setter Property="Control.Padding" Value="2,0,2,0"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonSplitButton.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonSplitButton.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="ToolTipService.IsEnabled" Value="false"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.QuickAccessToolBarControlSizeDefinition">
      <windows:Setter.Value>
        <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonSplitButton}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Border x:Name="OuterBorder" Background="{windows:TemplateBinding Control.Background}" CornerRadius="2">
              <Border x:Name="InnerBorder" Background="Transparent" CornerRadius="2">
                <StackPanel x:Name="StackPanel" Orientation="Horizontal">
                  <ribbon:RibbonButton x:Name="PART_HeaderButton" Template="{windows:StaticResource þ}"
                                       Label="{windows:TemplateBinding ribbon:RibbonMenuButton.Label}"
                                       LargeImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}"
                                       SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}"
                                       BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                                       BorderThickness="{windows:TemplateBinding Control.BorderThickness}" Background="Transparent"
                                       CornerRadius="2,0,0,2" Focusable="false"
                                       ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipTitle}"
                                       ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipDescription}"
                                       ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipImageSource}"
                                       ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterTitle}"
                                       ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterDescription}"
                                       ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterImageSource}"
                                       MouseOverBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}"
                                       MouseOverBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}"
                                       PressedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                       PressedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                       HorizontalContentAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                                       VerticalContentAlignment="{windows:TemplateBinding Control.VerticalContentAlignment}"
                                       Padding="{windows:TemplateBinding Control.Padding}"
                                       Command="{windows:TemplateBinding ribbon:RibbonSplitButton.Command}"
                                       CommandParameter="{windows:TemplateBinding ribbon:RibbonSplitButton.CommandParameter}"
                                       CommandTarget="{windows:TemplateBinding ribbon:RibbonSplitButton.CommandTarget}"
                                       KeyTip="{windows:TemplateBinding ribbon:RibbonSplitButton.HeaderKeyTip}"
                                       QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitButton.HeaderQuickAccessToolBarId}"
                                       CanAddToQuickAccessToolBarDirectly="true"
                                       ToolTipService.InitialShowDelay="{windows:StaticResource Í}"
                                       ToolTipService.ShowDuration="{windows:StaticResource Î}"
                                       ToolTipService.BetweenShowDelay="{windows:StaticResource Ï}" Style="{x:Null}">
                    <ribbon:RibbonButton.ControlSizeDefinition>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="false"/>
                    </ribbon:RibbonButton.ControlSizeDefinition>
                    <ribbon:RibbonButton.QuickAccessToolBarControlSizeDefinition>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
                    </ribbon:RibbonButton.QuickAccessToolBarControlSizeDefinition>
                    <windows:FrameworkElement.Resources>
                      <windows:Thickness Left="1" Top="1" Right="1" Bottom="0"
                                         x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}"/>
                    </windows:FrameworkElement.Resources>
                  </ribbon:RibbonButton>
                  <Grid>
                    <Border x:Name="UnderlayBorder" Opacity="0.5" Visibility="Collapsed"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"/>
                    <ribbon:RibbonToggleButton x:Name="PART_ToggleButton" Template="{windows:StaticResource Ħ}"
                                               Label="{windows:TemplateBinding ribbon:RibbonMenuButton.Label}"
                                               ribbon:RibbonTwoLineText.PathData="{windows:StaticResource Ð}"
                                               BorderBrush="{windows:TemplateBinding Control.BorderBrush}" Background="Transparent"
                                               CornerRadius="0,2,2,0"
                                               MouseOverBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}"
                                               MouseOverBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}"
                                               PressedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                               PressedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                               CheckedBorderBrush="{windows:TemplateBinding ribbon:RibbonSplitButton.CheckedBorderBrush}"
                                               CheckedBackground="{windows:TemplateBinding ribbon:RibbonSplitButton.CheckedBackground}"
                                               FocusedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.FocusedBorderBrush}"
                                               FocusedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.FocusedBackground}"
                                               HorizontalContentAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                                               VerticalContentAlignment="{windows:TemplateBinding Control.VerticalContentAlignment}"
                                               Padding="{windows:TemplateBinding Control.Padding}"
                                               ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipTitle}"
                                               ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipDescription}"
                                               ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipImageSource}"
                                               ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterTitle}"
                                               ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterDescription}"
                                               ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterImageSource}"
                                               ClickMode="Press" ToolTipService.InitialShowDelay="{windows:StaticResource Í}"
                                               ToolTipService.ShowDuration="{windows:StaticResource Î}"
                                               ToolTipService.BetweenShowDelay="{windows:StaticResource Ï}" Style="{x:Null}"
                                               FocusVisualStyle="{x:Null}"
                                               IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                      <ribbon:RibbonToggleButton.ControlSizeDefinition>
                        <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="false"/>
                      </ribbon:RibbonToggleButton.ControlSizeDefinition>
                    </ribbon:RibbonToggleButton>
                  </Grid>
                </StackPanel>
              </Border>
            </Border>
            <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
                   Placement="Bottom" Focusable="false"
                   PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}">
              <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shadow" Color="Transparent"
                                              controls:KeyTipService.IsKeyTipScope="true" RenderOptions.ClearTypeHint="Enabled">
                <Border Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                        CornerRadius="2"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                  <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" BorderThickness="0"
                          CornerRadius="2">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <ScrollViewer x:Name="PART_SubMenuScrollViewer" Grid.Row="1" Margin="1"
                                    Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                          <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                       Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                       Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"
                                       Fill="{Binding ElementName=MenuBorder, Path=Background}"/>
                            <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                       Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}"
                                       Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}"
                                       Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}"/>
                          </Canvas>
                          <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle"
                                          KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                        </Grid>
                      </ScrollViewer>
                      <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                              BorderThickness="0,1,0,0"
                              BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                        <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                      </Border>
                    </Grid>
                  </Border>
                </Border>
              </classic:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OpaqueRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="true">
              <windows:Setter TargetName="PART_HeaderButton" Property="ToolTipService.IsEnabled" Value="false"/>
              <windows:Setter TargetName="PART_ToggleButton" Property="ToolTipService.IsEnabled" Value="false"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.HasGallery" Value="true">
              <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                              Value="Disabled"/>
              <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                              Value="Disabled"/>
            </windows:Trigger>
            <windows:DataTrigger Value="Large"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
              <windows:Setter TargetName="PART_HeaderButton" Property="windows:FrameworkElement.Height" Value="37"/>
              <windows:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="29"/>
              <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
              <windows:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Vertical"/>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CornerRadius" Value="2,2,0,0"/>
              <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0,0,2,2"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Large"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                   Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                </windows:Setter.Value>
              </windows:Setter>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Small"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                   Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
                </windows:Setter.Value>
              </windows:Setter>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Small"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                   Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="DropDown"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
                </windows:Setter.Value>
              </windows:Setter>
              <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                </windows:Setter.Value>
              </windows:Setter>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Small"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                   Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="Header"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="true"/>
                </windows:Setter.Value>
              </windows:Setter>
            </windows:MultiDataTrigger>
            <windows:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}">
              <windows:Setter TargetName="PART_HeaderButton" Property="windows:FrameworkElement.Height" Value="Auto"/>
              <windows:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="Auto"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Collapsed"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                   Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="false"/>
                </windows:Setter.Value>
              </windows:Setter>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Collapsed"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                   Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="DropDown"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="false"/>
                </windows:Setter.Value>
              </windows:Setter>
              <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                </windows:Setter.Value>
              </windows:Setter>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                   Value="Collapsed"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                   Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="Header"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                <windows:Setter.Value>
                  <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                </windows:Setter.Value>
              </windows:Setter>
            </windows:MultiDataTrigger>
            <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ĩ}" Property="Border.Background"/>
              <windows:Setter TargetName="PART_ToggleButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Control.BorderBrush"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition SourceName="PART_ToggleButton" Property="UIElement.IsMouseOver" Value="true"/>
                <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ĩ}" Property="Border.Background"/>
              <windows:Setter TargetName="PART_HeaderButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Control.BorderBrush"/>
            </windows:MultiTrigger>
            <windows:Trigger SourceName="PART_ToggleButton" Property="UIElement.IsKeyboardFocused" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_HeaderButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Control.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonSplitButton.IsChecked" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_ToggleButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Control.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_ToggleButton" Property="ToggleButton.IsChecked" Value="True">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ĩ}" Property="Border.Background"/>
              <windows:Setter TargetName="PART_HeaderButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Control.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.IsInControlGroup" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0"/>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CornerRadius" Value="0"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="false"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true">
              <windows:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0"/>
              <windows:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Õ}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitButton.HeaderQuickAccessToolBarId">
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly"
                              Value="false"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false"/>
                <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                              Property="Control.BorderBrush"/>
              <windows:Setter TargetName="UnderlayBorder" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="PART_ToggleButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Control.BorderBrush"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CornerRadius" Value="0"/>
              <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0"/>
              <windows:Setter TargetName="UnderlayBorder" Property="UIElement.Opacity" Value="0"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="UnderlayBorder" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="UnderlayBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_HeaderButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Control.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_ToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Control.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_ToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Control.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Control.BorderBrush"/>
              <windows:Setter TargetName="PART_ToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Control.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.IsInQuickAccessToolBar" Value="true">
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly"
                              Value="false"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="ribbon:RibbonSplitButton.IsCheckable" Value="true">
        <windows:Setter Property="Control.Template">
          <windows:Setter.Value>
            <ControlTemplate TargetType="{x:Type ribbon:RibbonSplitButton}">
              <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                <Border x:Name="OuterBorder" Background="{windows:TemplateBinding Control.Background}" CornerRadius="2">
                  <Border x:Name="InnerBorder" Background="Transparent" CornerRadius="2">
                    <StackPanel x:Name="StackPanel" Orientation="Horizontal">
                      <ribbon:RibbonToggleButton x:Name="PART_HeaderButton" Template="{windows:StaticResource Ħ}"
                                                 Label="{windows:TemplateBinding ribbon:RibbonMenuButton.Label}"
                                                 LargeImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}"
                                                 SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}"
                                                 BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                                                 BorderThickness="{windows:TemplateBinding Control.BorderThickness}" Background="Transparent"
                                                 CornerRadius="2,0,0,2" Focusable="false"
                                                 ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipTitle}"
                                                 ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipDescription}"
                                                 ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipImageSource}"
                                                 ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterTitle}"
                                                 ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterDescription}"
                                                 ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterImageSource}"
                                                 MouseOverBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}"
                                                 MouseOverBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}"
                                                 PressedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                                 PressedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                                 CheckedBorderBrush="{windows:TemplateBinding ribbon:RibbonSplitButton.CheckedBorderBrush}"
                                                 CheckedBackground="{windows:TemplateBinding ribbon:RibbonSplitButton.CheckedBackground}"
                                                 HorizontalContentAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                                                 VerticalContentAlignment="{windows:TemplateBinding Control.VerticalContentAlignment}"
                                                 Padding="{windows:TemplateBinding Control.Padding}"
                                                 Command="{windows:TemplateBinding ribbon:RibbonSplitButton.Command}"
                                                 CommandParameter="{windows:TemplateBinding ribbon:RibbonSplitButton.CommandParameter}"
                                                 CommandTarget="{windows:TemplateBinding ribbon:RibbonSplitButton.CommandTarget}"
                                                 KeyTip="{windows:TemplateBinding ribbon:RibbonSplitButton.HeaderKeyTip}"
                                                 QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitButton.HeaderQuickAccessToolBarId}"
                                                 CanAddToQuickAccessToolBarDirectly="true"
                                                 ToolTipService.InitialShowDelay="{windows:StaticResource Í}"
                                                 ToolTipService.ShowDuration="{windows:StaticResource Î}"
                                                 ToolTipService.BetweenShowDelay="{windows:StaticResource Ï}" Style="{x:Null}"
                                                 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}">
                        <ribbon:RibbonToggleButton.ControlSizeDefinition>
                          <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="false"/>
                        </ribbon:RibbonToggleButton.ControlSizeDefinition>
                        <ribbon:RibbonToggleButton.QuickAccessToolBarControlSizeDefinition>
                          <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="false"/>
                        </ribbon:RibbonToggleButton.QuickAccessToolBarControlSizeDefinition>
                        <windows:FrameworkElement.Resources>
                          <windows:Thickness Left="1" Top="1" Right="1" Bottom="0"
                                             x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}"/>
                        </windows:FrameworkElement.Resources>
                      </ribbon:RibbonToggleButton>
                      <Grid>
                        <Border x:Name="UnderlayBorder" Opacity="0.5" Visibility="Collapsed"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"/>
                        <ribbon:RibbonToggleButton x:Name="PART_ToggleButton" Template="{windows:StaticResource Ħ}"
                                                   Label="{windows:TemplateBinding ribbon:RibbonMenuButton.Label}"
                                                   ribbon:RibbonTwoLineText.PathData="{windows:StaticResource Ð}"
                                                   BorderBrush="{windows:TemplateBinding Control.BorderBrush}" Background="Transparent"
                                                   CornerRadius="0,2,2,0"
                                                   MouseOverBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}"
                                                   MouseOverBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}"
                                                   PressedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                                   PressedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                                   CheckedBorderBrush="{windows:TemplateBinding ribbon:RibbonSplitButton.CheckedBorderBrush}"
                                                   CheckedBackground="{windows:TemplateBinding ribbon:RibbonSplitButton.CheckedBackground}"
                                                   FocusedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.FocusedBorderBrush}"
                                                   FocusedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.FocusedBackground}"
                                                   HorizontalContentAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{windows:TemplateBinding Control.VerticalContentAlignment}"
                                                   Padding="{windows:TemplateBinding Control.Padding}"
                                                   ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipTitle}"
                                                   ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipDescription}"
                                                   ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipImageSource}"
                                                   ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterTitle}"
                                                   ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterDescription}"
                                                   ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterImageSource}"
                                                   ClickMode="Press" ToolTipService.InitialShowDelay="{windows:StaticResource Í}"
                                                   ToolTipService.ShowDuration="{windows:StaticResource Î}"
                                                   ToolTipService.BetweenShowDelay="{windows:StaticResource Ï}" Style="{x:Null}"
                                                   FocusVisualStyle="{x:Null}"
                                                   IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                          <ribbon:RibbonToggleButton.ControlSizeDefinition>
                            <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="false"/>
                          </ribbon:RibbonToggleButton.ControlSizeDefinition>
                        </ribbon:RibbonToggleButton>
                        <Border x:Name="OverlayBottomBorder"
                                BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                Height="2" VerticalAlignment="Top"/>
                        <Border x:Name="OverlayTopBorder"
                                BorderBrush="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                                Margin="1,0"/>
                      </Grid>
                    </StackPanel>
                  </Border>
                </Border>
                <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
                       Placement="Bottom" Focusable="false"
                       PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}">
                  <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shadow" Color="Transparent"
                                                  controls:KeyTipService.IsKeyTipScope="true" RenderOptions.ClearTypeHint="Enabled">
                    <Border Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                            CornerRadius="2"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                      <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" BorderThickness="0"
                              CornerRadius="2">
                        <Grid>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                          </Grid.RowDefinitions>
                          <ScrollViewer x:Name="PART_SubMenuScrollViewer" Grid.Row="1" Margin="1"
                                        Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                              <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                           Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                           Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"
                                           Fill="{Binding ElementName=MenuBorder, Path=Background}"/>
                                <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                           Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}"
                                           Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}"
                                           Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}"/>
                              </Canvas>
                              <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle"
                                              KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                            </Grid>
                          </ScrollViewer>
                          <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                                  BorderThickness="0,1,0,0"
                                  BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                            <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                          </Border>
                        </Grid>
                      </Border>
                    </Border>
                  </classic:SystemDropShadowChrome>
                </Popup>
              </Grid>
              <ControlTemplate.Triggers>
                <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                  <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                                  Property="Canvas.Top"/>
                  <windows:Setter TargetName="OpaqueRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                  Property="Canvas.Left"/>
                  <windows:Setter TargetName="OverlayRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
                  <windows:Setter TargetName="OverlayRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                  Property="Canvas.Left"/>
                </windows:Trigger>
                <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="true">
                  <windows:Setter TargetName="PART_HeaderButton" Property="ToolTipService.IsEnabled" Value="false"/>
                  <windows:Setter TargetName="PART_ToggleButton" Property="ToolTipService.IsEnabled" Value="false"/>
                </windows:Trigger>
                <windows:Trigger Property="ribbon:RibbonMenuButton.HasGallery" Value="true">
                  <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                                  Value="Disabled"/>
                  <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                                  Value="Disabled"/>
                </windows:Trigger>
                <windows:DataTrigger Value="Large"
                                     Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                  <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
                  <windows:Setter TargetName="PART_HeaderButton" Property="windows:FrameworkElement.Height" Value="37"/>
                  <windows:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="29"/>
                  <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
                  <windows:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Vertical"/>
                  <windows:Setter TargetName="PART_HeaderButton" Property="Control.VerticalContentAlignment" Value="Stretch"/>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="2,2,0,0"/>
                  <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0,0,2,2"/>
                </windows:DataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                       Value="Large"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                       Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                       Value="Small"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                       Value="False"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                       Value="Small"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                       Value="True"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="DropDown"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                  <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                       Value="Small"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                       Value="True"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="Header"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="true"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                </windows:MultiDataTrigger>
                <windows:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}">
                  <windows:Setter TargetName="PART_HeaderButton" Property="windows:FrameworkElement.Height" Value="Auto"/>
                  <windows:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="Auto"/>
                </windows:DataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                       Value="Collapsed"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                       Value="False"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="false"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                       Value="Collapsed"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                       Value="True"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="DropDown"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="false"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                  <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}"
                                       Value="Collapsed"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}"
                                       Value="True"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="Header"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                    <windows:Setter.Value>
                      <ribbon:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="true"/>
                    </windows:Setter.Value>
                  </windows:Setter>
                </windows:MultiDataTrigger>
                <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="true">
                  <windows:Setter TargetName="OuterBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ĩ}" Property="Border.Background"/>
                  <windows:Setter TargetName="PART_ToggleButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                                  Property="Control.BorderBrush"/>
                </windows:Trigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition SourceName="PART_ToggleButton" Property="UIElement.IsMouseOver" Value="true"/>
                    <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="OuterBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ĩ}" Property="Border.Background"/>
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                                  Property="Control.BorderBrush"/>
                </windows:MultiTrigger>
                <windows:Trigger SourceName="PART_ToggleButton" Property="UIElement.IsKeyboardFocused" Value="true">
                  <windows:Setter TargetName="OuterBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                                  Property="Control.BorderBrush"/>
                </windows:Trigger>
                <windows:Trigger Property="ribbon:RibbonSplitButton.IsChecked" Value="true">
                  <windows:Setter TargetName="OuterBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="PART_ToggleButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                                  Property="Control.BorderBrush"/>
                </windows:Trigger>
                <windows:Trigger SourceName="PART_ToggleButton" Property="ToggleButton.IsChecked" Value="True">
                  <windows:Setter TargetName="OuterBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ĩ}" Property="Border.Background"/>
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                                  Property="Control.BorderBrush"/>
                </windows:Trigger>
                <windows:Trigger Property="ribbon:RibbonMenuButton.IsInControlGroup" Value="true">
                  <windows:Setter TargetName="OuterBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
                  <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0"/>
                </windows:Trigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
                    <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
                </windows:MultiTrigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="false"/>
                    <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
                  <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                                  Property="windows:FrameworkElement.Style"/>
                </windows:MultiTrigger>
                <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true">
                  <windows:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0"/>
                  <windows:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1"/>
                </windows:Trigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true"/>
                    <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
                    <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Õ}"
                                  Property="windows:FrameworkElement.Style"/>
                </windows:MultiTrigger>
                <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitButton.HeaderQuickAccessToolBarId">
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="false"/>
                </windows:Trigger>
                <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                  <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
                  <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                                  Property="classic:SystemDropShadowChrome.Color"/>
                </windows:Trigger>
                <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
                  <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                </windows:Trigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false"/>
                    <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                                  Property="Control.BorderBrush"/>
                  <windows:Setter TargetName="UnderlayBorder" Property="UIElement.Visibility" Value="Visible"/>
                  <windows:Setter TargetName="PART_ToggleButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                                  Property="Control.BorderBrush"/>
                </windows:MultiTrigger>
                <windows:Trigger Property="UIElement.IsEnabled" Value="false">
                  <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
                </windows:Trigger>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
                  <windows:Setter TargetName="MainGrid"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                                  Property="TextElement.Foreground"/>
                  <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
                  <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                  <windows:Setter TargetName="MenuBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="MenuBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="OuterBorder" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="ResizeControl"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="ResizeControl"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="UnderlayBorder" Property="UIElement.Opacity" Value="0"/>
                </windows:DataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_ToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                                  Property="Control.BorderBrush"/>
                  <windows:Setter TargetName="OverlayBottomBorder" Property="Border.BorderThickness" Value="1"/>
                  <windows:Setter TargetName="OverlayTopBorder" Property="Border.BorderThickness" Value="0,1,0,0"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                    <windows:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="True"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="OuterBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                    <windows:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="False"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="UnderlayBorder" Property="UIElement.Opacity" Value="1"/>
                  <windows:Setter TargetName="UnderlayBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                  Property="Border.Background"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="OuterBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                                  Property="Control.BorderBrush"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_ToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                                  Property="Control.BorderBrush"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                  Property="Control.BorderBrush"/>
                  <windows:Setter TargetName="PART_ToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                  Property="Control.BorderBrush"/>
                </windows:MultiDataTrigger>
                <windows:Trigger Property="ribbon:RibbonMenuButton.IsInQuickAccessToolBar" Value="true">
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="false"/>
                </windows:Trigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="MainGrid"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                                  Property="TextElement.Foreground"/>
                </windows:MultiDataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </windows:Setter.Value>
        </windows:Setter>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style x:Key="ö" TargetType="{x:Type ribbon:RibbonButton}">
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonButton}">
          <Grid SnapsToDevicePixels="true" Background="{windows:TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="1" ContentSource="Content" HorizontalAlignment="Left" VerticalAlignment="Center"
                              Margin="{windows:TemplateBinding Control.Padding}" RecognizesAccessKey="true"/>
          </Grid>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style x:Key="ù" TargetType="{x:Type ribbon:RibbonToggleButton}">
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
          <Grid SnapsToDevicePixels="true" Background="{windows:TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="1" ContentSource="Content" HorizontalAlignment="Left" VerticalAlignment="Center"
                              Margin="{windows:TemplateBinding Control.Padding}" RecognizesAccessKey="true"/>
          </Grid>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style x:Key="÷" TargetType="{x:Type ribbon:RibbonToggleButton}">
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
          <Grid SnapsToDevicePixels="true">
            <Border x:Name="OuterBorder" Background="{windows:TemplateBinding Control.Background}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}"/>
            <Path Data="{windows:StaticResource ð}" Fill="{windows:TemplateBinding Control.Foreground}"
                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </Grid>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonSplitMenuItem}">
    <windows:Setter Property="Control.HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.Padding" Value="3,2,3,2"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonControlService.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonControlService.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="ToolTipService.IsEnabled" Value="false"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonSplitMenuItem}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true" Margin="1">
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="14"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                    Background="{windows:TemplateBinding Control.Background}"/>
            <Border x:Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
                    BorderBrush="Transparent" Background="Transparent"/>
            <Border x:Name="PART_SideBarBorder" Margin="-1,-1,0,-1" BorderThickness="0,0,1,0"
                    Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}"
                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
              <Grid x:Name="SideBarOverlay" Background="{windows:StaticResource ì}">
                <Image x:Name="Image" Margin="4,3,6,1" Width="16" Height="16" VerticalAlignment="Center"
                       HorizontalAlignment="Center" Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"/>
                <Border x:Name="CheckMarkBorder"
                        Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
                        BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
                        BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
                        Margin="1" Width="20" Height="20" CornerRadius="2">
                  <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
                        HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
                        FlowDirection="LeftToRight" Data="{windows:StaticResource ï}"/>
                </Border>
              </Grid>
            </Border>
            <ribbon:RibbonButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{windows:StaticResource ö}"
                                 Command="{windows:TemplateBinding MenuItem.Command}"
                                 CommandParameter="{windows:TemplateBinding MenuItem.CommandParameter}"
                                 CommandTarget="{windows:TemplateBinding MenuItem.CommandTarget}"
                                 Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                                 ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                                 ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                 ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                 SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
                                 Padding="{windows:TemplateBinding Control.Padding}" Background="Transparent" Focusable="false"
                                 ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}"
                                 ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}"
                                 ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}"
                                 ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}"
                                 ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}"
                                 ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}"
                                 KeyTip="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}"
                                 QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}"
                                 CanAddToQuickAccessToolBarDirectly="true"/>
            <Border x:Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0"
                    Background="{windows:TemplateBinding Control.Background}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}">
              <ribbon:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="false"
                                         Style="{windows:StaticResource ÷}" BorderThickness="1,0,0,0" Background="Transparent"
                                         ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}"
                                         ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}"
                                         ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}"
                                         ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}"
                                         ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}"
                                         ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}"
                                         IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
            </Border>
            <Border x:Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0"
                    Background="Transparent" BorderBrush="Transparent"/>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
                   Focusable="false"
                   PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                              RenderOptions.ClearTypeHint="Enabled">
                <Border x:Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                        CornerRadius="2"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                  <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" CornerRadius="2">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                    Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                          <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                       Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                       Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"
                                       Fill="{Binding ElementName=MenuBorder, Path=Background}"/>
                            <Rectangle x:Name="OverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                                       Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                       Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"/>
                          </Canvas>
                          <ItemsPresenter x:Name="ItemsPresenter" Margin="2" Grid.IsSharedSizeScope="true"
                                          KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Grid>
                      </ScrollViewer>
                      <Border x:Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                              BorderThickness="0,1,0,0"
                              BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                        <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                      </Border>
                    </Grid>
                  </Border>
                </Border>
              </classic:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OpaqueRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
              <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                              Value="Disabled"/>
              <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                              Value="Disabled"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="MenuItem.IsChecked" Value="true">
              <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
            </windows:Trigger>
            <windows:Trigger Property="ItemsControl.HasItems" Value="true">
              <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
            </windows:Trigger>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:Trigger>
            <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
              <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly"
                              Value="false"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
            </windows:Trigger>
            <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
              <windows:Setter TargetName="HighlightRightBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="HighlightRightBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Control.BorderBrush"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
                <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="HighlightLeftBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="HighlightLeftBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
                <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="HighlightRightBorderOverlay" Value="{windows:StaticResource ë}"
                              Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
              <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
                <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
                <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="false"/>
                <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="HighlightLeftBorderOverlay" Value="{windows:StaticResource ë}"
                              Property="Border.Background"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="MenuItem.IsChecked" Value="true">
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Control.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="MenuItem.IsPressed" Value="true">
              <windows:Setter TargetName="HighlightLeftBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="HighlightRightBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="HighlightLeftBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="HighlightRightBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Control.BorderBrush"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="PART_ArrowToggleButton" Value="{windows:StaticResource Ë}"
                              Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="PART_HeaderButton" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
              <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
              <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="PART_SideBarBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_SubMenuScrollViewer"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Control.Foreground"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="CheckMark"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="Shape.Fill"/>
              <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
              <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="CheckMarkBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="CheckMarkBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Control.BorderBrush"/>
              <windows:Setter TargetName="HighlightLeftBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="HighlightRightBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="HighlightLeftBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="HighlightRightBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Control.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding ElementName=PART_ArrowToggleButton, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Control.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_ArrowToggleButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="PART_HeaderButton"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
              <windows:Setter TargetName="CheckMarkBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="CheckMark"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="MenuItem.IsCheckable" Value="true">
        <windows:Setter Property="Control.Template">
          <windows:Setter.Value>
            <ControlTemplate TargetType="{x:Type ribbon:RibbonSplitMenuItem}">
              <Grid x:Name="MainGrid" SnapsToDevicePixels="true" Margin="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="14"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
                        BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                        Background="{windows:TemplateBinding Control.Background}"/>
                <Border x:Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
                        BorderBrush="Transparent" Background="Transparent"/>
                <Border x:Name="PART_SideBarBorder" Margin="-1,-1,0,-1" BorderThickness="0,0,1,0"
                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                  <Grid x:Name="SideBarOverlay" Background="{windows:StaticResource ì}">
                    <Image x:Name="Image" Margin="4,3,6,1" Width="16" Height="16" VerticalAlignment="Center"
                           HorizontalAlignment="Center" Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"/>
                    <Border x:Name="CheckMarkBorder"
                            Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
                            BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
                            BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
                            Margin="1" Width="20" Height="20" CornerRadius="2">
                      <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
                            HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
                            FlowDirection="LeftToRight" Data="{windows:StaticResource ï}"/>
                    </Border>
                  </Grid>
                </Border>
                <ribbon:RibbonToggleButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{windows:StaticResource ù}"
                                           Command="{windows:TemplateBinding MenuItem.Command}"
                                           CommandParameter="{windows:TemplateBinding MenuItem.CommandParameter}"
                                           CommandTarget="{windows:TemplateBinding MenuItem.CommandTarget}"
                                           Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                                           ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                                           ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                           ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                           SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
                                           Padding="{windows:TemplateBinding Control.Padding}" Background="Transparent" Focusable="false"
                                           ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}"
                                           ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}"
                                           ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}"
                                           ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}"
                                           ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}"
                                           ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}"
                                           KeyTip="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}"
                                           QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}"
                                           CanAddToQuickAccessToolBarDirectly="true"/>
                <Border x:Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0"
                        Background="{windows:TemplateBinding Control.Background}"
                        BorderBrush="{windows:TemplateBinding Control.BorderBrush}">
                  <ribbon:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="false"
                                             Style="{windows:StaticResource ÷}" BorderThickness="1,0,0,0" Background="Transparent"
                                             ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}"
                                             ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}"
                                             ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}"
                                             ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}"
                                             ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}"
                                             ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}"
                                             IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                </Border>
                <Border x:Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0"
                        Background="Transparent" BorderBrush="Transparent"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
                       Focusable="false"
                       PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                  <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                                  RenderOptions.ClearTypeHint="Enabled">
                    <Border x:Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                            CornerRadius="2"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                      <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" CornerRadius="2">
                        <Grid>
                          <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                          </Grid.RowDefinitions>
                          <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                        Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                              <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                           Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                           Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"
                                           Fill="{Binding ElementName=MenuBorder, Path=Background}"/>
                                <Rectangle x:Name="OverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                                           Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                           Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"/>
                              </Canvas>
                              <ItemsPresenter x:Name="ItemsPresenter" Margin="2" Grid.IsSharedSizeScope="true"
                                              KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Grid>
                          </ScrollViewer>
                          <Border x:Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                                  BorderThickness="0,1,0,0"
                                  BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                            <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                          </Border>
                        </Grid>
                      </Border>
                    </Border>
                  </classic:SystemDropShadowChrome>
                </Popup>
              </Grid>
              <ControlTemplate.Triggers>
                <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                  <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                                  Property="Canvas.Top"/>
                  <windows:Setter TargetName="OpaqueRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                  Property="Canvas.Left"/>
                  <windows:Setter TargetName="OverlayRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
                  <windows:Setter TargetName="OverlayRect"
                                  Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                  Property="Canvas.Left"/>
                </windows:Trigger>
                <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
                  <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                                  Value="Disabled"/>
                  <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                                  Value="Disabled"/>
                </windows:Trigger>
                <windows:Trigger Property="ItemsControl.HasItems" Value="true">
                  <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
                </windows:Trigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
                    <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
                </windows:MultiTrigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
                    <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
                  <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                                  Property="windows:FrameworkElement.Style"/>
                </windows:MultiTrigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
                    <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
                    <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                                  Property="windows:FrameworkElement.Style"/>
                </windows:MultiTrigger>
                <windows:Trigger Property="MenuItem.IsChecked" Value="true">
                  <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
                  <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
                  <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
                </windows:Trigger>
                <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                  <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
                </windows:Trigger>
                <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="false"/>
                </windows:Trigger>
                <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                  <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
                  <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                                  Property="classic:SystemDropShadowChrome.Color"/>
                </windows:Trigger>
                <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
                  <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                </windows:Trigger>
                <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
                  <windows:Setter TargetName="HighlightRightBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="HighlightRightBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                                  Property="Control.BorderBrush"/>
                  <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
                  <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
                </windows:Trigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
                    <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="true"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="HighlightLeftBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="HighlightLeftBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                                  Property="Border.BorderBrush"/>
                </windows:MultiTrigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
                    <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="HighlightRightBorderOverlay" Value="{windows:StaticResource ë}"
                                  Property="Border.Background"/>
                </windows:MultiTrigger>
                <windows:Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                  <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
                </windows:Trigger>
                <windows:MultiTrigger>
                  <windows:MultiTrigger.Conditions>
                    <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
                    <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
                    <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="false"/>
                    <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
                  </windows:MultiTrigger.Conditions>
                  <windows:Setter TargetName="HighlightLeftBorderOverlay" Value="{windows:StaticResource ë}"
                                  Property="Border.Background"/>
                </windows:MultiTrigger>
                <windows:Trigger Property="MenuItem.IsChecked" Value="true">
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                                  Property="Control.BorderBrush"/>
                </windows:Trigger>
                <windows:Trigger Property="MenuItem.IsPressed" Value="true">
                  <windows:Setter TargetName="HighlightLeftBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="HighlightRightBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="HighlightLeftBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="HighlightRightBorder"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                                  Property="Control.BorderBrush"/>
                  <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
                  <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
                </windows:Trigger>
                <windows:Trigger Property="UIElement.IsEnabled" Value="false">
                  <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5"/>
                  <windows:Setter TargetName="PART_ArrowToggleButton" Value="{windows:StaticResource Ë}"
                                  Property="TextElement.Foreground"/>
                </windows:Trigger>
                <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false">
                  <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
                  <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
                  <windows:Setter TargetName="PART_HeaderButton" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
                </windows:Trigger>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
                  <windows:Setter TargetName="MainGrid"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                                  Property="TextElement.Foreground"/>
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                                  Property="TextElement.Foreground"/>
                  <windows:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="Transparent"/>
                  <windows:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="Transparent"/>
                  <windows:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                  <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
                  <windows:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="Transparent"/>
                  <windows:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="PART_SideBarBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="PART_SubMenuScrollViewer"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                                  Property="Control.Foreground"/>
                  <windows:Setter TargetName="MenuBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="MenuBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="ResizeControl"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="ResizeControl"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="CheckMark"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                                  Property="Shape.Fill"/>
                  <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
                  <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
                  <windows:Setter TargetName="CheckMarkBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="CheckMarkBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                                  Property="Border.BorderBrush"/>
                </windows:DataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="MainGrid"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                                  Property="TextElement.Foreground"/>
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                                  Property="TextElement.Foreground"/>
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                                  Property="Control.BorderBrush"/>
                  <windows:Setter TargetName="HighlightLeftBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="HighlightRightBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                  Property="Border.Background"/>
                  <windows:Setter TargetName="HighlightLeftBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="HighlightRightBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="Transparent"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                                  Property="Control.BorderBrush"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding ElementName=PART_ArrowToggleButton, Path=IsChecked}" Value="True"/>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                                  Property="Control.Background"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_ArrowToggleButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                                  Property="TextElement.Foreground"/>
                </windows:MultiDataTrigger>
                <windows:MultiDataTrigger>
                  <windows:MultiDataTrigger.Conditions>
                    <windows:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="False"/>
                    <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                  </windows:MultiDataTrigger.Conditions>
                  <windows:Setter TargetName="PART_HeaderButton"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                                  Property="TextElement.Foreground"/>
                  <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
                  <windows:Setter TargetName="CheckMarkBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="CheckMark"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                                  Property="Shape.Fill"/>
                </windows:MultiDataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </windows:Setter.Value>
        </windows:Setter>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonTab}">
    <windows:Setter Property="controls:KeyTipService.IsKeyTipScope" Value="true"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonTab}">
          <Grid x:Name="MainGrid" ClipToBounds="true"
                Visibility="{windows:TemplateBinding IsSelected, Converter={windows:StaticResource à}}">
            <Line x:Name="OuterLeftLine" StrokeThickness="2" X1="0" Y1="0" Y2="0"
                  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                  X2="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabHeaderLeft}"/>
            <Line x:Name="OuterRightLine" StrokeThickness="2" Y1="0" Y2="0"
                  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                  X1="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabHeaderRight}"
                  X2="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"/>
            <ScrollViewer x:Name="ScrollViewer" Style="{windows:StaticResource Ī}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top"
                        Margin="0,1,0,0">
                  <Rectangle x:Name="OpaqueRect" Height="{Binding ElementName=ScrollViewer, Path=ActualHeight}"
                             Width="{Binding ElementName=ScrollViewer, Path=ActualWidth}"
                             Fill="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).Background}"/>
                  <Rectangle x:Name="OverlayRect" Fill="{windows:StaticResource Ù}"
                             Height="{Binding ElementName=ScrollViewer, Path=ActualHeight}"
                             Width="{Binding ElementName=ScrollViewer, Path=ActualWidth}"/>
                  <Rectangle x:Name="InnerOverlayRect" Fill="{windows:StaticResource Ø}"
                             Height="{Binding ElementName=ScrollViewer, Path=ActualHeight}"
                             Width="{Binding ElementName=ScrollViewer, Path=ActualWidth}"/>
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter"/>
              </Grid>
            </ScrollViewer>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger SourceName="ScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="OverlayRect" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OverlayRect" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ContextualTabGroup}" Value="{x:Null}"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterLeftLine"
                              Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonTab}}, Path=Ribbon.BorderBrush}"
                              Property="Shape.Stroke"/>
              <windows:Setter TargetName="OuterRightLine"
                              Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonTab}}, Path=Ribbon.BorderBrush}"
                              Property="Shape.Stroke"/>
            </windows:MultiDataTrigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="OuterLeftLine"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Shape.Stroke"/>
              <windows:Setter TargetName="OuterRightLine"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                              Property="Shape.Stroke"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonTabHeaderItemsControl}">
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonTabHeaderItemsControl}">
          <Border x:Name="MainBorder" Background="{windows:TemplateBinding Control.Background}">
            <ScrollViewer x:Name="ScrollViewer" Style="{windows:StaticResource Ī}">
              <ItemsPresenter x:Name="ItemsPresenter"/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="MainBorder" Property="Border.Background" Value="Transparent"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type controls:KeyTipControl}">
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource È}"/>
    <windows:Setter Property="Control.BorderBrush" Value="{windows:StaticResource É}"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="Control.Padding" Value="3,0"/>
    <windows:Setter Property="Control.FontSize"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.CaptionFontSizeKey}}"/>
    <windows:Setter Property="Control.FontStyle"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.StatusFontStyleKey}}"/>
    <windows:Setter Property="Control.FontWeight"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.StatusFontWeightKey}}"/>
    <windows:Setter Property="Control.FontFamily"
                    Value="{windows:DynamicResource {x:Static windows:SystemFonts.StatusFontFamilyKey}}"/>
    <windows:Setter Property="Control.Foreground"
                    Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"/>
    <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="20"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:KeyTipControl}">
          <Border Name="OuterBorder" Background="{windows:TemplateBinding Control.Background}"
                  BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                  BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="1">
            <Border Name="InnerBorder" Padding="{windows:TemplateBinding Control.Padding}"
                    Background="{windows:StaticResource Ê}">
              <TextBlock Text="{windows:TemplateBinding controls:KeyTipControl.Text}" HorizontalAlignment="Center"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter Value="{windows:StaticResource Ë}" TargetName="OuterBorder" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter Value="{windows:DynamicResource {x:Static windows:SystemColors.InfoTextBrushKey}}"
                              TargetName="OuterBorder" Property="Border.BorderBrush"/>
              <windows:Setter Value="{windows:DynamicResource {x:Static windows:SystemColors.InfoBrushKey}}"
                              TargetName="OuterBorder" Property="Border.Background"/>
              <windows:Setter Value="{windows:DynamicResource {x:Static windows:SystemColors.InfoTextBrushKey}}"
                              TargetName="OuterBorder" Property="TextElement.Foreground"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
                <windows:Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              TargetName="OuterBorder" Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <SolidColorBrush x:Key="â" Color="#FF114EAF"/>
  <LinearGradientBrush x:Key="ã" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#90FFFFFF"/>
    <GradientStop Offset="0.5" Color="#30FFFFFF"/>
    <GradientStop Offset="0.5" Color="Transparent"/>
    <GradientStop Offset="1" Color="#70FFFFFF"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ä" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#60FFFFFF"/>
    <GradientStop Offset="0.5" Color="#20FFFFFF"/>
    <GradientStop Offset="0.5" Color="Transparent"/>
    <GradientStop Offset="1" Color="Transparent"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="å" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#A0FFFFFF"/>
    <GradientStop Offset="0.5" Color="#60FFFFFF"/>
    <GradientStop Offset="0.5" Color="Transparent"/>
    <GradientStop Offset="1" Color="#D0FFFFFF"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="æ" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#90FFFFFF"/>
    <GradientStop Offset="0.5" Color="#20FFFFFF"/>
    <GradientStop Offset="0.5" Color="Transparent"/>
    <GradientStop Offset="1" Color="Transparent"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ç" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#A0FFFFFF"/>
    <GradientStop Offset="0.2" Color="#90FFFFFF"/>
    <GradientStop Offset="0.4" Color="#80FFFFFF"/>
    <GradientStop Offset="0.6" Color="#50FFFFFF"/>
    <GradientStop Offset="0.8" Color="Transparent"/>
    <GradientStop Offset="1" Color="#30FFFFFF"/>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="è">
    <GradientStop Offset="0" Color="LightGray"/>
    <GradientStop Offset="0.4" Color="White"/>
  </RadialGradientBrush>
  <Geometry x:Key="é">
    M 0 0 L 2.25 3 L 4.5 0 Z
  </Geometry>
  <windows:Style x:Key="ê" TargetType="{x:Type ribbon:RibbonToggleButton}">
    <windows:Setter Property="Control.BorderBrush" Value="{windows:StaticResource â}"/>
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource â}"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="Control.Foreground" Value="{windows:StaticResource è}"/>
    <windows:Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="FocusManager.IsFocusScope" Value="false"/>
    <windows:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Bottom"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
          <Grid SnapsToDevicePixels="true"
                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"
                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}">
            <Border x:Name="OuterBorder" BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                    Background="{windows:TemplateBinding Control.Background}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="0,2,0,0"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <Border x:Name="MiddleBorder" BorderBrush="Transparent" Background="{windows:StaticResource ã}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="0,2,0,0"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Border x:Name="InnerBorder" BorderBrush="{windows:StaticResource ä}" Background="Transparent"
                      BorderThickness="1" CornerRadius="0,2,0,0"/>
            </Border>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
              <Image IsHitTestVisible="false" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16"
                     Height="16" Margin="0,-0.5,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor"
                     RenderOptions.EdgeMode="Aliased"
                     Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ribbon:RibbonApplicationMenu}}, Path=SmallImageSource}"/>
              <Path x:Name="DownArrow" Data="{windows:StaticResource é}" Stroke="{windows:StaticResource ã}"
                    StrokeThickness=".5" Fill="{windows:TemplateBinding Control.Foreground}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3.5,0,0,0">
                <UIElement.RenderTransform>
                  <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                </UIElement.RenderTransform>
              </Path>
            </StackPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                <windows:Condition Property="ToggleButton.IsChecked" Value="False"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource å}" Property="Border.Background"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource æ}" Property="Border.BorderBrush"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="UIElement.IsMouseOver" Value="true"/>
                <windows:Condition Property="ToggleButton.IsChecked" Value="False"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MiddleBorder" Value="{windows:StaticResource å}" Property="Border.Background"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource æ}" Property="Border.BorderBrush"/>
            </windows:MultiTrigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="MiddleBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="MiddleBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="MiddleBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="DownArrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Shape.Stroke"/>
              <windows:Setter TargetName="DownArrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkDarkBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonApplicationMenu}">
    <windows:Style.Resources>
      <windows:Style TargetType="{x:Type ribbon:RibbonSeparator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
        <windows:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <windows:Setter Property="UIElement.Focusable" Value="false"/>
        <windows:Setter Property="Control.BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonApplicationMenu}}, Path=Ribbon.BorderBrush}"/>
        <windows:Setter Property="Control.Background"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonApplicationMenu}}, Path=Ribbon.Background}"/>
        <windows:Setter Property="Control.FontWeight" Value="Bold"/>
        <windows:Setter Property="Control.Template">
          <windows:Setter.Value>
            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
              <Border x:Name="MainBorder" BorderThickness="0,1,0,1"
                      BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                      Background="{windows:TemplateBinding Control.Background}">
                <Border x:Name="Overlay" Background="{windows:StaticResource ì}">
                  <TextBlock x:Name="Text" Margin="2,1,2,1" Text="{windows:TemplateBinding ribbon:RibbonSeparator.Label}"/>
                </Border>
              </Border>
              <ControlTemplate.Triggers>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="Text"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                                  Property="TextBlock.Foreground"/>
                  <windows:Setter TargetName="Overlay" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                                  Property="Border.Background"/>
                </windows:DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </windows:Setter.Value>
        </windows:Setter>
        <windows:Style.Triggers>
          <windows:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
            <windows:Setter Property="Control.Template">
              <windows:Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                  <Grid x:Name="Grid" Margin="1" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                      <ColumnDefinition Width="*" MinWidth="44"/>
                      <ColumnDefinition Width="22"/>
                    </Grid.ColumnDefinitions>
                    <Line x:Name="Line" Grid.Column="1" Grid.ColumnSpan="2" X1="0" Y1="0" X2="1" Y2="0"
                          Stroke="{windows:TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                      <windows:Setter TargetName="Line"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Shape.Stroke"/>
                      <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.Margin" Value="0"/>
                    </windows:DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </windows:Setter.Value>
            </windows:Setter>
          </windows:Trigger>
        </windows:Style.Triggers>
      </windows:Style>
    </windows:Style.Resources>
    <windows:Setter Property="Control.BorderBrush" Value="{windows:StaticResource â}"/>
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource â}"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="windows:FrameworkElement.Height" Value="23"/>
    <windows:Setter Property="windows:FrameworkElement.Width" Value="56"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonApplicationMenu}">
          <Grid x:Name="OuterGrid" Focusable="false" SnapsToDevicePixels="true">
            <ribbon:RibbonToggleButton x:Name="PART_ToggleButton" BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                                       Background="{windows:TemplateBinding Control.Background}"
                                       BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                                       Style="{windows:StaticResource ê}"
                                       FocusVisualStyle="{windows:TemplateBinding windows:FrameworkElement.FocusVisualStyle}"
                                       ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipTitle}"
                                       ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipDescription}"
                                       ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipImageSource}"
                                       ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterTitle}"
                                       ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterDescription}"
                                       ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterImageSource}"
                                       SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}"
                                       Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"
                                       Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"
                                       IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"/>
            <Border x:Name="CenterBorder" Height="1" Margin="-1,-1,0,0" HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"/>
            <Popup x:Name="PART_Popup" AllowsTransparency="true"
                   PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                   SnapsToDevicePixels="true"
                   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}"
                   PlacementTarget="{Binding ElementName=CenterBorder}">
              <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                              RenderOptions.ClearTypeHint="Enabled">
                <Grid>
                  <Border x:Name="PopupBorder" BorderThickness="1" CornerRadius="2"
                          BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}"
                          Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.Background}">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <Border x:Name="HeaderBorder" Background="Transparent" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0"
                              BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}"/>
                      <Border x:Name="HeaderOverlayBorder" BorderBrush="{windows:StaticResource ë}"
                              Background="{windows:StaticResource å}" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0"/>
                      <Grid Row="1">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="2"/>
                          <ColumnDefinition Width="300"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="MainPaneBorder" Background="{windows:StaticResource í}">
                          <Grid>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="Auto"/>
                              <RowDefinition/>
                              <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer x:Name="PART_SubMenuScrollViewer" Grid.Row="1" CanContentScroll="true"
                                          Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                              <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                  <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                             Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}"
                                             Width="{Binding ElementName=MainPaneBorder, Path=ActualWidth}"
                                             Fill="{Binding ElementName=MainPaneBorder, Path=Background}"/>
                                  <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                             Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}"
                                             Width="{Binding ElementName=MainPaneBorder, Path=ActualWidth}"
                                             Fill="{Binding ElementName=MainPaneBorder, Path=Background}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" Grid.IsSharedSizeScope="true"/>
                              </Grid>
                            </ScrollViewer>
                            <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                                    BorderThickness="0,1,0,0"
                                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                              <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                            </Border>
                          </Grid>
                        </Border>
                        <Border x:Name="PART_SubmenuPlaceholder" Grid.Column="2" Background="{windows:StaticResource ë}"
                                Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}">
                          <ContentPresenter x:Name="PART_AuxiliaryPaneContentPresenter" ContentSource="AuxiliaryPaneContent"
                                            ContentTemplate="{windows:TemplateBinding ribbon:RibbonApplicationMenu.AuxiliaryPaneContentTemplate}"
                                            ContentTemplateSelector="{windows:TemplateBinding ribbon:RibbonApplicationMenu.AuxiliaryPaneContentTemplateSelector}"/>
                        </Border>
                        <Border x:Name="VerticalBorder" Grid.Column="1" HorizontalAlignment="Left" Background="White" Width="2"
                                BorderThickness="1,0,0,0"
                                BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}"/>
                        <Border x:Name="VerticalOverlayBorder" Grid.Column="1" HorizontalAlignment="Left" Background="Transparent"
                                Width="2" BorderThickness="1,0,0,0" BorderBrush="{windows:StaticResource ë}"/>
                      </Grid>
                      <Border x:Name="FooterBorder" Grid.Row="2" Background="Transparent" BorderThickness="0,1,0,0"
                              CornerRadius="0,0,2,2"
                              BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}">
                        <Border x:Name="FooterBackgroundOverlayBorder" BorderBrush="Transparent"
                                Background="{windows:StaticResource ç}" CornerRadius="0,0,2,2">
                          <ContentPresenter x:Name="PART_FooterPaneContentPresenter" Margin="2" MinHeight="12"
                                            ContentSource="FooterPaneContent"
                                            ContentTemplate="{windows:TemplateBinding ribbon:RibbonApplicationMenu.FooterPaneContentTemplate}"
                                            ContentTemplateSelector="{windows:TemplateBinding ribbon:RibbonApplicationMenu.FooterPaneContentTemplateSelector}"/>
                        </Border>
                      </Border>
                      <Border x:Name="FooterOverlayBorder" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                              BorderBrush="{windows:StaticResource ë}" Background="Transparent" BorderThickness="0,1,0,0"
                              CornerRadius="0,0,2,2"/>
                    </Grid>
                  </Border>
                  <Canvas>
                    <ribbon:RibbonToggleButton x:Name="PART_PopupToggleButton" Canvas.Top="-24" Canvas.Left="3"
                                               BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                                               Background="{windows:TemplateBinding Control.Background}"
                                               BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                                               Style="{windows:StaticResource ê}" Focusable="false"
                                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(AutomationProperties.Name)}"
                                               IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}"
                                               Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"
                                               Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"/>
                  </Canvas>
                </Grid>
              </classic:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OpaqueRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
              <windows:Setter TargetName="OverlayRect"
                              Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.HasGallery" Value="true">
              <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                              Value="Disabled"/>
              <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                              Value="Disabled"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="false"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true">
              <windows:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0"/>
              <windows:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Õ}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
              <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
              <windows:Setter TargetName="OuterGrid"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="TextElement.Foreground"/>
              <windows:Setter TargetName="PopupBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PopupBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PopupBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="HeaderBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="HeaderBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="HeaderOverlayBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="HeaderOverlayBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="HeaderOverlayBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="MainPaneBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="PART_SubmenuPlaceholder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="VerticalBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="VerticalBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="VerticalOverlayBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="FooterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="FooterBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="FooterOverlayBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="FooterOverlayBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="FooterBackgroundOverlayBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="FooterBackgroundOverlayBorder" Property="Border.CornerRadius" Value="0"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="true">
        <windows:Setter Property="ToolTipService.IsEnabled" Value="false"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <ControlTemplate x:Key="õ" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="true" Margin="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
        <ColumnDefinition Width="*" MinWidth="44"/>
        <ColumnDefinition Width="22"/>
      </Grid.ColumnDefinitions>
      <Border x:Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}"/>
      <Border x:Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
              BorderBrush="Transparent" Background="Transparent"/>
      <Image x:Name="Image" Margin="6,4,6,4" Width="32" Height="32" VerticalAlignment="Center"
             HorizontalAlignment="Center" Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
             RenderOptions.BitmapScalingMode="NearestNeighbor"/>
      <Border x:Name="CheckMarkBorder"
              Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
              BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
              BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
              Margin="1" Width="30" Height="30" CornerRadius="2">
        <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
              HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
              FlowDirection="LeftToRight" Data="{windows:StaticResource ï}">
          <UIElement.RenderTransform>
            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
          </UIElement.RenderTransform>
        </Path>
      </Border>
      <ribbon:RibbonButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{windows:StaticResource ö}"
                           Command="{windows:TemplateBinding MenuItem.Command}"
                           CommandParameter="{windows:TemplateBinding MenuItem.CommandParameter}"
                           CommandTarget="{windows:TemplateBinding MenuItem.CommandTarget}"
                           Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                           ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                           ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                           ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                           SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
                           Padding="{windows:TemplateBinding Control.Padding}" HorizontalContentAlignment="Left"
                           Background="Transparent" Focusable="false"
                           ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}"
                           ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}"
                           ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}"
                           ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}"
                           ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}"
                           ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}"
                           KeyTip="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}"
                           QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}"
                           CanAddToQuickAccessToolBarDirectly="true"/>
      <Border x:Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}">
        <ribbon:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="false"
                                   Style="{windows:StaticResource ÷}" BorderThickness="1,0,0,0" Background="Transparent"
                                   ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}"
                                   ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}"
                                   ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}"
                                   ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}"
                                   ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}"
                                   ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}"
                                   IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
      </Border>
      <Border x:Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0"
              HorizontalAlignment="Stretch" BorderBrush="Transparent" Background="Transparent"/>
      <Popup x:Name="PART_Popup" AllowsTransparency="true"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             Placement="Relative" Focusable="false" SnapsToDevicePixels="true"
             IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled">
          <Grid>
            <Border x:Name="PopupBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    CornerRadius="2"
                    BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border x:Name="PopupOverlayBorder" BorderBrush="{windows:StaticResource ë}"
                    Background="{windows:StaticResource í}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="2">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="PART_SubMenuScrollViewer" CanContentScroll="true" HorizontalScrollBarVisibility="Disabled"
                              Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                      <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                      <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                  </Grid>
                </ScrollViewer>
                <Border x:Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                  <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                </Border>
              </Grid>
            </Border>
          </Grid>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="ItemsControl.HasItems" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
        <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly"
                        Value="false"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="false"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_ArrowToggleButton" Value="{windows:StaticResource Ë}"
                        Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_HeaderButton" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PopupOverlayBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ø" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="true" Margin="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
        <ColumnDefinition Width="*" MinWidth="44"/>
        <ColumnDefinition Width="22"/>
      </Grid.ColumnDefinitions>
      <Border x:Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}"/>
      <Border x:Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
              BorderBrush="Transparent" Background="Transparent"/>
      <Image x:Name="Image" Margin="6,4,6,4"
             Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Width="32" Height="32"
             VerticalAlignment="Center" HorizontalAlignment="Center"
             RenderOptions.BitmapScalingMode="NearestNeighbor"/>
      <Border x:Name="CheckMarkBorder"
              Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
              BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
              BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
              Margin="1" Width="30" Height="30" CornerRadius="2">
        <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
              HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
              FlowDirection="LeftToRight" Data="{windows:StaticResource ï}">
          <UIElement.RenderTransform>
            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
          </UIElement.RenderTransform>
        </Path>
      </Border>
      <ribbon:RibbonToggleButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{windows:StaticResource ù}"
                                 Command="{windows:TemplateBinding MenuItem.Command}"
                                 CommandParameter="{windows:TemplateBinding MenuItem.CommandParameter}"
                                 CommandTarget="{windows:TemplateBinding MenuItem.CommandTarget}"
                                 Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                                 ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                                 ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                 ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                 SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
                                 Padding="{windows:TemplateBinding Control.Padding}" HorizontalContentAlignment="Left"
                                 Background="Transparent" Focusable="false"
                                 ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}"
                                 ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}"
                                 ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}"
                                 ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}"
                                 ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}"
                                 ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}"
                                 KeyTip="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}"
                                 QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}"
                                 CanAddToQuickAccessToolBarDirectly="true"/>
      <Border x:Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}">
        <ribbon:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="false"
                                   Style="{windows:StaticResource ÷}" BorderThickness="1,0,0,0" Background="Transparent"
                                   ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}"
                                   ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}"
                                   ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}"
                                   ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}"
                                   ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}"
                                   ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}"
                                   IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
      </Border>
      <Border x:Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0"
              HorizontalAlignment="Stretch" BorderBrush="Transparent" Background="Transparent"/>
      <Popup x:Name="PART_Popup" AllowsTransparency="true"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             Placement="Relative" Focusable="false" SnapsToDevicePixels="true"
             IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled">
          <Grid>
            <Border x:Name="PopupBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    CornerRadius="2"
                    BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border x:Name="PopupOverlayBorder" BorderBrush="{windows:StaticResource ë}"
                    Background="{windows:StaticResource í}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}" CornerRadius="2">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="PART_SubMenuScrollViewer" CanContentScroll="true" HorizontalScrollBarVisibility="Disabled"
                              Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                      <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                      <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                  </Grid>
                </ScrollViewer>
                <Border x:Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                  <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                </Border>
              </Grid>
            </Border>
          </Grid>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="ItemsControl.HasItems" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
        <windows:Setter TargetName="PART_HeaderButton"
                        Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="false"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="false"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_ArrowToggleButton" Value="{windows:StaticResource Ë}"
                        Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_HeaderButton" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="PopupBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PopupOverlayBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ú" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
    <Grid x:Name="MainGrid" Margin="1" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="44" SharedSizeGroup="MenuItemIconColumnGroup"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="22"/>
      </Grid.ColumnDefinitions>
      <Border x:Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}"/>
      <Border x:Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
              BorderBrush="Transparent" Background="Transparent"/>
      <Image x:Name="Image" Margin="4,3,6,1" Width="32" Height="32" VerticalAlignment="Center"
             HorizontalAlignment="Center" Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
             RenderOptions.BitmapScalingMode="NearestNeighbor"/>
      <Border x:Name="CheckMarkBorder"
              Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
              BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
              BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
              Margin="1" Width="30" Height="30" CornerRadius="2">
        <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
              HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
              FlowDirection="LeftToRight" Data="{windows:StaticResource ï}">
          <UIElement.RenderTransform>
            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
          </UIElement.RenderTransform>
        </Path>
      </Border>
      <ribbon:RibbonButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{windows:StaticResource ö}"
                           Command="{windows:TemplateBinding MenuItem.Command}"
                           CommandParameter="{windows:TemplateBinding MenuItem.CommandParameter}"
                           CommandTarget="{windows:TemplateBinding MenuItem.CommandTarget}"
                           Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                           ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                           ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                           ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                           SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
                           Padding="{windows:TemplateBinding Control.Padding}" HorizontalContentAlignment="Left"
                           Background="Transparent" Focusable="false"
                           ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}"
                           ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}"
                           ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}"
                           ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}"
                           ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}"
                           ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}"
                           KeyTip="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}"
                           QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}"
                           CanAddToQuickAccessToolBarDirectly="true"/>
      <Border x:Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}">
        <ribbon:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="false"
                                   Style="{windows:StaticResource ÷}" BorderThickness="1,0,0,0" Background="Transparent"
                                   ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}"
                                   ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}"
                                   ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}"
                                   ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}"
                                   ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}"
                                   ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}"
                                   IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
      </Border>
      <Border x:Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0"
              HorizontalAlignment="Stretch" BorderBrush="Transparent" Background="Transparent"/>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
             Focusable="false"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             SnapsToDevicePixels="true"
             IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled">
          <Border x:Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                  CornerRadius="2"
                  BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                  Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                            Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                    <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                    <Rectangle x:Name="InnerOverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                  KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                </Grid>
              </ScrollViewer>
              <Border x:Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                      BorderThickness="0,1,0,0"
                      BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
              </Border>
            </Grid>
          </Border>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="ItemsControl.HasItems" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
        <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly"
                        Value="false"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="false"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_ArrowToggleButton" Value="{windows:StaticResource Ë}"
                        Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_HeaderButton" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="û" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
    <Grid x:Name="MainGrid" Margin="1" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="44" SharedSizeGroup="MenuItemIconColumnGroup"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="22"/>
      </Grid.ColumnDefinitions>
      <Border x:Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}"/>
      <Border x:Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2"
              BorderBrush="Transparent" Background="Transparent"/>
      <Image x:Name="Image" Margin="4,3,6,1" Width="32" Height="32" VerticalAlignment="Center"
             HorizontalAlignment="Center" Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
             RenderOptions.BitmapScalingMode="NearestNeighbor"/>
      <Border x:Name="CheckMarkBorder"
              Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
              BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
              BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
              Margin="1" Width="30" Height="30" CornerRadius="2">
        <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
              HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
              FlowDirection="LeftToRight" Data="{windows:StaticResource ï}">
          <UIElement.RenderTransform>
            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
          </UIElement.RenderTransform>
        </Path>
      </Border>
      <ribbon:RibbonToggleButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{windows:StaticResource ù}"
                                 Command="{windows:TemplateBinding MenuItem.Command}"
                                 CommandParameter="{windows:TemplateBinding MenuItem.CommandParameter}"
                                 CommandTarget="{windows:TemplateBinding MenuItem.CommandTarget}"
                                 Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                                 ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                                 ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                 ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                 SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
                                 Padding="{windows:TemplateBinding Control.Padding}" HorizontalContentAlignment="Left"
                                 Background="Transparent" Focusable="false"
                                 ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}"
                                 ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}"
                                 ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}"
                                 ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}"
                                 ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}"
                                 ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}"
                                 KeyTip="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}"
                                 QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}"
                                 CanAddToQuickAccessToolBarDirectly="true"/>
      <Border x:Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}">
        <ribbon:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="false"
                                   Style="{windows:StaticResource ÷}" BorderThickness="1,0,0,0" Background="Transparent"
                                   ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}"
                                   ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}"
                                   ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}"
                                   ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}"
                                   ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}"
                                   ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}"
                                   IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
      </Border>
      <Border x:Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0"
              HorizontalAlignment="Stretch" BorderBrush="Transparent" Background="Transparent"/>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
             Focusable="false"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             SnapsToDevicePixels="true"
             IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled">
          <Border x:Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                  CornerRadius="2"
                  BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                  Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                            Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                    <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                    <Rectangle x:Name="InnerOverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                  KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                </Grid>
              </ScrollViewer>
              <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                      BorderThickness="0,1,0,0"
                      BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
              </Border>
            </Grid>
          </Border>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="ItemsControl.HasItems" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
        <windows:Setter TargetName="PART_HeaderButton"
                        Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="false"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="false"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_ArrowToggleButton" Value="{windows:StaticResource Ë}"
                        Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_HeaderButton" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ü" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
    <Grid x:Name="MainGrid" Margin="1" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
        <ColumnDefinition Width="4"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="37"/>
        <ColumnDefinition Width="17"/>
      </Grid.ColumnDefinitions>
      <Border x:Name="HighlightLeftBorder" CornerRadius="2,0,0,2" Grid.ColumnSpan="4"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}"/>
      <Border x:Name="HighlightLeftBorderOverlay" CornerRadius="2,0,0,2" Grid.ColumnSpan="4"
              BorderBrush="Transparent" Background="Transparent"/>
      <Image x:Name="Image" Margin="1" Width="16" Height="16"
             Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center"
             HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
      <Border x:Name="CheckMarkBorder"
              Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
              BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
              BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
              Margin="1" Width="20" Height="20" CornerRadius="2">
        <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
              HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
              FlowDirection="LeftToRight" Data="{windows:StaticResource ï}"/>
      </Border>
      <ribbon:RibbonButton x:Name="PART_HeaderButton" Grid.ColumnSpan="4" Style="{windows:StaticResource ö}"
                           Command="{windows:TemplateBinding MenuItem.Command}"
                           CommandParameter="{windows:TemplateBinding MenuItem.CommandParameter}"
                           CommandTarget="{windows:TemplateBinding MenuItem.CommandTarget}"
                           Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                           ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                           ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                           ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                           SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
                           Padding="{windows:TemplateBinding Control.Padding}" HorizontalContentAlignment="Left"
                           Background="Transparent" Focusable="false"
                           ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}"
                           ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}"
                           ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}"
                           ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}"
                           ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}"
                           ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}"
                           KeyTip="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}"
                           QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}"
                           CanAddToQuickAccessToolBarDirectly="true"/>
      <Border x:Name="HighlightRightBorder" Grid.Column="4" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}">
        <ribbon:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="false"
                                   Style="{windows:StaticResource ÷}" BorderThickness="1,0,0,0" Background="Transparent"
                                   ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}"
                                   ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}"
                                   ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}"
                                   ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}"
                                   ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}"
                                   ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}"
                                   IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
      </Border>
      <Border x:Name="HighlightRightBorderOverlay" Grid.Column="4" CornerRadius="0,2,2,0"
              HorizontalAlignment="Stretch" BorderBrush="Transparent" Background="Transparent"/>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
             Focusable="false"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             SnapsToDevicePixels="true"
             IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled">
          <Border x:Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                  CornerRadius="2"
                  BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                  Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                            Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                    <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                    <Rectangle x:Name="InnerOverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                  KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                </Grid>
              </ScrollViewer>
              <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                      BorderThickness="0,1,0,0"
                      BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
              </Border>
            </Grid>
          </Border>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="ItemsControl.HasItems" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
        <windows:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly"
                        Value="false"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="false"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_ArrowToggleButton" Value="{windows:StaticResource Ë}"
                        Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_HeaderButton" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ý" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
    <Grid x:Name="MainGrid" Margin="1" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
        <ColumnDefinition Width="4"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="37"/>
        <ColumnDefinition Width="17"/>
      </Grid.ColumnDefinitions>
      <Border x:Name="HighlightLeftBorder" CornerRadius="2,0,0,2" Grid.ColumnSpan="4"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}"/>
      <Border x:Name="HighlightLeftBorderOverlay" CornerRadius="2,0,0,2" Grid.ColumnSpan="4"
              BorderBrush="Transparent" Background="Transparent"/>
      <Image x:Name="Image" Margin="1" Width="16" Height="16"
             Source="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center"
             HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
      <Border x:Name="CheckMarkBorder"
              Background="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}"
              BorderBrush="{windows:TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}"
              BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"
              Margin="1" Width="20" Height="20" CornerRadius="2">
        <Path x:Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center"
              HorizontalAlignment="Center" Fill="{windows:TemplateBinding Control.Foreground}"
              FlowDirection="LeftToRight" Data="{windows:StaticResource ï}"/>
      </Border>
      <ribbon:RibbonToggleButton x:Name="PART_HeaderButton" Grid.ColumnSpan="4" Style="{windows:StaticResource ù}"
                                 Command="{windows:TemplateBinding MenuItem.Command}"
                                 CommandParameter="{windows:TemplateBinding MenuItem.CommandParameter}"
                                 CommandTarget="{windows:TemplateBinding MenuItem.CommandTarget}"
                                 Content="{windows:TemplateBinding HeaderedItemsControl.Header}"
                                 ContentTemplate="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                                 ContentTemplateSelector="{windows:TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                 ContentStringFormat="{windows:TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                 SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ImageSource}"
                                 Padding="{windows:TemplateBinding Control.Padding}" HorizontalContentAlignment="Left"
                                 Background="Transparent" Focusable="false"
                                 ToolTipTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}"
                                 ToolTipDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}"
                                 ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}"
                                 ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}"
                                 ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}"
                                 ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}"
                                 KeyTip="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}"
                                 QuickAccessToolBarId="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}"
                                 CanAddToQuickAccessToolBarDirectly="true"/>
      <Border x:Name="HighlightRightBorder" Grid.Column="4" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch"
              BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
              Background="{windows:TemplateBinding Control.Background}">
        <ribbon:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="false"
                                   Style="{windows:StaticResource ÷}" BorderThickness="1,0,0,0" Background="Transparent"
                                   ToolTipTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}"
                                   ToolTipDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}"
                                   ToolTipImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}"
                                   ToolTipFooterTitle="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}"
                                   ToolTipFooterDescription="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}"
                                   ToolTipFooterImageSource="{windows:TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}"
                                   IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
      </Border>
      <Border x:Name="HighlightRightBorderOverlay" Grid.Column="4" CornerRadius="0,2,2,0"
              HorizontalAlignment="Stretch" BorderBrush="Transparent" Background="Transparent"/>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" VerticalOffset="-1" Placement="Custom"
             Focusable="false"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             SnapsToDevicePixels="true"
             IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <classic:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" controls:KeyTipService.IsKeyTipScope="true"
                                        RenderOptions.ClearTypeHint="Enabled">
          <Border x:Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                  CornerRadius="2"
                  BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                  Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                            Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=PopupBorder, Path=Background}"/>
                    <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}"/>
                    <Rectangle x:Name="InnerOverlayRect" Fill="{windows:StaticResource Ñ}" RadiusX="2" RadiusY="2"
                               Height="{Binding ElementName=PopupBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=PopupBorder, Path=ActualWidth}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                  KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                </Grid>
              </ScrollViewer>
              <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                      BorderThickness="0,1,0,0"
                      BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
              </Border>
            </Grid>
          </Border>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="InnerOverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource ó}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:Trigger>
      <windows:Trigger Property="ItemsControl.HasItems" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
      </windows:Trigger>
      <windows:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
        <windows:Setter TargetName="PART_HeaderButton"
                        Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="false"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsHighlighted" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <windows:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="false"/>
          <windows:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Value="{windows:StaticResource ë}"
                        Property="Border.Background"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="MenuItem.IsChecked" Value="true">
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="MenuItem.IsPressed" Value="true">
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                        Property="Control.BorderBrush"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_ArrowToggleButton" Value="{windows:StaticResource Ë}"
                        Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="PART_HeaderButton" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="Shape.Fill"/>
        <windows:Setter TargetName="CheckMark" Value="{windows:StaticResource ñ}" Property="Path.Data"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="HighlightLeftBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="HighlightRightBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="PART_ArrowToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
        <windows:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1"/>
        <windows:Setter TargetName="CheckMarkBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="CheckMark"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="Shape.Fill"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <windows:Style TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
    <windows:Setter Property="Control.HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.Padding" Value="3,2,3,2"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuItem.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonControlService.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonControlService.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.IsEnabled" Value="false"/>
    <windows:Setter Property="Control.Template" Value="{windows:StaticResource õ}"/>
    <windows:Style.Triggers>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Top"/>
          <windows:Condition Property="MenuItem.IsCheckable" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource ø}"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Middle"/>
          <windows:Condition Property="MenuItem.IsCheckable" Value="false"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource ú}"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Middle"/>
          <windows:Condition Property="MenuItem.IsCheckable" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource û}"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Sub"/>
          <windows:Condition Property="MenuItem.IsCheckable" Value="false"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource ü}"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Sub"/>
          <windows:Condition Property="MenuItem.IsCheckable" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource ý}"/>
      </windows:MultiTrigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style x:Key="ÿ" TargetType="{x:Type TextBox}">
    <windows:Style.Triggers>
      <windows:DataTrigger Binding="{Binding Path=(coreInternal:CoreAppContextSwitches.UseNetFx472CompatibleAccessibilityFeatures)}"
                           Value="false">
        <windows:Setter Property="AutomationProperties.Name"
                        Value="{Binding Path=(AutomationProperties.Name), Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ribbon:RibbonComboBox}}}"/>
        <windows:Setter Property="AutomationProperties.LabeledBy"
                        Value="{Binding Path=(AutomationProperties.LabeledBy), Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ribbon:RibbonComboBox}}}"/>
        <windows:Setter Property="AutomationProperties.HelpText"
                        Value="{Binding Path=(AutomationProperties.HelpText), Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ribbon:RibbonComboBox}}}"/>
      </windows:DataTrigger>
    </windows:Style.Triggers>
    <windows:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <windows:Setter Property="UIElement.AllowDrop" Value="true"/>
    <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="0"/>
    <windows:Setter Property="windows:FrameworkElement.MinHeight" Value="0"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" Background="Transparent">
            <ContentControl.ContentTemplate>
              <windows:DataTemplate>
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle x:Name="OpaqueRect" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}"
                               Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:Ribbon}}, Path=Background}"/>
                    <Rectangle x:Name="OverlayRect" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}"
                               Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonComboBox}}, Path=Background}"/>
                  </Canvas>
                  <ContentPresenter Content="{Binding}"/>
                </Grid>
                <windows:DataTemplate.Triggers>
                  <windows:DataTrigger Value="false"
                                       Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}, Path=(ScrollViewer.CanContentScroll)}">
                    <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                                    Property="Canvas.Top"/>
                    <windows:Setter TargetName="OpaqueRect"
                                    Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                    Property="Canvas.Left"/>
                    <windows:Setter TargetName="OverlayRect"
                                    Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
                    <windows:Setter TargetName="OverlayRect"
                                    Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                                    Property="Canvas.Left"/>
                  </windows:DataTrigger>
                  <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
                  </windows:DataTrigger>
                </windows:DataTemplate.Triggers>
              </windows:DataTemplate>
            </ContentControl.ContentTemplate>
          </ScrollViewer>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <LinearGradientBrush x:Key="Ā" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#E4F0FE" Offset="0"/>
    <GradientStop Color="#E4F0FE" Offset="0.49"/>
    <GradientStop Color="#CFDFF3" Offset="0.5"/>
    <GradientStop Color="#E8F1FD" Offset="1.0"/>
  </LinearGradientBrush>
  <windows:Style x:Key="ā" TargetType="{x:Type ribbon:RibbonToggleButton}">
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto" SharedSizeGroup="ToggleButtonGroup"/>
            </Grid.ColumnDefinitions>
            <Border Name="OuterBorder" Grid.Column="1" Width="14"
                    Background="{windows:TemplateBinding Control.Background}"
                    BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                    BorderThickness="{windows:TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
              <Border Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1"
                      SnapsToDevicePixels="true">
                <Path Name="Arrow" Fill="{windows:TemplateBinding Control.Foreground}" Data="{windows:StaticResource Ð}"
                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="UIElement.IsMouseOver" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="ToggleButton.IsChecked" Value="True">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource Ă}" Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="ButtonBase.IsPressed" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <windows:Style x:Key="ă" TargetType="{x:Type ribbon:RibbonToggleButton}">
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.CheckedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonToggleButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
          <Border Name="OuterBorder" Width="14" Background="{windows:TemplateBinding Control.Background}"
                  BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                  BorderThickness="{windows:TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <Border Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1"
                    SnapsToDevicePixels="true">
              <Path Name="Arrow" Fill="{windows:TemplateBinding Control.Foreground}" Data="{windows:StaticResource Ð}"
                    HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <windows:Trigger Property="UIElement.IsMouseOver" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource ë}" Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="ToggleButton.IsChecked" Value="True">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Value="{windows:StaticResource Ă}" Property="Border.BorderBrush"/>
            </windows:Trigger>
            <windows:Trigger Property="ButtonBase.IsPressed" Value="true">
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </windows:Trigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
              <windows:Setter TargetName="Arrow"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Shape.Fill"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="OuterBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <ControlTemplate x:Key="Ą" TargetType="{x:Type ribbon:RibbonComboBox}">
    <Border x:Name="MainBorder">
      <Grid Margin="1,0,1,0" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition x:Name="OuterTextColumn" Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Image x:Name="Image" Source="{windows:TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}"
               RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"
               HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}" Grid.Row="0"
               Grid.Column="1" Margin="1" Width="32" Height="32"/>
        <Grid Name="Grid" Row="1" Column="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition x:Name="TextColumn" Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid x:Name="TwoLineTextPanel" VerticalAlignment="Center" HorizontalAlignment="Center">
            <ribbon:RibbonTwoLineText x:Name="TwoLineText" Text="{windows:TemplateBinding ribbon:RibbonMenuButton.Label}"
                                      TextAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="2,0,2,0"/>
            <Rectangle x:Name="FocusVisual" Margin="1" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                       Visibility="Collapsed"/>
          </Grid>
          <Border x:Name="Border" Grid.Column="1" Grid.ColumnSpan="2"
                  BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                  BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                  Background="{windows:TemplateBinding Control.Background}" Height="{windows:StaticResource ą}"/>
          <Grid Column="1" Height="{windows:StaticResource ą}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Name="PART_EditableTextBox"
                     Width="{windows:TemplateBinding ribbon:RibbonComboBox.SelectionBoxWidth}"
                     Margin="{windows:TemplateBinding Control.Padding}" Style="{windows:StaticResource ÿ}"
                     IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ribbon:RibbonToggleButton Name="PART_ToggleButton" Grid.Column="1"
                                       BorderThickness="{windows:TemplateBinding Control.BorderThickness}" Background="Transparent"
                                       BorderBrush="Transparent" Style="{windows:StaticResource ă}"
                                       CheckedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                       CheckedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                       PressedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                       PressedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                       IsTabStop="false"
                                       IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Grid>
        </Grid>
        <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
               Placement="Bottom" Focusable="false"
               PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
               PlacementTarget="{Binding ElementName=Border}"
               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shadow" Color="Transparent"
                                          controls:KeyTipService.IsKeyTipScope="true" RenderOptions.ClearTypeHint="Enabled"
                                          windows:FrameworkElement.MinWidth="{Binding ElementName=Border, Path=ActualWidth}">
            <Border Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    CornerRadius="2"
                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                    Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
              <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" CornerRadius="2">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <ItemsPresenter x:Name="ItemsPresenter" Grid.Row="1" Grid.IsSharedSizeScope="true" Margin="1"
                                  KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"
                                  SnapsToDevicePixels="{windows:TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                          BorderThickness="0,1,0,0"
                          BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                    <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                  </Border>
                </Grid>
              </Border>
            </Border>
          </classic:SystemDropShadowChrome>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <windows:DataTrigger Value="True"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.IsStar}">
        <windows:Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="*"/>
        <windows:Setter TargetName="OuterTextColumn" Property="ColumnDefinition.Width" Value="*"/>
        <windows:Setter TargetName="PART_EditableTextBox" Property="windows:FrameworkElement.Width" Value="Auto"/>
        <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch"/>
      </windows:DataTrigger>
      <windows:DataTrigger Value="Large"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
        <windows:Setter Property="windows:FrameworkElement.Height" Value="66"/>
        <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="32"/>
        <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="32"/>
        <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26"/>
        <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
      </windows:DataTrigger>
      <windows:DataTrigger Value="Small"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter Value="{windows:StaticResource Ć}" Property="windows:FrameworkElement.Height"/>
        <windows:Setter TargetName="Image"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}"
                        Property="Image.Source"/>
        <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="16"/>
        <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="16"/>
        <windows:Setter TargetName="Image" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left"/>
        <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Margin" Value="2,0,1,0"/>
        <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="2,0,1,0"/>
        <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="false"/>
        <windows:Setter TargetName="Image" Property="Grid.Column" Value="0"/>
        <windows:Setter TargetName="Image" Property="Grid.Row" Value="1"/>
      </windows:DataTrigger>
      <windows:DataTrigger Value="Collapsed"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
        <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:DataTrigger>
      <windows:DataTrigger Value="False"
                           Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
        <windows:Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility" Value="Collapsed"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
          <windows:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsMouseOver}" Value="False"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="PART_ToggleButton" Value="{windows:StaticResource Ā}" Property="Control.Background"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
          <windows:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsMouseOver}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
          <windows:Condition Binding="{Binding ElementName=PART_EditableTextBox, Path=IsKeyboardFocused}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="PART_ToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.MouseOverBorderBrush}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="PART_ToggleButton"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.MouseOverBackground}"
                        Property="Control.Background"/>
      </windows:MultiDataTrigger>
      <windows:Trigger Property="ribbon:RibbonComboBox.ShowKeyboardCues" Value="true">
        <windows:Setter TargetName="FocusVisual" Property="UIElement.Visibility" Value="Visible"/>
      </windows:Trigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
        <windows:Setter TargetName="Border" Value="{windows:StaticResource ć}" Property="Border.Background"/>
        <windows:Setter TargetName="Border" Value="{windows:StaticResource Ĉ}" Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MainBorder" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuButton.IsInControlGroup" Value="true">
        <windows:Setter TargetName="MainBorder"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MainBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true">
        <windows:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0"/>
        <windows:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Õ}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowBrushKey}}"
                        Property="Control.Background"/>
        <windows:Setter TargetName="Border"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="Border" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="FocusVisual"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                        Property="Shape.Stroke"/>
        <windows:Setter TargetName="MainBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                        Property="Border.BorderBrush"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
          <windows:Condition Binding="{Binding ElementName=PART_EditableTextBox, Path=IsKeyboardFocused}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="PART_ToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                        Property="Control.BorderBrush"/>
        <windows:Setter TargetName="PART_ToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightBrushKey}}"
                        Property="Control.Background"/>
        <windows:Setter TargetName="PART_ToggleButton"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.Foreground"/>
      </windows:MultiDataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <windows:Style TargetType="{x:Type ribbon:RibbonComboBox}">
    <windows:Style.Resources>
      <windows:Style TargetType="{x:Type ribbon:RibbonSeparator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
        <windows:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <windows:Setter Property="UIElement.Focusable" Value="false"/>
        <windows:Setter Property="Control.BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}"/>
        <windows:Setter Property="Control.Background"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.Background}"/>
        <windows:Setter Property="Control.FontWeight" Value="Bold"/>
        <windows:Setter Property="Control.Template">
          <windows:Setter.Value>
            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
              <Border x:Name="MainBorder" BorderThickness="0,1,0,1"
                      BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                      Background="{windows:TemplateBinding Control.Background}">
                <Border x:Name="Overlay" Background="{windows:StaticResource ì}">
                  <TextBlock x:Name="Text" Margin="2,1,2,1" Text="{windows:TemplateBinding ribbon:RibbonSeparator.Label}"/>
                </Border>
              </Border>
              <ControlTemplate.Triggers>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="Text"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                                  Property="TextBlock.Foreground"/>
                  <windows:Setter TargetName="Overlay" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                                  Property="Border.Background"/>
                </windows:DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </windows:Setter.Value>
        </windows:Setter>
        <windows:Style.Triggers>
          <windows:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
            <windows:Setter Property="Control.Template">
              <windows:Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                  <Grid x:Name="Grid" SnapsToDevicePixels="true" Margin="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="14"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="SideBarBorder" BorderThickness="0,0,1,0" Margin="0,-1,0,-1"
                            Background="{windows:TemplateBinding Control.Background}"
                            BorderBrush="{windows:TemplateBinding Control.BorderBrush}">
                      <Border x:Name="SideBarOverlay" Background="{windows:StaticResource ì}"/>
                    </Border>
                    <Line x:Name="Line" Grid.Column="1" Grid.ColumnSpan="2" Margin="2,0,0,0" X1="0" Y1="0" X2="1" Y2="0"
                          Stroke="{windows:TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                      <windows:Setter TargetName="SideBarBorder" Property="Border.Background" Value="Transparent"/>
                      <windows:Setter TargetName="SideBarBorder"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Border.BorderBrush"/>
                      <windows:Setter TargetName="SideBarOverlay" Property="Border.Background" Value="Transparent"/>
                      <windows:Setter TargetName="Line"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Shape.Stroke"/>
                    </windows:DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </windows:Setter.Value>
            </windows:Setter>
          </windows:Trigger>
        </windows:Style.Triggers>
      </windows:Style>
    </windows:Style.Resources>
    <windows:Setter Property="Control.Background" Value="{windows:StaticResource ĉ}"/>
    <windows:Setter Property="Control.BorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="Control.Padding" Value="2,1,2,1"/>
    <windows:Setter Property="UIElement.AllowDrop" Value="true"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <windows:Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <windows:Setter Property="ribbon:RibbonComboBox.SelectionBoxWidth" Value="80"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.MouseOverBackground" Value="White"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.FocusedBackground" Value="White"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.QuickAccessToolBarControlSizeDefinition">
      <windows:Setter.Value>
        <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonComboBox}">
          <Border x:Name="MainBorder">
            <Grid Margin="1,0,1,0" SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition x:Name="OuterTextColumn" Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Image x:Name="Image" Source="{windows:TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}"
                     RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"
                     HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}" Grid.Row="0"
                     Grid.Column="1" Margin="1" Width="32" Height="32"/>
              <Grid Name="Grid" Row="1" Column="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition x:Name="TextColumn" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="TwoLineTextPanel" VerticalAlignment="Center" HorizontalAlignment="Center">
                  <ribbon:RibbonTwoLineText x:Name="TwoLineText" Text="{windows:TemplateBinding ribbon:RibbonMenuButton.Label}"
                                            TextAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="2,0,2,0"/>
                  <Rectangle x:Name="FocusVisual" Margin="1" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                             Visibility="Collapsed"/>
                </Grid>
                <Border x:Name="Border" Grid.Column="1" Grid.ColumnSpan="2"
                        Background="{windows:TemplateBinding Control.Background}"
                        BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                        BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                        Height="{windows:StaticResource ą}"/>
                <Grid Column="1" Height="{windows:StaticResource ą}" IsSharedSizeScope="true">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="ToggleButtonGroup"/>
                  </Grid.ColumnDefinitions>
                  <Grid IsHitTestVisible="false" Margin="{windows:TemplateBinding Control.Padding}"
                        Width="{windows:TemplateBinding ribbon:RibbonComboBox.SelectionBoxWidth}"
                        VerticalAlignment="{windows:TemplateBinding Control.VerticalContentAlignment}"
                        HorizontalAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                        SnapsToDevicePixels="{windows:TemplateBinding UIElement.SnapsToDevicePixels}">
                    <ContentPresenter Name="PART_ContentHost" Content="{windows:TemplateBinding ribbon:RibbonComboBox.SelectionBoxItem}"
                                      ContentTemplate="{windows:TemplateBinding ribbon:RibbonComboBox.SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{windows:TemplateBinding ribbon:RibbonComboBox.SelectionBoxItemTemplateSelector}"
                                      ContentStringFormat="{windows:TemplateBinding ribbon:RibbonComboBox.SelectionBoxItemStringFormat}"
                                      Margin="2,0,2,0"/>
                  </Grid>
                  <ribbon:RibbonToggleButton Name="PART_ToggleButton" Grid.ColumnSpan="2"
                                             BorderThickness="{windows:TemplateBinding Control.BorderThickness}" Background="Transparent"
                                             BorderBrush="Transparent" Style="{windows:StaticResource ā}"
                                             CheckedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                             CheckedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                             PressedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                             PressedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                             IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>
              </Grid>
              <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
                     Placement="Bottom" Focusable="false"
                     PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
                     PlacementTarget="{Binding ElementName=Border}"
                     IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shadow" Color="Transparent"
                                                controls:KeyTipService.IsKeyTipScope="true" RenderOptions.ClearTypeHint="Enabled"
                                                windows:FrameworkElement.MinWidth="{Binding ElementName=Border, Path=ActualWidth}">
                  <Border Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                          CornerRadius="2"
                          BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                          Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                    <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" CornerRadius="2">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"/>
                          <RowDefinition/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ItemsPresenter x:Name="ItemsPresenter" Grid.Row="1" Grid.IsSharedSizeScope="true" Margin="1"
                                        KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{windows:TemplateBinding UIElement.SnapsToDevicePixels}"/>
                        <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                                BorderThickness="0,1,0,0"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                          <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                        </Border>
                      </Grid>
                    </Border>
                  </Border>
                </classic:SystemDropShadowChrome>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <windows:DataTrigger Value="True"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.IsStar}">
              <windows:Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="*"/>
              <windows:Setter TargetName="OuterTextColumn" Property="ColumnDefinition.Width" Value="*"/>
              <windows:Setter TargetName="PART_ContentHost" Property="windows:FrameworkElement.Width" Value="Auto"/>
              <windows:Setter TargetName="PART_ContentHost" Property="windows:FrameworkElement.HorizontalAlignment"
                              Value="Stretch"/>
              <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Large"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Property="windows:FrameworkElement.MinWidth" Value="44"/>
              <windows:Setter Property="windows:FrameworkElement.Height" Value="66"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="32"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="32"/>
              <windows:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26"/>
              <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="true"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Small"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter Value="{windows:StaticResource Ć}" Property="windows:FrameworkElement.Height"/>
              <windows:Setter TargetName="Image"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}"
                              Property="Image.Source"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="16"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="16"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left"/>
              <windows:Setter TargetName="Image" Property="windows:FrameworkElement.Margin" Value="2,0,1,0"/>
              <windows:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="2,0,1,0"/>
              <windows:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="false"/>
              <windows:Setter TargetName="Image" Property="Grid.Column" Value="0"/>
              <windows:Setter TargetName="Image" Property="Grid.Row" Value="1"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="Collapsed"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
              <windows:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:DataTrigger>
            <windows:DataTrigger Value="False"
                                 Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
              <windows:Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility" Value="Collapsed"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="PART_ToggleButton"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}"
                              Property="Control.BorderBrush"/>
              <windows:Setter TargetName="PART_ToggleButton" Value="{windows:StaticResource Ā}" Property="Control.Background"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False"/>
                <windows:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="Border"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:Trigger Property="ribbon:RibbonComboBox.ShowKeyboardCues" Value="true">
              <windows:Setter TargetName="FocusVisual" Property="UIElement.Visibility" Value="Visible"/>
            </windows:Trigger>
            <windows:Trigger Property="UIElement.IsEnabled" Value="false">
              <windows:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
              <windows:Setter TargetName="Border" Value="{windows:StaticResource ć}" Property="Border.Background"/>
              <windows:Setter TargetName="Border" Value="{windows:StaticResource Ĉ}" Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainBorder" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.IsInControlGroup" Value="true">
              <windows:Setter TargetName="MainBorder"
                              Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MainBorder" Property="Border.BorderThickness" Value="0,0,1,0"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
            </windows:MultiTrigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="false"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true">
              <windows:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0"/>
              <windows:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1"/>
            </windows:Trigger>
            <windows:MultiTrigger>
              <windows:MultiTrigger.Conditions>
                <windows:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
                <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
              </windows:MultiTrigger.Conditions>
              <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Õ}"
                              Property="windows:FrameworkElement.Style"/>
            </windows:MultiTrigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
              <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="MenuBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="ResizeControl"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
              <windows:Setter Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowBrushKey}}"
                              Property="Control.Background"/>
              <windows:Setter TargetName="Border" Property="Border.Background" Value="Transparent"/>
              <windows:Setter TargetName="Border"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="FocusVisual"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.WindowFrameBrushKey}}"
                              Property="Shape.Stroke"/>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:DataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlLightLightBrushKey}}"
                              Property="Border.BorderBrush"/>
            </windows:MultiDataTrigger>
            <windows:MultiDataTrigger>
              <windows:MultiDataTrigger.Conditions>
                <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
                <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
              </windows:MultiDataTrigger.Conditions>
              <windows:Setter TargetName="MainBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                              Property="TextElement.Foreground"/>
            </windows:MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Style.Triggers>
      <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="true">
        <windows:Setter Property="ToolTipService.IsEnabled" Value="false"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonComboBox.IsEditable" Value="true">
        <windows:Setter Property="Control.Template" Value="{windows:StaticResource Ą}"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
  <windows:Style TargetType="{x:Type ribbon:RibbonContextMenu}">
    <windows:Style.Resources>
      <windows:Style TargetType="{x:Type ribbon:RibbonSeparator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
        <windows:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <windows:Setter Property="UIElement.Focusable" Value="false"/>
        <windows:Setter Property="Control.BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonContextMenu}}, Path=PlacementTarget.(ribbon:RibbonControlService.Ribbon).BorderBrush}"/>
        <windows:Setter Property="Control.Background"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonContextMenu}}, Path=PlacementTarget.(ribbon:RibbonControlService.Ribbon).Background}"/>
        <windows:Setter Property="Control.FontWeight" Value="Bold"/>
        <windows:Setter Property="Control.Template">
          <windows:Setter.Value>
            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
              <Border x:Name="MainBorder" BorderThickness="0,1,0,1"
                      BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                      Background="{windows:TemplateBinding Control.Background}">
                <Border x:Name="Overlay" Background="{windows:StaticResource ì}">
                  <TextBlock x:Name="Text" Margin="2,1,2,1" Text="{windows:TemplateBinding ribbon:RibbonSeparator.Label}"/>
                </Border>
              </Border>
              <ControlTemplate.Triggers>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="Text"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                                  Property="TextBlock.Foreground"/>
                  <windows:Setter TargetName="Overlay" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                                  Property="Border.Background"/>
                </windows:DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </windows:Setter.Value>
        </windows:Setter>
        <windows:Style.Triggers>
          <windows:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
            <windows:Setter Property="Control.Template">
              <windows:Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                  <Grid x:Name="Grid" SnapsToDevicePixels="true" Margin="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="14"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="SideBarBorder" BorderThickness="0,0,1,0" Margin="0,-1,0,-1"
                            Background="{windows:TemplateBinding Control.Background}"
                            BorderBrush="{windows:TemplateBinding Control.BorderBrush}">
                      <Border x:Name="SideBarOverlay" Background="{windows:StaticResource ì}"/>
                    </Border>
                    <Line x:Name="Line" Grid.Column="1" Grid.ColumnSpan="2" Margin="2,0,0,0" X1="0" Y1="0" X2="1" Y2="0"
                          Stroke="{windows:TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                      <windows:Setter TargetName="SideBarBorder"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Border.BorderBrush"/>
                      <windows:Setter TargetName="SideBarBorder" Property="Border.Background" Value="Transparent"/>
                      <windows:Setter TargetName="SideBarOverlay" Property="Border.Background" Value="Transparent"/>
                      <windows:Setter TargetName="Line"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Shape.Stroke"/>
                    </windows:DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </windows:Setter.Value>
            </windows:Setter>
          </windows:Trigger>
        </windows:Style.Triggers>
      </windows:Style>
    </windows:Style.Resources>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="Control.Template">
      <windows:Setter.Value>
        <ControlTemplate TargetType="{x:Type ribbon:RibbonContextMenu}">
          <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shadow" Color="Transparent" UIElement.SnapsToDevicePixels="true"
                                          RenderOptions.ClearTypeHint="Enabled">
            <Border Name="PART_ResizeBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                    CornerRadius="2"
                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PlacementTarget.(ribbon:RibbonControlService.Ribbon).BorderBrush}"
                    Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PlacementTarget.(ribbon:RibbonControlService.Ribbon).Background}">
              <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" BorderThickness="0"
                      CornerRadius="2">
                <ScrollViewer x:Name="SubMenuScrollViewer" Margin="1"
                              Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                      <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=PART_ResizeBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=PART_ResizeBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=PART_ResizeBorder, Path=Background}"/>
                      <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                  </Grid>
                </ScrollViewer>
              </Border>
            </Border>
          </classic:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <windows:Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
              <windows:Setter TargetName="OverlayRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}"
                              Property="Canvas.Top"/>
              <windows:Setter TargetName="OverlayRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}"
                              Property="Canvas.Left"/>
            </windows:Trigger>
            <windows:Trigger Property="ribbon:RibbonContextMenu.HasGallery" Value="true">
              <windows:Setter TargetName="SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                              Value="Disabled"/>
              <windows:Setter TargetName="SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                              Value="Disabled"/>
            </windows:Trigger>
            <windows:Trigger Property="ContextMenu.HasDropShadow" Value="true">
              <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
              <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                              Property="classic:SystemDropShadowChrome.Color"/>
            </windows:Trigger>
            <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
              <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
              <windows:Setter TargetName="SubMenuScrollViewer"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                              Property="Control.Foreground"/>
              <windows:Setter TargetName="PART_ResizeBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                              Property="Border.BorderBrush"/>
              <windows:Setter TargetName="PART_ResizeBorder"
                              Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                              Property="Border.Background"/>
              <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
            </windows:DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </windows:Setter.Value>
    </windows:Setter>
  </windows:Style>
  <ControlTemplate x:Key="×" TargetType="{x:Type ribbon:RibbonMenuButton}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <ribbon:RibbonToggleButton x:Name="PART_ToggleButton" Template="{windows:StaticResource Ħ}"
                                 ribbon:RibbonTwoLineText.PathData="{windows:TemplateBinding ribbon:RibbonTwoLineText.PathData}"
                                 Label="{windows:TemplateBinding ribbon:RibbonMenuButton.Label}"
                                 LargeImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}"
                                 SmallImageSource="{windows:TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}"
                                 ControlSizeDefinition="{windows:TemplateBinding ribbon:RibbonMenuButton.ControlSizeDefinition}"
                                 BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                                 BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                                 Background="{windows:TemplateBinding Control.Background}" CornerRadius="2"
                                 MouseOverBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}"
                                 MouseOverBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}"
                                 CheckedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}"
                                 CheckedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.PressedBackground}"
                                 FocusedBorderBrush="{windows:TemplateBinding ribbon:RibbonMenuButton.FocusedBorderBrush}"
                                 FocusedBackground="{windows:TemplateBinding ribbon:RibbonMenuButton.FocusedBackground}"
                                 HorizontalContentAlignment="{windows:TemplateBinding Control.HorizontalContentAlignment}"
                                 Padding="{windows:TemplateBinding Control.Padding}" ClickMode="Press" Style="{x:Null}"
                                 FocusVisualStyle="{x:Null}"
                                 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
        <windows:FrameworkElement.Resources>
          <windows:Thickness Left="1" Top="1" Right="1" Bottom="2"
                             x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}"/>
        </windows:FrameworkElement.Resources>
      </ribbon:RibbonToggleButton>
      <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
             Placement="Bottom" Focusable="false"
             PopupAnimation="{windows:DynamicResource {x:Static windows:SystemParameters.MenuPopupAnimationKey}}"
             IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}">
        <classic:SystemDropShadowChrome windows:FrameworkElement.Name="Shadow" Color="Transparent"
                                        controls:KeyTipService.IsKeyTipScope="true" RenderOptions.ClearTypeHint="Enabled">
          <Border x:Name="MenuBorder" BorderThickness="{windows:TemplateBinding Control.BorderThickness}"
                  CornerRadius="2"
                  BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                  Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
            <Border x:Name="SubMenuInnerBorder" Background="{windows:StaticResource Ñ}" BorderThickness="0"
                    CornerRadius="2">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="PART_SubMenuScrollViewer" Grid.Row="1" Margin="1"
                              Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                      <Rectangle x:Name="OpaqueRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=MenuBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=MenuBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=MenuBorder, Path=Background}"/>
                      <Rectangle x:Name="OverlayRect" RadiusX="2" RadiusY="2"
                                 Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}"
                                 Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}"
                                 Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                  </Grid>
                </ScrollViewer>
                <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{windows:StaticResource Ò}"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                  <Thumb x:Name="PART_ResizeThumb" Style="{windows:StaticResource Ó}"/>
                </Border>
              </Grid>
            </Border>
          </Border>
        </classic:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <windows:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <windows:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}"
                        Property="Canvas.Top"/>
        <windows:Setter TargetName="OpaqueRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top"/>
        <windows:Setter TargetName="OverlayRect"
                        Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}"
                        Property="Canvas.Left"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}">
        <windows:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="Auto"/>
      </windows:DataTrigger>
      <windows:Trigger Property="UIElement.IsEnabled" Value="false">
        <windows:Setter TargetName="MainGrid" Value="{windows:StaticResource Ë}" Property="TextElement.Foreground"/>
      </windows:Trigger>
      <windows:Trigger Property="ribbon:RibbonMenuButton.HasGallery" Value="true">
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Disabled"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
      </windows:MultiTrigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="false"/>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible"/>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Ô}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true">
        <windows:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0"/>
        <windows:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1"/>
      </windows:Trigger>
      <windows:MultiTrigger>
        <windows:MultiTrigger.Conditions>
          <windows:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="true"/>
          <windows:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="true"/>
        </windows:MultiTrigger.Conditions>
        <windows:Setter TargetName="PART_ResizeThumb" Value="{windows:StaticResource Õ}"
                        Property="windows:FrameworkElement.Style"/>
      </windows:MultiTrigger>
      <windows:Trigger Property="ItemsControl.HasItems" Value="false">
        <windows:Setter TargetName="PART_ToggleButton" Value="{x:Null}" Property="ribbon:RibbonTwoLineText.PathData"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <windows:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5"/>
        <windows:Setter TargetName="Shadow" Value="{windows:StaticResource Ö}"
                        Property="classic:SystemDropShadowChrome.Color"/>
      </windows:Trigger>
      <windows:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="false">
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </windows:Trigger>
      <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
        <windows:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed"/>
        <windows:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent"/>
        <windows:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
        <windows:Setter TargetName="PART_SubMenuScrollViewer"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.HighlightTextBrushKey}}"
                        Property="Control.Foreground"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="MenuBorder"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="MenuBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="Border.BorderBrush"/>
        <windows:Setter TargetName="ResizeControl"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuBrushKey}}"
                        Property="Border.Background"/>
        <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="Transparent"/>
        <windows:Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0"/>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:DataTrigger>
      <windows:MultiDataTrigger>
        <windows:MultiDataTrigger.Conditions>
          <windows:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False"/>
          <windows:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True"/>
        </windows:MultiDataTrigger.Conditions>
        <windows:Setter TargetName="MainGrid"
                        Value="{windows:DynamicResource {x:Static windows:SystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
      </windows:MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <windows:Style TargetType="{x:Type ribbon:RibbonMenuButton}">
    <windows:Style.Resources>
      <windows:Style TargetType="{x:Type ribbon:RibbonSeparator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
        <windows:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <windows:Setter Property="UIElement.Focusable" Value="false"/>
        <windows:Setter Property="Control.BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}"/>
        <windows:Setter Property="Control.Background"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.Background}"/>
        <windows:Setter Property="Control.FontWeight" Value="Bold"/>
        <windows:Setter Property="Control.Template">
          <windows:Setter.Value>
            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
              <Border x:Name="MainBorder" SnapsToDevicePixels="true" BorderThickness="0,1,0,1"
                      BorderBrush="{windows:TemplateBinding Control.BorderBrush}"
                      Background="{windows:TemplateBinding Control.Background}">
                <Border x:Name="Overlay" Background="{windows:StaticResource ì}">
                  <TextBlock x:Name="Text" Margin="2,1,2,1" Text="{windows:TemplateBinding ribbon:RibbonSeparator.Label}"/>
                </Border>
              </Border>
              <ControlTemplate.Triggers>
                <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                  <windows:Setter TargetName="Text"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.MenuTextBrushKey}}"
                                  Property="TextBlock.Foreground"/>
                  <windows:Setter TargetName="Overlay" Property="Border.Background" Value="Transparent"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlDarkBrushKey}}"
                                  Property="Border.BorderBrush"/>
                  <windows:Setter TargetName="MainBorder"
                                  Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlBrushKey}}"
                                  Property="Border.Background"/>
                </windows:DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </windows:Setter.Value>
        </windows:Setter>
        <windows:Style.Triggers>
          <windows:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
            <windows:Setter Property="Control.Template">
              <windows:Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                  <Grid x:Name="Grid" SnapsToDevicePixels="true" Margin="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="14"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="SideBarBorder" BorderThickness="0,0,1,0" Margin="0,-1,0,-1"
                            Background="{windows:TemplateBinding Control.Background}"
                            BorderBrush="{windows:TemplateBinding Control.BorderBrush}">
                      <Border x:Name="SideBarOverlay" Background="{windows:StaticResource ì}"/>
                    </Border>
                    <Line x:Name="Line" Grid.Column="1" Grid.ColumnSpan="2" Margin="2,0,0,0" X1="0" Y1="0" X2="1" Y2="0"
                          Stroke="{windows:TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <windows:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                      <windows:Setter TargetName="SideBarBorder" Property="Border.Background" Value="Transparent"/>
                      <windows:Setter TargetName="SideBarBorder"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Border.BorderBrush"/>
                      <windows:Setter TargetName="SideBarOverlay" Property="Border.Background" Value="Transparent"/>
                      <windows:Setter TargetName="Line"
                                      Value="{windows:DynamicResource {x:Static windows:SystemColors.ControlTextBrushKey}}"
                                      Property="Shape.Stroke"/>
                    </windows:DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </windows:Setter.Value>
            </windows:Setter>
          </windows:Trigger>
        </windows:Style.Triggers>
      </windows:Style>
    </windows:Style.Resources>
    <windows:Setter Property="Control.Background" Value="Transparent"/>
    <windows:Setter Property="Control.BorderBrush" Value="Transparent"/>
    <windows:Setter Property="Control.BorderThickness" Value="1"/>
    <windows:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <windows:Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <windows:Setter Property="Control.Padding" Value="2,0,2,0"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.MouseOverBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.MouseOverBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.PressedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.PressedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.FocusedBorderBrush"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.FocusedBackground"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}"/>
    <windows:Setter Property="ToolTipService.InitialShowDelay" Value="{windows:StaticResource Í}"/>
    <windows:Setter Property="ToolTipService.ShowDuration" Value="{windows:StaticResource Î}"/>
    <windows:Setter Property="ToolTipService.BetweenShowDelay" Value="{windows:StaticResource Ï}"/>
    <windows:Setter Property="ribbon:RibbonTwoLineText.PathData" Value="{windows:StaticResource Ð}"/>
    <windows:Setter Property="ribbon:RibbonMenuButton.QuickAccessToolBarControlSizeDefinition">
      <windows:Setter.Value>
        <ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="false"/>
      </windows:Setter.Value>
    </windows:Setter>
    <windows:Setter Property="Control.Template" Value="{windows:StaticResource ×}"/>
    <windows:Style.Triggers>
      <windows:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="true">
        <windows:Setter Property="ToolTipService.IsEnabled" Value="false"/>
      </windows:Trigger>
    </windows:Style.Triggers>
  </windows:Style>
</windows:ResourceDictionary>
