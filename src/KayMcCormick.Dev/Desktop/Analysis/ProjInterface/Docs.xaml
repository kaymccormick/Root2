<TypesViewModelContainer
  xmlns="http://kaymccormick.com/xaml/analysis"
  xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
  <TypesViewModelContainer.VDocelems>
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"
      Type="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax" />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.InstanceExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.InstanceExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax" />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax" />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax" />
    <assembly:Null /><assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax" />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax" />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax" />
    <assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax" />
    <assembly:Null /><assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax" />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <TypeDocumentation
      ElementId="T:Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <MethodDocumentation MemberName="ParseName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseName(System.String,System.Int32,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ParseTypeName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseTypeName(System.String,System.Int32,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ParseExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseExpression(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ParseStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseStatement(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ParseMemberDeclaration"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseMemberDeclaration(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ParseCompilationUnit"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseCompilationUnit(System.String,System.Int32,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ParseParameterList"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseParameterList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ParseBracketedParameterList"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseBracketedParameterList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ParseArgumentList"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseArgumentList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ParseBracketedArgumentList"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseBracketedArgumentList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ParseAttributeArgumentList"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseAttributeArgumentList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="GetStandaloneExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GetStandaloneExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="GetNonGenericExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GetNonGenericExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CaseSwitchLabel"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Block"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Block(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UsingDirective"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ClassOrStructConstraint"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SwitchStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlSeeElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlSeeElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlSeeAlsoElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlSeeAlsoElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="XmlThreadSafetyElement"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlThreadSafetyElement(System.Boolean,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlNameAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNameAttribute(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlCrefAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlCrefAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.CSharp.SyntaxKind)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlRemarksElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlRemarksElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlReturnsElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlReturnsElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlValueElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlValueElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlExceptionElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlExceptionElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlPermissionElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPermissionElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlExampleElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlExampleElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlParaElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlParaElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlParamElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlParamElement(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlParamRefElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlParamRefElement(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlPlaceholderElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPlaceholderElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlEmptyElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlEmptyElement(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlTextAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(System.String,System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlTextAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(System.String,Microsoft.CodeAnalysis.SyntaxToken[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlTextAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(System.String,Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTokenList)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlTextAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTokenList)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlNewLine"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNewLine(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlText"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlText(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlText"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlText(Microsoft.CodeAnalysis.SyntaxToken[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IdentifierName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IdentifierName(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ShebangDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ShebangDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ShebangDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ShebangDirectiveTrivia(System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="NullableDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NullableDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="NullableDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NullableDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="NullableDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NullableDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AccessorDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DocumentationComment"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DocumentationComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlSummaryElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlSummaryElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NameMemberCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NameMemberCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IndexerMemberCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IndexerMemberCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="OperatorMemberCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="OperatorMemberCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="OperatorMemberCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConversionOperatorMemberCref"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConversionOperatorMemberCref"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConversionOperatorMemberCref"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CrefParameter"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CrefParameter(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CrefParameter"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlElementStartTag"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlElementEndTag"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElementEndTag(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlElementEndTag"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlEmptyElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlName(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlName(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlPrefix"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPrefix(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlPrefix"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPrefix(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlPrefix"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPrefix(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlTextAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlTextAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlTextAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlCrefAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlCrefAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlNameAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlNameAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlNameAttribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.String,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlText"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlText(Microsoft.CodeAnalysis.SyntaxTokenList)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlCDataSection"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCDataSection(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlCDataSection"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCDataSection(Microsoft.CodeAnalysis.SyntaxTokenList)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="XmlProcessingInstruction"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlProcessingInstruction(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="XmlProcessingInstruction"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxTokenList)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="XmlProcessingInstruction"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlComment"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlComment(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="XmlComment"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlComment(Microsoft.CodeAnalysis.SyntaxTokenList)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IfDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IfDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Boolean,System.Boolean,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ElifDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElifDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ElifDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Boolean,System.Boolean,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ElseDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElseDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ElseDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElseDirectiveTrivia(System.Boolean,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EndIfDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndIfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EndIfDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndIfDirectiveTrivia(System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RegionDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RegionDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RegionDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RegionDirectiveTrivia(System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="EndRegionDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndRegionDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="EndRegionDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndRegionDirectiveTrivia(System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ErrorDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ErrorDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ErrorDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ErrorDirectiveTrivia(System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="WarningDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="WarningDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WarningDirectiveTrivia(System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="BadDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="BadDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DefineDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DefineDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DefineDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefineDirectiveTrivia(System.String,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UndefDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UndefDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UndefDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UndefDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UndefDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UndefDirectiveTrivia(System.String,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LineDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LineDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LineDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="PragmaWarningDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="PragmaChecksumDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="PragmaChecksumDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ReferenceDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ReferenceDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ReferenceDirectiveTrivia"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ReferenceDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LoadDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LoadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LoadDirectiveTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LoadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EnumDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumDeclaration(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EnumDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumDeclaration(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DelegateDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DelegateDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EnumMemberDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumMemberDeclaration(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EnumMemberDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumMemberDeclaration(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SimpleBaseType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="TypeParameterConstraintClause"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="TypeParameterConstraintClause"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameterConstraintClause(System.String)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ConstructorConstraint"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorConstraint(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ClassOrStructConstraint"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ClassOrStructConstraint"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.SyntaxKind)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="TypeConstraint"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="FieldDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EventFieldDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ExplicitInterfaceSpecifier"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ExplicitInterfaceSpecifier"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="MethodDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="MethodDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="OperatorDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConversionOperatorDeclaration"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorDeclaration(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConstructorDeclaration"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConstructorDeclaration"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(System.String)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConstructorInitializer"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorInitializer(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConstructorInitializer"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorInitializer(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DestructorDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DestructorDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="PropertyDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="PropertyDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ArrowExpressionClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrowExpressionClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ArrowExpressionClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EventDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EventDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IndexerDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AccessorDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Parameter"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Parameter(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IncompleteMember"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SkippedTokensTrivia"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SkippedTokensTrivia(Microsoft.CodeAnalysis.SyntaxTokenList)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="TypeCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QualifiedCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QualifiedCref"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CheckedStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CheckedStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UnsafeStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LockStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IfStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ElseClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElseClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ElseClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="CasePatternSwitchLabel"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CasePatternSwitchLabel(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="CasePatternSwitchLabel"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CasePatternSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="CasePatternSwitchLabel"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CasePatternSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CaseSwitchLabel"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CaseSwitchLabel(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CaseSwitchLabel"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DefaultSwitchLabel"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultSwitchLabel(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DefaultSwitchLabel"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultSwitchLabel(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SwitchExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SwitchExpressionArm"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchExpressionArm(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SwitchExpressionArm"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchExpressionArm(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SwitchExpressionArm"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchExpressionArm(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CatchClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CatchClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CatchDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchDeclaration(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CatchDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CatchDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CatchFilterClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchFilterClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CatchFilterClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="FinallyClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FinallyClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="FinallyClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ExternAliasDirective"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExternAliasDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ExternAliasDirective"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExternAliasDirective(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ExternAliasDirective"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExternAliasDirective(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UsingDirective"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UsingDirective"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UsingDirective"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NamespaceDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="AttributeTargetSpecifier"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeTargetSpecifier(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="AttributeTargetSpecifier"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeTargetSpecifier(Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Attribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Attribute(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Attribute"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Attribute(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AttributeArgument"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AttributeArgument"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NameEquals"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NameEquals"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NameEquals"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameEquals(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="TypeParameter"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameter(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="TypeParameter"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameter(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ClassDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassDeclaration(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ClassDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassDeclaration(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="StructDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StructDeclaration(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="StructDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StructDeclaration(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="InterfaceDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterfaceDeclaration(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="InterfaceDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterfaceDeclaration(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="WhenClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhenClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DiscardPattern"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DiscardPattern(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DeclarationPattern"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DeclarationPattern(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="VarPattern"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VarPattern(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="VarPattern"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VarPattern(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RecursivePattern"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecursivePattern(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.PositionalPatternClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.PropertyPatternClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Subpattern"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Subpattern(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Subpattern"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Subpattern(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ConstantPattern"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstantPattern(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="InterpolatedStringText"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolatedStringText(Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Interpolation"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Interpolation"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Interpolation"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="InterpolationAlignmentClause"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolationAlignmentClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="InterpolationFormatClause"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolationFormatClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="InterpolationFormatClause"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolationFormatClause(Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="GlobalStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="LocalFunctionStatement"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalFunctionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="LocalFunctionStatement"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalFunctionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="LocalDeclarationStatement"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="VariableDeclaration"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="VariableDeclarator"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclarator(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="VariableDeclarator"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclarator(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="VariableDeclarator"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclarator(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EqualsValueClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EqualsValueClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="EqualsValueClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="SingleVariableDesignation"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SingleVariableDesignation(Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DiscardDesignation"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DiscardDesignation(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ExpressionStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LabeledStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LabeledStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LabeledStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LabeledStatement(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="GotoStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GotoStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ReturnStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ThrowStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="YieldStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.YieldStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="WhileStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DoStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ForStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ForEachStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ForEachStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ForEachVariableStatement"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForEachVariableStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="UsingStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="FixedStatement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="InvocationExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ElementAccessExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ElementAccessExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Argument"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Argument(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Argument"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Argument(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NameColon"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameColon(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NameColon"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameColon(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NameColon"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameColon(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DeclarationExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DeclarationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CastExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CastExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CastExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="AnonymousMethodExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousMethodExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="SimpleLambdaExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SimpleLambdaExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="SimpleLambdaExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="SimpleLambdaExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ParenthesizedLambdaExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedLambdaExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ParenthesizedLambdaExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ObjectCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ObjectCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ObjectCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="AnonymousObjectMemberDeclarator"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="AnonymousObjectMemberDeclarator"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ImplicitArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ImplicitArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ImplicitArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="StackAllocArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StackAllocArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="StackAllocArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="StackAllocArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ImplicitStackAllocArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ImplicitStackAllocArrayCreationExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QueryExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QueryBody"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="FromClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="FromClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="FromClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="FromClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FromClause(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LetClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LetClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LetClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LetClause(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="JoinClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="JoinClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="JoinClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="JoinClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="JoinIntoClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinIntoClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="JoinIntoClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinIntoClause(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="JoinIntoClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinIntoClause(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="WhereClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhereClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="WhereClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Ordering"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Ordering(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="Ordering"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Ordering(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SelectClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SelectClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SelectClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="GroupClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GroupClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="GroupClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QueryContinuation"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryContinuation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QueryContinuation"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryContinuation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QueryContinuation"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryContinuation(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="OmittedArraySizeExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OmittedArraySizeExpression(Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="InterpolatedStringExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolatedStringExpression(Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IsPatternExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IsPatternExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IsPatternExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IsPatternExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ThrowExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThrowExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ThrowExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThrowExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="WhenClause"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhenClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="IdentifierName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IdentifierName(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QualifiedName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="QualifiedName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="GenericName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GenericName(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="GenericName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GenericName(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="GenericName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GenericName(System.String)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AliasQualifiedName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AliasQualifiedName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AliasQualifiedName"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AliasQualifiedName(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="PredefinedType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PredefinedType(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ArrayType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="PointerType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PointerType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="PointerType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PointerType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NullableType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NullableType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="NullableType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NullableType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="TupleElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TupleElement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="TupleElement"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TupleElement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="OmittedTypeArgument"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OmittedTypeArgument(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefType"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ParenthesizedExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ParenthesizedExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="PrefixUnaryExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="PrefixUnaryExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AwaitExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AwaitExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AwaitExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="PostfixUnaryExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="PostfixUnaryExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="MemberAccessExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MemberAccessExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="MemberAccessExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MemberAccessExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConditionalAccessExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ConditionalAccessExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="MemberBindingExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MemberBindingExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="MemberBindingExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation
      MemberName="ElementBindingExpression"
      ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)"
      Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RangeExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RangeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RangeExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RangeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ImplicitElementAccess"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="BinaryExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BinaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="BinaryExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BinaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AssignmentExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AssignmentExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="AssignmentExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AssignmentExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ConditionalExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ConditionalExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="ThisExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThisExpression(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="BaseExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BaseExpression(Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LiteralExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LiteralExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="LiteralExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LiteralExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="MakeRefExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MakeRefExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="MakeRefExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefTypeExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefTypeExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefTypeExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefValueExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefValueExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="RefValueExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CheckedExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CheckedExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="CheckedExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CheckedExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DefaultExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="DefaultExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="TypeOfExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeOfExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="TypeOfExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SizeOfExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SizeOfExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="SizeOfExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <MethodDocumentation MemberName="InvocationExpression"
                         ElementId="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)"
                         Type="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" />
    <PropertyDocumentation MemberName="LessThanToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.LessThanToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax" />
    <PropertyDocumentation MemberName="Arguments"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.Arguments"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax" />
    <PropertyDocumentation MemberName="GreaterThanToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.GreaterThanToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax" />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax" />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax" />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax" />
    <PropertyDocumentation MemberName="TypeArgumentList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.TypeArgumentList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax" />
    <PropertyDocumentation MemberName="Left"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Left"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax" />
    <PropertyDocumentation MemberName="DotToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.DotToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax" />
    <PropertyDocumentation MemberName="Right"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Right"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax" />
    <PropertyDocumentation MemberName="Alias"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.Alias"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax" />
    <PropertyDocumentation MemberName="ColonColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.ColonColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax" />
    <PropertyDocumentation MemberName="Name"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.Name"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax" />
    <PropertyDocumentation MemberName="ElementType"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.ElementType"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax" />
    <PropertyDocumentation MemberName="RankSpecifiers"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.RankSpecifiers"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax" />
    <PropertyDocumentation MemberName="ElementType"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.ElementType"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax" />
    <PropertyDocumentation MemberName="AsteriskToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.AsteriskToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax" />
    <PropertyDocumentation MemberName="ElementType"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.ElementType"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax" />
    <PropertyDocumentation MemberName="QuestionToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.QuestionToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax" />
    <PropertyDocumentation
      MemberName="OmittedTypeArgumentToken"
      ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax.OmittedTypeArgumentToken"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="ReadOnlyKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.ReadOnlyKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax" />
    <PropertyDocumentation MemberName="Arguments"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.Arguments"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax" />
    <PropertyDocumentation MemberName="Operand"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Operand"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax" />
    <PropertyDocumentation MemberName="AwaitKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.AwaitKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax" />
    <PropertyDocumentation MemberName="Operand"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.Operand"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax" />
    <PropertyDocumentation MemberName="Name"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.Name"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax" />
    <PropertyDocumentation MemberName="WhenNotNull"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.WhenNotNull"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax" />
    <PropertyDocumentation MemberName="Name"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.Name"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax" />
    <PropertyDocumentation MemberName="ArgumentList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax.ArgumentList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax" />
    <PropertyDocumentation MemberName="LeftOperand"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax.LeftOperand"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax" />
    <PropertyDocumentation MemberName="RightOperand"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax.RightOperand"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax" />
    <PropertyDocumentation MemberName="ArgumentList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax.ArgumentList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax" />
    <PropertyDocumentation MemberName="Left"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.Left"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax" />
    <PropertyDocumentation MemberName="Right"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.Right"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax" />
    <PropertyDocumentation MemberName="Left"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.Left"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax" />
    <PropertyDocumentation MemberName="Right"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.Right"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax" />
    <PropertyDocumentation MemberName="Condition"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.Condition"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax" />
    <PropertyDocumentation MemberName="QuestionToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.QuestionToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax" />
    <PropertyDocumentation MemberName="WhenTrue"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WhenTrue"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax" />
    <PropertyDocumentation MemberName="ColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.ColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax" />
    <PropertyDocumentation MemberName="WhenFalse"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WhenFalse"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax" />
    <PropertyDocumentation MemberName="Token"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax.Token"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax" />
    <PropertyDocumentation MemberName="Token"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax.Token"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax" />
    <PropertyDocumentation MemberName="Token"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax.Token"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" />
    <PropertyDocumentation MemberName="Comma"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Comma"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax" />
    <PropertyDocumentation MemberName="ArgumentList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.ArgumentList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax" />
    <PropertyDocumentation MemberName="ArgumentList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.ArgumentList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Designation"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax.Designation"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax" />
    <PropertyDocumentation MemberName="AsyncKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AsyncKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax" />
    <PropertyDocumentation MemberName="DelegateKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.DelegateKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax" />
    <PropertyDocumentation MemberName="ParameterList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.ParameterList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax" />
    <PropertyDocumentation MemberName="Block"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Block"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax" />
    <PropertyDocumentation MemberName="ExpressionBody"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.ExpressionBody"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax" />
    <PropertyDocumentation MemberName="AsyncKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AsyncKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="Parameter"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Parameter"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="ArrowToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.ArrowToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="Block"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Block"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="ExpressionBody"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.ExpressionBody"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="AsyncKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.AsyncKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="ParameterList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.ParameterList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="ArrowToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.ArrowToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="Block"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.Block"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="ExpressionBody"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.ExpressionBody"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="ArrowToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax.ArrowToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax" />
    <PropertyDocumentation MemberName="AsyncKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.AsyncKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax" />
    <PropertyDocumentation MemberName="Block"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.Block"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax" />
    <PropertyDocumentation MemberName="ExpressionBody"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.ExpressionBody"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax" />
    <PropertyDocumentation MemberName="Body"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.Body"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="OpenBraceToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.OpenBraceToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax" />
    <PropertyDocumentation MemberName="Expressions"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Expressions"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseBraceToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.CloseBraceToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax" />
    <PropertyDocumentation MemberName="NewKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.NewKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="ArgumentList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.ArgumentList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Initializer"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.Initializer"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="NewKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.NewKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenBraceToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.OpenBraceToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Initializers"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.Initializers"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseBraceToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.CloseBraceToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="NewKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.NewKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Initializer"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.Initializer"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="NewKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.NewKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.OpenBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Commas"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.Commas"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.CloseBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Initializer"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.Initializer"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="StackAllocKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.StackAllocKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Initializer"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.Initializer"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="StackAllocKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.StackAllocKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="OpenBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.OpenBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="CloseBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.CloseBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax" />
    <PropertyDocumentation MemberName="Initializer"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.Initializer"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation
      MemberName="OmittedArraySizeExpressionToken"
      ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax.OmittedArraySizeExpressionToken"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax" />
    <PropertyDocumentation MemberName="StringStartToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.StringStartToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax" />
    <PropertyDocumentation MemberName="Contents"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.Contents"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax" />
    <PropertyDocumentation MemberName="StringEndToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.StringEndToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Pattern"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.Pattern"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax" />
    <PropertyDocumentation MemberName="Arguments"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.Arguments"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax" />
    <PropertyDocumentation MemberName="OpenBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.OpenBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" />
    <PropertyDocumentation MemberName="Arguments"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.Arguments"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" />
    <PropertyDocumentation MemberName="CloseBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.CloseBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" />
    <PropertyDocumentation MemberName="Arguments"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax.Arguments"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax" />
    <PropertyDocumentation MemberName="NameColon"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.NameColon"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax" />
    <PropertyDocumentation MemberName="RefKindKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.RefKindKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax" />
    <PropertyDocumentation MemberName="RefOrOutKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.RefOrOutKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax" />
    <PropertyDocumentation MemberName="Name"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.Name"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax" />
    <PropertyDocumentation MemberName="ColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.ColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax" />
    <PropertyDocumentation MemberName="NameEquals"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.NameEquals"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="TextToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax.TextToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="FormatStringToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.FormatStringToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Modifiers"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.Modifiers"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="AllowsAnyExpression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.AllowsAnyExpression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax" />
    <PropertyDocumentation MemberName="ColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.ColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="GotoKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.GotoKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax" />
    <PropertyDocumentation
      MemberName="CaseOrDefaultKeyword"
      ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.CaseOrDefaultKeyword"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax" />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="Variable"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.Variable"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="IfKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.IfKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" />
    <PropertyDocumentation MemberName="Condition"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Condition"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" />
    <PropertyDocumentation MemberName="Statement"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Statement"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" />
    <PropertyDocumentation MemberName="Else"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Else"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" />
    <PropertyDocumentation MemberName="SwitchKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.SwitchKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" />
    <PropertyDocumentation MemberName="OpenBraceToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.OpenBraceToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" />
    <PropertyDocumentation MemberName="Sections"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.Sections"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" />
    <PropertyDocumentation MemberName="CloseBraceToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.CloseBraceToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="ElseKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.ElseKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Labels"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.Labels"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax" />
    <PropertyDocumentation MemberName="Statements"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.Statements"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax" />
    <PropertyDocumentation MemberName="Pattern"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.Pattern"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax" />
    <PropertyDocumentation MemberName="Value"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.Value"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax" />
    <PropertyDocumentation MemberName="ColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax.ColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="AttributeLists"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.AttributeLists"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="ExternKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.ExternKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax" />
    <PropertyDocumentation MemberName="AliasKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.AliasKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax" />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax" />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="ConstraintClauses"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.ConstraintClauses"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax" />
    <PropertyDocumentation MemberName="Members"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Members"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="EnumKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.EnumKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Members"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.Members"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax" />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" />
    <PropertyDocumentation MemberName="BaseList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.BaseList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" />
    <PropertyDocumentation MemberName="OpenBraceToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.OpenBraceToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" />
    <PropertyDocumentation MemberName="CloseBraceToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.CloseBraceToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="DelegateKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.DelegateKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" />
    <PropertyDocumentation MemberName="ReturnType"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.ReturnType"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="ParameterList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.ParameterList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" />
    <PropertyDocumentation MemberName="ConstraintClauses"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.ConstraintClauses"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="ReturnType"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.ReturnType"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="ConstraintClauses"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.ConstraintClauses"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="ReturnType"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.ReturnType"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" />
    <PropertyDocumentation MemberName="OperatorKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.OperatorKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation
      MemberName="ImplicitOrExplicitKeyword"
      ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.ImplicitOrExplicitKeyword"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax" />
    <PropertyDocumentation MemberName="OperatorKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.OperatorKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="TildeToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.TildeToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax" />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax" />
    <PropertyDocumentation MemberName="ParameterList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.ParameterList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="ParameterList"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.ParameterList"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax" />
    <PropertyDocumentation
      MemberName="ExplicitInterfaceSpecifier"
      ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.ExplicitInterfaceSpecifier"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="AttributeLists"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax.AttributeLists"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax" />
    <PropertyDocumentation MemberName="Modifiers"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax.Modifiers"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax" />
    <PropertyDocumentation MemberName="OpenBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.OpenBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax" />
    <PropertyDocumentation MemberName="Target"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.Target"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax" />
    <PropertyDocumentation MemberName="Attributes"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.Attributes"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax" />
    <PropertyDocumentation MemberName="CloseBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.CloseBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax" />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax" />
    <PropertyDocumentation MemberName="ColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.ColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax" />
    <PropertyDocumentation MemberName="Name"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.Name"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax" />
    <PropertyDocumentation MemberName="Arguments"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.Arguments"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Expression"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.Expression"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax" />
    <PropertyDocumentation MemberName="Name"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.Name"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="LessThanToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.LessThanToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax" />
    <PropertyDocumentation MemberName="Parameters"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.Parameters"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax" />
    <PropertyDocumentation MemberName="GreaterThanToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.GreaterThanToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax" />
    <PropertyDocumentation MemberName="AttributeLists"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.AttributeLists"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax" />
    <PropertyDocumentation MemberName="ColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.ColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax" />
    <PropertyDocumentation MemberName="Types"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.Types"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="Name"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Name"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax" />
    <PropertyDocumentation MemberName="ColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.ColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax" />
    <PropertyDocumentation MemberName="Constraints"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Constraints"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax" />
    <PropertyDocumentation MemberName="NewKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.NewKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax" />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax" />
    <PropertyDocumentation
      MemberName="ClassOrStructKeyword"
      ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax.ClassOrStructKeyword"
      Type="Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax" />
    <PropertyDocumentation MemberName="QuestionToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax.QuestionToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax" />
    <PropertyDocumentation MemberName="Type"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax.Type"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="ColonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.ColonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax" />
    <PropertyDocumentation MemberName="ThisOrBaseKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.ThisOrBaseKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="AttributeLists"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.AttributeLists"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" />
    <PropertyDocumentation MemberName="Modifiers"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Modifiers"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" />
    <PropertyDocumentation MemberName="Keyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Keyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" />
    <PropertyDocumentation MemberName="Body"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Body"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" />
    <PropertyDocumentation MemberName="ExpressionBody"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.ExpressionBody"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" />
    <PropertyDocumentation MemberName="SemicolonToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.SemicolonToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax" />
    <PropertyDocumentation MemberName="OpenBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.OpenBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="CloseBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.CloseBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax" />
    <PropertyDocumentation MemberName="Parameters"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax.Parameters"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax" />
    <PropertyDocumentation MemberName="AttributeLists"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.AttributeLists"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" />
    <PropertyDocumentation MemberName="Modifiers"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Modifiers"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="Identifier"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Identifier"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null />
    <PropertyDocumentation MemberName="OperatorToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.OperatorToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="OpenParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.OpenParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="CloseParenToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.CloseParenToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax" />
    <PropertyDocumentation MemberName="OpenBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.OpenBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax" />
    <assembly:Null />
    <PropertyDocumentation MemberName="CloseBracketToken"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.CloseBracketToken"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax" />
    <PropertyDocumentation MemberName="Parameters"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax.Parameters"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax" />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="RefOrOutKeyword"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.RefOrOutKeyword"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax" />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null /><assembly:Null />
    <assembly:Null /><assembly:Null />
    <PropertyDocumentation MemberName="ParentTrivia"
                           ElementId="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax.ParentTrivia"
                           Type="Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax" />
  </TypesViewModelContainer.VDocelems>
</TypesViewModelContainer>