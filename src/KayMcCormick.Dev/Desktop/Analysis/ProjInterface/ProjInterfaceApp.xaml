<kmWpf:BaseApp
  xmlns:kayWpfLib="http://kaymccormick.com/xaml/wpflib"
  DispatcherUnhandledException="ProjInterfaceApp_OnDispatcherUnhandledException"

  x:Class="ProjInterface.ProjInterfaceApp"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:anal="http://kaymccormick.com/xaml/analysis"
  xmlns:kmWpf="http://kaymccormick.com/xaml/kmwpf"
  xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
  xmlns:io="clr-namespace:System.IO;assembly=mscorlib"
  xmlns:projInterface="clr-namespace:ProjInterface"
  xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
  xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging">

  <kmWpf:BaseApp.Resources>

    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
      <GradientStop
        Color="{DynamicResource ControlLightColor}"
        Offset="0" />
      <GradientStop
        Color="{DynamicResource ControlMediumColor}"
        Offset="0.5" />
      <GradientStop
        Color="{DynamicResource ControlLightColor}"
        Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush
      x:Key="ProgressBarIndicatorAnimatedFill"
      StartPoint="0,0"
      EndPoint="1,0">
      <LinearGradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#000000FF"
                        Offset="0" />
          <GradientStop Color="#600000FF"
                        Offset="0.4" />
          <GradientStop Color="#600000FF"
                        Offset="0.6" />
          <GradientStop Color="#000000FF"
                        Offset="1" />
        </GradientStopCollection>
      </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <kmWpf:GetTypeConverter x:Key="GetTypeConverter" />
    <Style TargetType="Menu">
      <Setter Property="FontFamily" Value="Leelawadee" />
      <Setter Property="FontSize" Value="24.0" />
    </Style>
    <anal:StatusBarItemContentTemplateSelector
      x:Key="StatusBarItemContentTemplateSelector" />
    <Style TargetType="StatusBarItem">
      <Setter Property="ContentTemplateSelector"
              Value="{StaticResource StatusBarItemContentTemplateSelector}" />
    </Style>


    <Style x:Key="ToolBarButtonBaseStyle"
           TargetType="{x:Type ButtonBase}">
      <Setter Property="SnapsToDevicePixels"
              Value="true" />
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ButtonBase}">
            <Border x:Name="Border"
                    BorderThickness="1">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="Pressed" />
                  <VisualState x:Name="MouseOver">
                  </VisualState>
                  <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked" />
                  <VisualState x:Name="Unchecked" />
                  <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ContentPresenter
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           BasedOn="{StaticResource ToolBarButtonBaseStyle}"
           TargetType="{x:Type Button}" />
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           BasedOn="{StaticResource ToolBarButtonBaseStyle}"
           TargetType="{x:Type ToggleButton}" />
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource ToolBarButtonBaseStyle}"
           TargetType="{x:Type CheckBox}" />
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource ToolBarButtonBaseStyle}"
           TargetType="{x:Type RadioButton}" />

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
           TargetType="{x:Type TextBox}">
      <Setter Property="SnapsToDevicePixels"
              Value="True" />
      <Setter Property="OverridesDefaultStyle"
              Value="True" />
      <Setter Property="KeyboardNavigation.TabNavigation"
              Value="None" />
      <Setter Property="FocusVisualStyle"
              Value="{x:Null}" />
      <Setter Property="AllowDrop"
              Value="true" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Border x:Name="Border"
                    Padding="0"
                    BorderThickness="1"
                    Background="{x:Null}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="Disabled" />
                  <VisualState x:Name="ReadOnly" />
                  <VisualState x:Name="MouseOver" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ScrollViewer Margin="0"
                            x:Name="PART_ContentHost" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ToolBarThumbStyle"
           TargetType="{x:Type Thumb}">
      <Setter Property="MaxWidth" Value="0" />
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="Cursor"
              Value="SizeAll" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Canvas />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ToolBarOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate
            TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
                    CornerRadius="0,3,3,0"
                    SnapsToDevicePixels="true">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver" />
                  <VisualState x:Name="Disabled" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid>
                <Path x:Name="Arrow"
                      Fill="Green"
                      VerticalAlignment="Bottom"
                      Margin="2,3"
                      Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
                <ContentPresenter />
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBar}"
           TargetType="{x:Type ToolBar}">
      <Setter Property="SnapsToDevicePixels"
              Value="true" />
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToolBar}">
            <Border x:Name="Border" 
                    CornerRadius="6"
                    BorderThickness="3"
                    Background="Thistle">
              <Border.BorderBrush>
                <SolidColorBrush Color="HotPink" Opacity=".4"></SolidColorBrush>
              </Border.BorderBrush>

              <DockPanel>
                <ToggleButton DockPanel.Dock="Right"
                              IsEnabled="{TemplateBinding HasOverflowItems}"
                              Style="{StaticResource ToolBarOverflowButtonStyle}"
                              ClickMode="Press"
                              IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}">
                  <Popup x:Name="OverflowPopup"
                         AllowsTransparency="true"
                         Placement="Bottom"
                         StaysOpen="false"
                         Focusable="false"
                         PopupAnimation="Slide"
                         IsOpen="{Binding IsOverflowOpen, 
                RelativeSource={RelativeSource TemplatedParent}}">
                    <Border x:Name="DropDownBorder"
                            Background="Thistle"
                            BorderThickness="1">
                      <Border.BorderBrush>
                        <SolidColorBrush
                          Color="{DynamicResource BorderMediumColor}" />
                      </Border.BorderBrush>

                      <ToolBarOverflowPanel
                        x:Name="PART_ToolBarOverflowPanel"
                        Margin="2"
                        WrapWidth="200"
                        Focusable="true"
                        FocusVisualStyle="{x:Null}"
                        KeyboardNavigation.TabNavigation="Cycle"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                  </Popup>
                </ToggleButton>

                <Thumb x:Name="ToolBarThumb"
                       Style="{StaticResource ToolBarThumbStyle}"
                       Width="0" />
                <ToolBarPanel x:Name="PART_ToolBarPanel"
                              IsItemsHost="true" Margin="0" />
              </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsOverflowOpen"
                       Value="true">
                <Setter TargetName="ToolBarThumb"
                        Property="IsEnabled"
                        Value="false" />
              </Trigger>
              <Trigger Property="ToolBarTray.IsLocked"
                       Value="true">
                <Setter TargetName="ToolBarThumb"
                        Property="Visibility"
                        Value="Collapsed" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBarTray}"
           TargetType="{x:Type ToolBarTray}">
      <Setter Property="Background" Value="Plum" />
    </Style>
    <BitmapImage UriSource="Assets/shell32_329.ico"
                 x:Key="PowerOffImage" />
    <BitmapImage UriSource="Assets/LaunchSamplingTargets/2x/Artboard 1xhdpi.png" x:Key="FilesIcon_"/>
    <BitmapImage UriSource="Assets/LaunchSamplingTargets/3x/Artboard 1xxhdpi.png" x:Key="FilesIcon"/>
    <collections:Hashtable x:Key="IconsResources">
      <BitmapImage UriSource="Assets/FolderClosed_16x.png" x:Key="{x:Type io:Directory}"/>
      <BitmapImage UriSource="Assets/CSSourceFile_16x.png" x:Key=".cs"/>
      <BitmapImage UriSource="Assets/Application_16x.png" x:Key=".exe"/>
      <BitmapImage UriSource="Assets/BatchFile_16x.png" x:Key=".bat"/>
      <BitmapImage UriSource="Assets/CFile_16x.png" x:Key=".c"/>
      <BitmapImage UriSource="Assets/CPPHeaderFile_16x.png" x:Key=".h"/>
      <BitmapImage UriSource="Assets/HTMLFile_16x.png" x:Key=".html"/>
      <BitmapImage UriSource="Assets/PowerShellFile_16x.png" x:Key=".ps1"/>
      <BitmapImage UriSource="Assets/Image_16x.png" x:Key=".png"/>
      <BitmapImage UriSource="Assets/Image_16x.png" x:Key=".jpg"/>
      <BitmapImage UriSource="Assets/MarkupWPF_16x.png" x:Key=".xaml"/>
      <BitmapImage UriSource="Assets/MarkupXML_16x.png" x:Key=".xml"/>
      <BitmapImage UriSource="Assets/Log_16x.png" x:Key=".log"/>
      <BitmapImage UriSource="Assets/Document.ico" x:Key="{x:Type io:File}"/>
      <BitmapImage UriSource="Assets/Blend_6826.ico"
                   x:Key=".sln" />
    </collections:Hashtable>
    <ContextMenu x:Key="itemContextMenu">
      <MenuItem Header="Open" IsEnabled="{Binding CanOpen}"/>
      <MenuItem Header="Delete"
                IsEnabled="{Binding CanDelete}" />
      <MenuItem Header="Rename"
                IsEnabled="{Binding CanRename}" />
    </ContextMenu>
    <ContextMenu x:Key="listContextMenu">
      <MenuItem Header="New Folder"
                IsEnabled="{Binding CanCreateFolder}" />
      <MenuItem Header="New Link"
                IsEnabled="{Binding CanCreateLink}" />
    </ContextMenu>
    
    <projInterface:DictionaryConverter
      x:Key="DictionaryConverter" />
    <DataTemplate x:Key="Template1">
      <TextBlock
        Text="{Binding Metadata,Mode=OneWay,Converter={StaticResource DictionaryConverter},ConverterParameter=Title}" />
    </DataTemplate>
    <Style x:Key="ScrollBarLineButton"
           TargetType="{x:Type RepeatButton}">
      <Setter Property="SnapsToDevicePixels"
              Value="True" />
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="Focusable"
              Value="false" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate
            TargetType="{x:Type RepeatButton}">
            <Border x:Name="Border"
                    Margin="1"
                    CornerRadius="2"
                    BorderThickness="1">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver" />
                  <VisualState x:Name="Pressed" />
                  <VisualState x:Name="Disabled" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Path x:Name="Arrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{Binding Content, 
            RelativeSource={RelativeSource TemplatedParent}}">
                <Path.Fill>
                  <SolidColorBrush
                    Color="{DynamicResource GlyphColor}" />
                </Path.Fill>
              </Path>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
      <Setter Property="SnapsToDevicePixels"
              Value="True" />
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="IsTabStop"
              Value="false" />
      <Setter Property="Focusable"
              Value="false" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate
            TargetType="{x:Type RepeatButton}">
            <Border Background="Transparent" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
      <Setter Property="SnapsToDevicePixels"
              Value="True" />
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="IsTabStop"
              Value="false" />
      <Setter Property="Focusable"
              Value="false" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border CornerRadius="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0.5" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
      <Grid>

        <Grid.RowDefinitions>
          <RowDefinition MaxHeight="12" />
          <RowDefinition Height="0.00001*" />
          <RowDefinition MaxHeight="12" />
        </Grid.RowDefinitions>
        <Border Grid.RowSpan="3"
                CornerRadius="2"
                Background="#F0F0F0" />
        <RepeatButton Grid.Row="0"
                      Style="{StaticResource ScrollBarLineButton}"
                      Height="12"
                      Command="ScrollBar.LineUpCommand"
                      Content="M 0 4 L 8 4 L 4 0 Z" />
        <Track x:Name="PART_Track"
               Grid.Row="1"
               IsDirectionReversed="true">
          <Track.DecreaseRepeatButton>
            <RepeatButton
              Style="{StaticResource ScrollBarPageButton}"
              Command="ScrollBar.PageUpCommand" />
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb Style="{StaticResource ScrollBarThumb}"
                   Margin="1,0,1,0" />
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton
              Style="{StaticResource ScrollBarPageButton}"
              Command="ScrollBar.PageDownCommand" />
          </Track.IncreaseRepeatButton>
        </Track>
        <RepeatButton Grid.Row="2"
                      Style="{StaticResource ScrollBarLineButton}"
                      Height="12"
                      Command="ScrollBar.LineDownCommand"
                      Content="M 0 0 L 4 4 L 8 0 Z" />
      </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">

      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MaxWidth="12" />
          <ColumnDefinition Width="0.00001*" />
          <ColumnDefinition MaxWidth="12" />
        </Grid.ColumnDefinitions>
        <Border Grid.ColumnSpan="3"
                CornerRadius="1"
                Background="#F0F0F0" />
        <RepeatButton Grid.Column="0"
                      Style="{StaticResource ScrollBarLineButton}"
                      Width="12"
                      Command="ScrollBar.LineLeftCommand"
                      Content="M 4 0 L 4 8 L 0 4 Z" />
        <Track x:Name="PART_Track"
               Grid.Column="1"
               IsDirectionReversed="False">
          <Track.DecreaseRepeatButton>
            <RepeatButton
              Style="{StaticResource ScrollBarPageButton}"
              Command="ScrollBar.PageLeftCommand" />
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb Style="{StaticResource ScrollBarThumb}"
                   Margin="0,0.5,0,0.5" />
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton
              Style="{StaticResource ScrollBarPageButton}"
              Command="ScrollBar.PageRightCommand" />
          </Track.IncreaseRepeatButton>
        </Track>
        <RepeatButton Grid.Column="2"
                      Style="{StaticResource ScrollBarLineButton}"
                      Width="12"
                      Command="ScrollBar.LineRightCommand"
                      Content="M 0 0 L 4 4 L 0 8 Z" />
      </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
      <Setter Property="SnapsToDevicePixels"
              Value="True" />
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Style.Triggers>
        <Trigger Property="Orientation"
                 Value="Horizontal">
          <Setter Property="Width"
                  Value="Auto" />
          <Setter Property="Height"
                  Value="12" />
          <Setter Property="Template"
                  Value="{StaticResource HorizontalScrollBar}" />
        </Trigger>
        <Trigger Property="Orientation"
                 Value="Vertical">
          <Setter Property="Width"
                  Value="12" />
          <Setter Property="Height"
                  Value="Auto" />
          <Setter Property="Template"
                  Value="{StaticResource VerticalScrollBar}" />
        </Trigger>
      </Style.Triggers>
    </Style>
  </kmWpf:BaseApp.Resources>
</kmWpf:BaseApp>