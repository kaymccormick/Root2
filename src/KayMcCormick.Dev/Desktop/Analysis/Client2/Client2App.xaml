<wpf:BaseApp
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:kmWpf="http://kaymccormick.com/xaml/kmwpf"
  xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
  xmlns:wpf="clr-namespace:KayMcCormick.Lib.Wpf;assembly=WpfLibCore"
  x:Class="Client2.Client2App"
  x:ClassModifier="internal">

  <wpf:BaseApp.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
          Source="pack://application:,,,/WpfLibCore;component/SharedResources.xaml" />
        <ResourceDictionary Source="Dictionary1.xaml"/>
      </ResourceDictionary.MergedDictionaries>

      <ControlTemplate x:Key="RibbonApplicationMenuItemControlTemplate1" TargetType="{x:Type RibbonApplicationMenuItem}">
        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
          <Grid Margin="1">
            <Grid.ColumnDefinitions>
              <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
              <ColumnDefinition MinWidth="44" Width="*"/>
              <ColumnDefinition Width="22"/>
            </Grid.ColumnDefinitions>
            <Image x:Name="Image" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" Height="32" Margin="6,4" Source="{TemplateBinding ImageSource}" VerticalAlignment="Center" Width="32"/>
            <Border x:Name="CheckMarkBorder" BorderBrush="{TemplateBinding CheckedBorderBrush}" BorderThickness="1" Background="{TemplateBinding CheckedBackground}" CornerRadius="2" HorizontalAlignment="Center" Height="30" Margin="1" Visibility="Hidden" VerticalAlignment="Center" Width="30">
              <Path x:Name="CheckMark" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center">
                <Path.RenderTransform>
                  <ScaleTransform ScaleY="1.5" ScaleX="1.5"/>
                </Path.RenderTransform>
              </Path>
            </Border>
            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
            <Path x:Name="Arrow" Grid.Column="2" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center">
              <Path.Visibility>
                <TemplateBinding Property="HasItems">
                  <TemplateBinding.Converter>
                    <BooleanToVisibilityConverter/>
                  </TemplateBinding.Converter>
                </TemplateBinding>
              </Path.Visibility>
            </Path>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Relative" SnapsToDevicePixels="True">
              <Themes:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" RenderOptions.ClearTypeHint="Enabled" KeyTipService.IsKeyTipScope="True">
                <Grid>
                  <Border x:Name="PopupBorder" BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="2"/>
                  <Border x:Name="PopupOverlayBorder" BorderBrush="#80FFFFFF" BorderThickness="{TemplateBinding BorderThickness}" Background="#B8FFFFFF" CornerRadius="2">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <ScrollViewer x:Name="PART_SubMenuScrollViewer" CanContentScroll="True" HorizontalScrollBarVisibility="Disabled" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                          <Canvas x:Name="BackgroundCanvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=PopupBorder}" Height="{Binding ActualHeight, ElementName=PopupBorder}" RadiusY="2" RadiusX="2" Width="{Binding ActualWidth, ElementName=PopupBorder}"/>
                            <Rectangle x:Name="OverlayRect" Fill="{Binding Background, ElementName=PopupOverlayBorder}" Height="{Binding ActualHeight, ElementName=PopupBorder}" RadiusY="2" RadiusX="2" Width="{Binding ActualWidth, ElementName=PopupBorder}"/>
                          </Canvas>
                          <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="2" KeyboardNavigation.TabNavigation="Cycle"/>
                        </Grid>
                      </ScrollViewer>
                      <Border x:Name="ResizeControl" BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,1,0,0" Background="#FFE5EFF9" Grid.Row="1" Visibility="Collapsed">
                        <Thumb x:Name="PART_ResizeThumb">
                          <Thumb.Style>
                            <Style TargetType="{x:Type Thumb}">
                              <Setter Property="Width" Value="11"/>
                              <Setter Property="Height" Value="11"/>
                              <Setter Property="VerticalAlignment" Value="Bottom"/>
                              <Setter Property="HorizontalAlignment" Value="Right"/>
                              <Setter Property="Cursor" Value="SizeNWSE"/>
                              <Setter Property="Template">
                                <Setter.Value>
                                  <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="Transparent">
                                      <Path Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Margin="0,0,2,2">
                                        <Path.Fill>
                                          <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                              <DrawingGroup>
                                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z"/>
                                              </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                          </DrawingBrush>
                                        </Path.Fill>
                                      </Path>
                                    </Border>
                                  </ControlTemplate>
                                </Setter.Value>
                              </Setter>
                              <Style.Triggers>
                                <Trigger Property="FlowDirection" Value="RightToLeft">
                                  <Setter Property="Cursor" Value="SizeNESW"/>
                                </Trigger>
                              </Style.Triggers>
                            </Style>
                          </Thumb.Style>
                        </Thumb>
                      </Border>
                    </Grid>
                  </Border>
                </Grid>
              </Themes:SystemDropShadowChrome>
            </Popup>
          </Grid>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="CanContentScroll" SourceName="PART_SubMenuScrollViewer" Value="False">
            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=PART_SubMenuScrollViewer}"/>
            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=PART_SubMenuScrollViewer}"/>
            <Setter Property="Canvas.Top" TargetName="OverlayRect" Value="{Binding VerticalOffset, ElementName=PART_SubMenuScrollViewer}"/>
            <Setter Property="Canvas.Left" TargetName="OverlayRect" Value="{Binding HorizontalOffset, ElementName=PART_SubMenuScrollViewer}"/>
          </Trigger>
          <Trigger Property="HasGallery" Value="True">
            <Setter Property="HorizontalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer" Value="Disabled"/>
            <Setter Property="VerticalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer" Value="Disabled"/>
          </Trigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="CanUserResizeHorizontally" Value="True"/>
              <Condition Property="CanUserResizeVertically" Value="True"/>
            </MultiTrigger.Conditions>
            <Setter Property="Visibility" TargetName="ResizeControl" Value="Visible"/>
          </MultiTrigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="CanUserResizeHorizontally" Value="False"/>
              <Condition Property="CanUserResizeVertically" Value="True"/>
            </MultiTrigger.Conditions>
            <Setter Property="Visibility" TargetName="ResizeControl" Value="Visible"/>
            <Setter Property="Style" TargetName="PART_ResizeThumb">
              <Setter.Value>
                <Style TargetType="{x:Type Thumb}">
                  <Setter Property="Height" Value="11"/>
                  <Setter Property="Cursor" Value="SizeNS"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent">
                          <Path HorizontalAlignment="Center" Margin="0,0,2,2" VerticalAlignment="Bottom">
                            <Path.Data>
                              <RectangleGeometry Rect="0,0,11,3"/>
                            </Path.Data>
                            <Path.Fill>
                              <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                <DrawingBrush.Drawing>
                                  <DrawingGroup>
                                    <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z"/>
                                  </DrawingGroup>
                                </DrawingBrush.Drawing>
                              </DrawingBrush>
                            </Path.Fill>
                          </Path>
                        </Border>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Setter.Value>
            </Setter>
          </MultiTrigger>
          <Trigger Property="ImageSource" Value="{x:Null}">
            <Setter Property="Visibility" TargetName="Image" Value="Collapsed"/>
          </Trigger>
          <Trigger Property="IsCheckable" Value="True">
            <Setter Property="Visibility" TargetName="Arrow" Value="Hidden"/>
          </Trigger>
          <Trigger Property="IsChecked" Value="True">
            <Setter Property="Visibility" TargetName="CheckMark" Value="Visible"/>
            <Setter Property="Visibility" TargetName="CheckMarkBorder" Value="Visible"/>
            <Setter Property="Visibility" TargetName="Image" Value="Hidden"/>
          </Trigger>
          <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
            <Setter Property="Margin" TargetName="Shadow" Value="0,0,5,5"/>
            <Setter Property="Color" TargetName="Shadow" Value="#71000000"/>
          </Trigger>
          <Trigger Property="IsOpen" SourceName="PART_Popup" Value="False">
            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
          </Trigger>
          <Trigger Property="IsHighlighted" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Trigger>
          <Trigger Property="IsPressed" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Opacity" TargetName="Image" Value="0.5"/>
            <Setter Property="Opacity" TargetName="CheckMarkBorder" Value="0.5"/>
            <Setter Property="Opacity" TargetName="Arrow" Value="0.5"/>
            <Setter Property="TextElement.Foreground" TargetName="Border" Value="#FF9E9E9E"/>
          </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </ResourceDictionary>
    </wpf:BaseApp.Resources>
  </wpf:BaseApp>

          