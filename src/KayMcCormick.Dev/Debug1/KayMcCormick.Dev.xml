<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AnalysisControls</name>
    </assembly>
    <members>
        <member name="T:AnalysisControls.AllCommands">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AllCommands.#ctor(System.Collections.Generic.IEnumerable{Autofac.Features.Metadata.Meta{System.Lazy{KayMcCormick.Dev.IBaseLibCommand}}},System.Collections.Generic.IEnumerable{KayMcCormick.Lib.Wpf.Command.IDisplayableAppCommand})">
            <summary>
            
            </summary>
            <param name="commands"></param>
            <param name="displayCommands"></param>
        </member>
        <member name="P:AnalysisControls.AllCommands.DocPane">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AllCommands.GetComponent">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.AnalysisCustomTypeDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AnalysisCustomTypeDescriptor.GetProperties(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.AnalysisCustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.AnalysisCustomTypeDescriptor.Type">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AnalysisCustomTypeDescriptor.#ctor(AnalysisControls.UiElementTypeConverter,System.Type,System.Collections.Generic.IEnumerable{AnalysisControls.IPropertiesAdapter},Autofac.IComponentContext,NLog.ILogger)">
            <summary>
            
            </summary>
            <param name="funcConverter"></param>
            <param name="uiElementTypeConverter"></param>
            <param name="type"></param>
            <param name="propsAdapters"></param>
            <param name="context"></param>
        </member>
        <member name="M:AnalysisControls.AnalysisCustomTypeDescriptor.GetConverter">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.IPropertiesAdapter">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AnalysisControls.IPropertiesAdapter.GetProperties(System.Type)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.IPropertiesAdapter.HandleType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.IPropertiesAdapter.UpdateProperty(AnalysisControls.IUpdatableProperty)">
            <summary>
            
            </summary>
            <param name="propertyDescriptor"></param>
        </member>
        <member name="T:AnalysisControls.AnalysisCommands">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.AnalysisCommands.AnalyzeControlFlow">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.AnalysisCommands.GetDeclaredSymbol">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.AnalysisControlsModule">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.AnalysisControlsModule.Load(Autofac.ContainerBuilder)">
            <summary>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="P:AnalysisControls.AnalysisControlsModule.RibbonFunc2">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AnalysisControlsModule.RegisterControlViewCommandAdapters">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AnalysisControlsModule.ControlViewCommandAdapter(Autofac.IComponentContext,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter},Autofac.Features.Metadata.Meta{System.Func{AvalonDock.Layout.LayoutDocumentPane,KayMcCormick.Lib.Wpf.IControlView}})">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="p"></param>
            <param name="metaFunc"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.AnalysisControlsModule.CommandFuncAsync(KayMcCormick.Lib.Wpf.Command.LambdaAppCommand)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.AnalysisControlsModule.ReplayListView``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Reactive.Subjects.ReplaySubject{``0},System.Windows.ResourceDictionary)">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <param name="observable"></param>
            <param name="resources"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.AnalysisControlsModule.ReplayItemsControl``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Reactive.Subjects.ReplaySubject{``0},System.Windows.ResourceDictionary)">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <param name="observable"></param>
            <param name="resources"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.AnchorableModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AnchorableModel.Content">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AnchorableModel.Title">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.AppControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AppControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AppControl.ControlId">
            <summary>
            
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:AnalysisControls.AppControl.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AppControl.OnInitialized(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.ApplyTypesAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ApplyTypesAttribute.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:AnalysisControls.ApplyTypesAttribute.ApplyTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.AppTextSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AppTextSource.Init">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AppTextSource.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AppTextSource.BaseProps">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AppTextSource.BasicProps">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.AppTextSource.PropsFor(Microsoft.CodeAnalysis.SymbolDisplayPart,Microsoft.CodeAnalysis.ISymbol)">
            <summary>
            
            </summary>
            <param name="symbolDisplayPart"></param>
            <param name="symbol"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.AppTextSource.TextInput(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="InsertionPoint"></param>
            <param name="text"></param>
        </member>
        <member name="T:AnalysisControls.AppTypeInfoConvereter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AppTypeInfoConvereter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.AppTypeInfoConvereter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.AssembliesControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.AssembliesControl.AssemblySourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AssembliesControl.AssemblySource">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.AssembliesControl.SelectedAssemblyProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AssembliesControl.SelectedAssembly">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.AssemblyResourceTree">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.AssemblyResourceTree.AssemblyProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.AssemblyResourceTree.RootNodesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AssemblyResourceTree.RootNodes">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AssemblyResourceTree.RootItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.AssemblyResourceTree.Assembly">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.AssemblyResourceTree.SelectedItemChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.AssemblyResourceTree.SelectedItemChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AssemblyResourceTree.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.AssemblyResourceTree.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.BasicTextRunProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.BasicTextRunProperties.#ctor(System.Windows.Media.TextFormatting.TextRunProperties)">
            <summary>
            
            </summary>
            <param name="baseProps"></param>
        </member>
        <member name="P:AnalysisControls.BasicTextRunProperties.Typeface">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.BasicTextRunProperties.FontRenderingEmSize">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.BasicTextRunProperties.FontHintingEmSize">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.BasicTextRunProperties.TextDecorations">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.BasicTextRunProperties.ForegroundBrush">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.BasicTextRunProperties.BackgroundBrush">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.CharacterCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CharacterCell.#ctor(System.Windows.Rect,System.Windows.Point,System.Char)">
            <summary>
            
            </summary>
            <param name="bounds"></param>
            <param name="point"></param>
            <param name="c"></param>
        </member>
        <member name="P:AnalysisControls.CharacterCell.Bounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CharacterCell.Point">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CharacterCell.Char">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CharacterCell.Column">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CharacterCell.Row">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CharacterCell.ToString">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.CodeAnalysisProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeAnalysisProperties.CompilationProperty">
            <summary>
            Provides access to the <see cref="T:Microsoft.CodeAnalysis.Compilation"/> instance.
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeAnalysisProperties.CompilationChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeAnalysisProperties.SyntaxTreeChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeAnalysisProperties.SyntaxNodeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeAnalysisProperties.GetSyntaxNode(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.CodeAnalysisProperties.SetSyntaxNode(System.Windows.DependencyObject,Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <param name="node"></param>
        </member>
        <member name="M:AnalysisControls.CodeAnalysisProperties.GetCompilation(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.CodeAnalysisProperties.SetCompilation(System.Windows.DependencyObject,Microsoft.CodeAnalysis.Compilation)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <param name="c"></param>
        </member>
        <member name="M:AnalysisControls.CodeAnalysisProperties.GetSyntaxTree(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.CodeAnalysisProperties.SetSyntaxTree(System.Windows.DependencyObject,Microsoft.CodeAnalysis.SyntaxTree)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <param name="syntaxTree"></param>
        </member>
        <member name="F:AnalysisControls.CodeAnalysisProperties.SyntaxTreeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeAnalysisProperties.SemanticModelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.CodeControl1">
            <summary>
            Interaction logic for CodeControl1.xaml
            </summary>
            <summary>
            CodeControl1
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeControl1.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.CodeControl2">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeControl2.UpdateFormattedText">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeControl2.RegionInfoList">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeControl2._rectangle">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeControl2.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.CodeDiagnostics" -->
        <member name="M:AnalysisControls.CodeDiagnostics.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.CodeProps">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeProps.SourceTextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeProps.SetSourceText(System.Windows.DependencyObject,Microsoft.CodeAnalysis.Text.SourceText)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="sourceText"></param>
        </member>
        <member name="M:AnalysisControls.CodeProps.GetSourceText(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:AnalysisControls.CodeProps.SyntaxTreesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeProps.GetSyntaxTrees(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.CodeProps.SetSyntaxTrees(System.Windows.DependencyObject,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="syntaxTrees"></param>
        </member>
        <member name="T:AnalysisControls.CodeRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.OnSyntaxTreeUpdated(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.OnSyntaxTreeUpdated(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.FontFamilyProperty">
            <summary>
            
            </summary>null, 
        </member>
        <member name="F:AnalysisControls.CodeRenderer.FontStyleProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.FontWeightProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.FontStretchProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.FontSizeProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.ForegroundProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.BackgroundProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Background" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Background" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.TextDecorationsProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.TextEffectsProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> dependency property.</summary>
            <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.LineHeightProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.LineStackingStrategyProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.PaddingProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Padding" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Padding" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.TextAlignmentProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.TextTrimmingProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> dependency property. </summary>
            <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRenderer.TextWrappingProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> dependency property. </summary>
            <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> dependency property.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetFontFamily(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="F:System.Windows.Controls.TextBlock.FontFamilyProperty" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.FontStyle">
            <summary>Gets or sets the top-level font style for the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A member of the <see cref="T:System.Windows.FontStyles" /> class specifying the desired font style. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> value.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetFontStyle(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.FontWeight">
            <summary>Gets or sets the top-level font weight for the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A member of the <see cref="T:System.Windows.FontWeights" /> class specifying the desired font weight. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> value.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetFontWeight(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.FontStretch">
            <summary>Gets or sets the top-level font-stretching characteristics for the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A member of the <see cref="T:System.Windows.FontStretch" /> class specifying the desired font-stretching characteristics to use. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetFontStretch(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.FontSize">
            <summary>Gets or sets the top-level font size for the <see cref="T:System.Windows.Controls.TextBlock" />.   </summary>
            <returns>The desired font size to use in device independent pixels). The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> value.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetFontSize(System.Windows.DependencyObject,System.Double)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetFontSize(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.Foreground">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the text contents of the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>The brush used to apply to the text contents. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetForeground(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.Background">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to fill the background of content area.  </summary>
            <returns>The brush used to fill the background of the content area, or <see langword="null" /> to not use a background brush. The default is <see langword="null" />.</returns>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.TextDecorations">
            <summary>Gets or sets a <see cref="T:System.Windows.TextDecorationCollection" /> that contains the effects to apply to the text of a <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to this element. The default is <see langword="null" /> (no text decorations applied).</returns>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.TextEffects">
            <summary>Gets or sets the effects to apply to the text content in this element.  </summary>
            <returns>A <see cref="T:System.Windows.Media.TextEffectCollection" /> containing one or more <see cref="T:System.Windows.Media.TextEffect" /> objects that define effects to apply to the text of the <see cref="T:System.Windows.Controls.TextBlock" />. The default is <see langword="null" /> (no effects applied).</returns>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.LineHeight">
            <summary>Gets or sets the height of each line of content.  </summary>
            <returns>The height of line, in device independent pixels, in the range of 0.0034 to 160000. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") indicates that the line height is determined automatically from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
            <exception cref="T:System.ArgumentException">
            <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetLineHeight(System.Windows.DependencyObject,System.Double)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:System.Windows.Controls.TextBlock.LineHeight" />is set to a non-positive value.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetLineHeight(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.LineStackingStrategy">
            <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Controls.TextBlock" />. The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetLineStackingStrategy(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.Padding">
            <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of padding to apply, in device independent pixels. The default is <see cref="F:System.Double.NaN" />.</returns>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.TextAlignment">
            <summary>Gets or sets a value that indicates the horizontal alignment of text content.  </summary>
            <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.GetTextAlignment(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.TextTrimming">
            <summary>Gets or sets the text trimming behavior to employ when content overflows the content area.  </summary>
            <returns>One of the <see cref="T:System.Windows.TextTrimming" /> values that specifies the text trimming behavior to employ. The default is <see cref="F:System.Windows.TextTrimming.None" />.</returns>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.TextWrapping">
            <summary>Gets or sets how the <see cref="T:System.Windows.Controls.TextBlock" /> should wrap text.  </summary>
            <returns>One of the <see cref="T:System.Windows.TextWrapping" /> values. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</returns>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.CurrentRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.TextSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.MaxX">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.MaxY">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.ErrorsList">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.Errors">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.PixelsPerDip">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.OutputWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.LineInfos">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.RegionInfoList">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.Typeface">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.UpdateTextSource">
            <summary>
            
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.UpdateFormattedText(System.Windows.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="drawingContext"></param>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.OnNodeUpdated">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRenderer.SourceUpdateInProgress">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.SetFontRenderingEmSize(System.Double)">
            <summary>
            
            </summary>
            <param name="emSize"></param>
        </member>
        <member name="M:AnalysisControls.CodeRenderer.DrawLine(AnalysisControls.LineContext)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.CodeRendererVisual">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.OnSyntaxTreeUpdated(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.OnSyntaxTreeUpdated(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.FontFamilyProperty">
            <summary>
            
            </summary>null, 
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.FontStyleProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.FontWeightProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.FontStretchProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.FontSizeProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.ForegroundProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.BackgroundProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Background" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Background" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.TextDecorationsProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.TextEffectsProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> dependency property.</summary>
            <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.LineHeightProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.LineStackingStrategyProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.PaddingProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Padding" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Padding" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.TextAlignmentProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.TextTrimmingProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> dependency property. </summary>
            <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.CodeRendererVisual.TextWrappingProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> dependency property. </summary>
            <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> dependency property.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetFontFamily(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="F:System.Windows.Controls.TextBlock.FontFamilyProperty" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.FontStyle">
            <summary>Gets or sets the top-level font style for the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A member of the <see cref="T:System.Windows.FontStyles" /> class specifying the desired font style. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> value.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetFontStyle(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.FontWeight">
            <summary>Gets or sets the top-level font weight for the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A member of the <see cref="T:System.Windows.FontWeights" /> class specifying the desired font weight. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> value.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetFontWeight(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.FontStretch">
            <summary>Gets or sets the top-level font-stretching characteristics for the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A member of the <see cref="T:System.Windows.FontStretch" /> class specifying the desired font-stretching characteristics to use. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetFontStretch(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.FontSize">
            <summary>Gets or sets the top-level font size for the <see cref="T:System.Windows.Controls.TextBlock" />.   </summary>
            <returns>The desired font size to use in device independent pixels). The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> value.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetFontSize(System.Windows.DependencyObject,System.Double)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetFontSize(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.Foreground">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the text contents of the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>The brush used to apply to the text contents. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetForeground(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.Background">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to fill the background of content area.  </summary>
            <returns>The brush used to fill the background of the content area, or <see langword="null" /> to not use a background brush. The default is <see langword="null" />.</returns>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.TextDecorations">
            <summary>Gets or sets a <see cref="T:System.Windows.TextDecorationCollection" /> that contains the effects to apply to the text of a <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to this element. The default is <see langword="null" /> (no text decorations applied).</returns>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.TextEffects">
            <summary>Gets or sets the effects to apply to the text content in this element.  </summary>
            <returns>A <see cref="T:System.Windows.Media.TextEffectCollection" /> containing one or more <see cref="T:System.Windows.Media.TextEffect" /> objects that define effects to apply to the text of the <see cref="T:System.Windows.Controls.TextBlock" />. The default is <see langword="null" /> (no effects applied).</returns>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.LineHeight">
            <summary>Gets or sets the height of each line of content.  </summary>
            <returns>The height of line, in device independent pixels, in the range of 0.0034 to 160000. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") indicates that the line height is determined automatically from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
            <exception cref="T:System.ArgumentException">
            <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetLineHeight(System.Windows.DependencyObject,System.Double)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:System.Windows.Controls.TextBlock.LineHeight" />is set to a non-positive value.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetLineHeight(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.LineStackingStrategy">
            <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Controls.TextBlock" />. The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetLineStackingStrategy(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.Padding">
            <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a <see cref="T:System.Windows.Controls.TextBlock" />.  </summary>
            <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of padding to apply, in device independent pixels. The default is <see cref="F:System.Double.NaN" />.</returns>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.TextAlignment">
            <summary>Gets or sets a value that indicates the horizontal alignment of text content.  </summary>
            <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property on a specified dependency object.</summary>
            <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> property.</param>
            <param name="value">The new value to set the property to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.GetTextAlignment(System.Windows.DependencyObject)">
            <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property for a specified dependency object.</summary>
            <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property.</param>
            <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property on the specified dependency object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.TextTrimming">
            <summary>Gets or sets the text trimming behavior to employ when content overflows the content area.  </summary>
            <returns>One of the <see cref="T:System.Windows.TextTrimming" /> values that specifies the text trimming behavior to employ. The default is <see cref="F:System.Windows.TextTrimming.None" />.</returns>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.TextWrapping">
            <summary>Gets or sets how the <see cref="T:System.Windows.Controls.TextBlock" /> should wrap text.  </summary>
            <returns>One of the <see cref="T:System.Windows.TextWrapping" /> values. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</returns>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.SyntaxTree">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.Visual">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.CurrentRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.TextSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.MaxX">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.MaxY">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.Formatter">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.ErrorsList">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.Errors">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.PixelsPerDip">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.EmSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.OutputWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.LineInfos">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.RegionInfoList">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.Typeface">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.UpdateTextSource">
            <summary>
            
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.UpdateFormattedText(System.Windows.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="drawingContext"></param>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.OnNodeUpdated">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeRendererVisual.SourceUpdateInProgress">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.SetFontRenderingEmSize(System.Double)">
            <summary>
            
            </summary>
            <param name="emSize"></param>
        </member>
        <member name="M:AnalysisControls.CodeRendererVisual.DrawLine(AnalysisControls.LineContext)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.CodeToolTipContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeToolTipContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.ComboBoxTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ComboBoxTemplateSelector.SelectTemplate(System.Object,System.Windows.Controls.ItemsControl)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.CommandProgress">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CommandProgress.Content">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Commands.DatabasePopulateCommand">
            <summary>
            DatabasePopulateCommand
            </summary>
        </member>
        <member name="M:AnalysisControls.Commands.DatabasePopulateCommand.PopulateDbAsync(KayMcCormick.Dev.IBaseLibCommand,AnalysisAppLib.IAppDbContext1)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.Commands.DatabasePopulateCommand.Argument">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Commands.DatabasePopulateCommand.ExecuteAsync">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Commands.DatabasePopulateCommand.OnFault(System.AggregateException)">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.Commands.DatabasePopulateCommand.LargeImageSourceKey">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Commands.DatabasePopulateCommand.CanExecute(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.Commands.OpenFileCommand">
            <summary>
            Open file command
            </summary>
        </member>
        <member name="M:AnalysisControls.Commands.OpenFileCommand.#ctor(AnalysisAppLib.IAnalyzeCommand)">
            <summary>
            
            </summary>
            <param name="analyzeCommand"></param>
        </member>
        <member name="P:AnalysisControls.Commands.OpenFileCommand.Argument">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Commands.OpenFileCommand.ExecuteAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Commands.OpenFileCommand.OnFault(System.AggregateException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="P:AnalysisControls.Commands.OpenFileCommand.LargeImageSourceKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Commands.OpenFileCommand.CanExecute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.CompilationControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CompilationControl.CompilationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CompilationControl.Compilation">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.CompilationError">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CompilationError.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.ControlsProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ControlsProvider.#ctor(Autofac.IComponentContext,AnalysisControls.CustomTypes,System.Func{System.Type,System.ComponentModel.ICustomTypeDescriptor})">
            <summary>
            
            </summary>
            <param name="componentContext"></param>
            <param name="customTypes"></param>
            <param name="customFunc"></param>
        </member>
        <member name="M:AnalysisControls.ControlsProvider.GetTypeDescriptor(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.ControlsProvider.IsSupportedType(System.Type)">
            <inheritdoc />
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.Controls.TraceSourcesView" -->
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.ControlView" -->
        <member name="T:AnalysisControls.ControlInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ControlInfo.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ControlInfo.MetadataProps">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ControlInfo.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ControlInfo.Category">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ControlInfo.TabHeader">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.ConversionUtils">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Converters.HierarchyConverter">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.HierarchyConverter.Default">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Converters.HierarchyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts the specified value.</summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">targetType</exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:AnalysisControls.Converters.HierarchyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.Converters.LocationConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Converters.LocationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Converters.LocationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.Converters.ObjectStringTypeConverter">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Converters.ObjectStringTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Converters.ObjectStringTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Converters.ObjectStringTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Converters.ObjectStringTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.Converters.SymbolInfoConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Converters.SymbolInfoConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:AnalysisControls.Converters.SymbolInfoConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:AnalysisControls.Converters.SyntaxNodeInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.Ancestors">
            <summary>The ancestors</summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.AncestorsAndSelf">
            <summary>
            Get ancestors and self.
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.GetFirstToken">
            <summary>
            Get first token.
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.GetLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.GetLastToken">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.GetReference">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.GetText">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.ToFullString">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.ChildNodesAndTokens">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.ChildNodes">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.ChildTokens">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.DescendantNodes">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.DescendantNodesAndSelf">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.DescendantNodesAndTokens">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.DescendantNodesAndTokensAndSelf">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.DescendantTokens">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.DescendantTrivia">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.GetLeadingTrivia">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Converters.SyntaxNodeInfo.Diagnostics">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Converters.SyntaxTokenConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Converters.SyntaxTokenConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Converters.SyntaxTokenConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.Converters.SyntaxTriviaConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Converters.SyntaxTriviaConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Converters.SyntaxTriviaConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.Converters.TokenConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Converters.TokenConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Converters.TokenConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.Converters.SyntaxNodeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Converters.SyntaxNodeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:AnalysisControls.Converters.SyntaxNodeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.Converters.TransformConverter">
            <summary>
                <para>
                    Value converter for CSharp Syntax nodes - performs a JSON
                    serialization after transforming the nodes to a more concise form.
                </para>
                <para></para>
            </summary>
            <seealso cref="T:System.Windows.Data.IValueConverter" />
        </member>
        <member name="M:AnalysisControls.Converters.TransformConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Converters.TransformConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.CurrentOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CurrentOperation.Description">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.CustomControl2" -->
        <member name="P:AnalysisControls.CustomControl2.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomControl2.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CustomControl2.TypeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CustomControl2.TypeChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomControl2.Ancestors">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomControl2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomControl2.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.CustomControl2.PropertyDescriptorCollection">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:AnalysisControls.CustomControl2.Provider" -->
        <member name="P:AnalysisControls.CustomControl2.Descriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomControl2.MeasureOverride(System.Windows.Size)">
            <inheritdoc />
        </member>
        <member name="E:AnalysisControls.CustomControl2.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.CustomControl2.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:AnalysisControls.CustomTextCharacters">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTextCharacters.#ctor(System.String,System.Windows.Media.TextFormatting.TextRunProperties,Microsoft.CodeAnalysis.Text.TextSpan)">
            <summary>
            
            </summary>
            <param name="characterString"></param>
            <param name="textRunProperties"></param>
            <param name="span"></param>
        </member>
        <member name="M:AnalysisControls.CustomTextCharacters.#ctor(System.String,System.Int32,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties,Microsoft.CodeAnalysis.Text.TextSpan)">
            <summary>
            
            </summary>
            <param name="characterString"></param>
            <param name="offsetToFirstChar"></param>
            <param name="length"></param>
            <param name="textRunProperties"></param>
            <param name="span"></param>
        </member>
        <member name="P:AnalysisControls.CustomTextCharacters.Span">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomTextCharacters.Index">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.CustomTextEndOfLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomTextEndOfLine.Span">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.CustomTextEndOfLine.#ctor(System.Int32,Microsoft.CodeAnalysis.Text.TextSpan)">
            <summary>
            
            </summary>
            <param name="length"></param>
            <param name="span"></param>
        </member>
        <member name="M:AnalysisControls.CustomTextEndOfLine.#ctor(System.Int32,System.Windows.Media.TextFormatting.TextRunProperties,Microsoft.CodeAnalysis.Text.TextSpan)">
            <summary>
            
            </summary>
            <param name="length"></param>
            <param name="textRunProperties"></param>
            <param name="span"></param>
        </member>
        <member name="T:AnalysisControls.ICustomTextSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ICustomTextSource.Compilation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ICustomTextSource.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ICustomTextSource.FontRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ICustomTextSource.Node">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ICustomTextSource.Tree">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ICustomTextSource.Rendering">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ICustomTextSource.GetTextRun(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndex"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:AnalysisControls.ICustomTextSource.GetPrecedingText(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndexLimit"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:AnalysisControls.ICustomTextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndex"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:AnalysisControls.ICustomTextSource.BasicProps">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.ICustomTextSource.PropsFor(Microsoft.CodeAnalysis.SyntaxTrivia@,System.String)">
            <summary>
            
            </summary>
            <param name="trivia"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.ICustomTextSource.PropsFor(Microsoft.CodeAnalysis.SyntaxToken,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="text"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:AnalysisControls.CustomTextSource3">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTextSource3.#ctor(System.Double,AnalysisControls.ITypefaceManager)">
            <summary>
            
            </summary>
            <param name="pixelsPerDip"></param>
            <param name="typefaceManager"></param>
        </member>
        <member name="P:AnalysisControls.CustomTextSource3.Compilation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomTextSource3.Length">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTextSource3.GetTextRun(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndex"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:AnalysisControls.CustomTextSource3.GetPrecedingText(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndexLimit"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:AnalysisControls.CustomTextSource3.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndex"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:AnalysisControls.CustomTextSource3.BasicProps">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.CustomTextSource3.PropsFor(Microsoft.CodeAnalysis.SyntaxTrivia@,System.String)">
            <summary>
            
            </summary>
            <param name="trivia"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.CustomTextSource3.FontRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomTextSource3.Node">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomTextSource3.Tree">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTextSource3.PropsFor(Microsoft.CodeAnalysis.SyntaxToken,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="text"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:AnalysisControls.CustomTextSource3.Rendering">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTextSource3.TextInput(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="InsertionPoint"></param>
            <param name="text"></param>
        </member>
        <member name="T:AnalysisControls.CustomToggleButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomToggleButton.OnToggle">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.CustomTreeView">
            <summary>
            
            </summary>
            
        </member>
        <member name="M:AnalysisControls.CustomTreeView.GetContainerForItemOverride">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.CustomTreeViewItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTreeViewItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="F:AnalysisControls.CustomTreeViewItem.ExpandingEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
            <summary>Identifies the <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> routed event. </summary>
        </member>
        <member name="M:AnalysisControls.CustomTreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.CustomTreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:AnalysisControls.CustomTreeViewItem.ExpandAsync">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomTreeViewItem.CanExpandOnInput">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTreeViewItem.Collapse">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTreeViewItem.GetContainerForItemOverride">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.CustomTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomTypes.#ctor(System.Collections.Generic.List{System.Type})">
            <summary>
            
            </summary>
            <param name="kayTypes"></param>
        </member>
        <member name="P:AnalysisControls.CustomTypes.CustomTypeList">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomTypes.ComponentContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.DataLoadStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.DataLoadStrategy.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.DataLoadStrategy.LoadAsync">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.DataLoadStrategy.LoadSync">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.DefaultTypefaceManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.BaselineOffsetProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.BaselineOffset" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.BaselineOffset" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.FontStyleProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.FontStyle" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.FontStyle" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.FontWeightProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.FontWeight" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.FontWeight" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.FontStretchProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.FontStretch" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.FontStretch" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.FontSizeProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.FontSize" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.FontSize" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.ForegroundProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.Foreground" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.Foreground" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.BackgroundProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.Background" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.Background" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.TextDecorationsProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.TextDecorations" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.TextDecorations" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.TextEffectsProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.TextEffects" /> dependency property.</summary>
            <returns>The identifier of the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.TextEffects" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.LineHeightProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.LineHeight" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.LineHeight" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.LineStackingStrategyProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.LineStackingStrategy" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.LineStackingStrategy" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.PaddingProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.Padding" /> dependency property. </summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.Padding" /> dependency property.</returns>
        </member>
        <member name="F:AnalysisControls.DefaultTypefaceManager.TextAlignmentProperty">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.TextAlignment" /> dependency property.</summary>
            <returns>The identifier for the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.TextAlignment" /> dependency property.</returns>
        </member>
        <member name="M:AnalysisControls.DefaultTypefaceManager.GetDefaultTypeface">
            <summary>Identifies the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.TextTrimming" /> dependency property. </summary>
            <returns>The identifier of the <see cref="P:System.Windows.Controls.DefaultTypefaceManager.TextTrimming" /> dependency property.</returns>
        </member>
        <member name="M:AnalysisControls.DefaultTypefaceManager.GetRendering(System.Double,System.Windows.TextAlignment,System.Windows.TextDecorationCollection,System.Windows.Media.Brush,System.Windows.Media.Typeface)">
            <inheritdoc />
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.DevTypeControl" -->
        <member name="T:AnalysisControls.DiagnosticError">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.DiagnosticError.#ctor(Microsoft.CodeAnalysis.Diagnostic)">
            <summary>
            
            </summary>
            <param name="diagnostic"></param>
        </member>
        <member name="T:AnalysisControls.DisplayModeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.DisplayModeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.DisplayModeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MethodDocumentation">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.MethodDocumentation.#ctor(System.String,System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elementId"></param>
            <param name="type"></param>
            <param name="member"></param>
            <param name="parameters"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:AnalysisControls.MethodDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MethodDocumentation.Parameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Returns">
             <summary>
             
             </summary>
            
        </member>
        <member name="M:AnalysisControls.Returns.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Returns.#ctor">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MemberBaseDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.MemberBaseDocumentation._memberName">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.MemberBaseDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MemberBaseDocumentation.#ctor(System.String,System.Type,System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elementId"></param>
            <param name="type"></param>
            <param name="memberName"></param>
            <param name="xmlDocElements"></param>
        </member>
        <member name="M:AnalysisControls.MemberBaseDocumentation.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="P:AnalysisControls.MemberBaseDocumentation.MemberName">
            <summary>
            </summary>
        </member>
        <member name="T:AnalysisControls.FieldDocumentation">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.FieldDocumentation.#ctor(System.String,System.Type,System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elementId"></param>
            <param name="type"></param>
            <param name="memberName"></param>
            <param name="xmlDocElements"></param>
        </member>
        <member name="T:AnalysisControls.PropertyDocumentation">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.PropertyDocumentation.#ctor(System.String,System.Type,System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elementId"></param>
            <param name="type"></param>
            <param name="memberName"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:AnalysisControls.PropertyDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.TypeDocumentation">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.TypeDocumentation.#ctor(System.String,System.Type,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elementId"></param>
            <param name="type"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:AnalysisControls.TypeDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.CodeElementDocumentation">
            <summary>
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeElementDocumentation._type">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CodeElementDocumentation._xmlDoc">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeElementDocumentation.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:AnalysisControls.CodeElementDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeElementDocumentation.ElementId">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeElementDocumentation.Type">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeElementDocumentation.XmlDoc">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeElementDocumentation.NeedsAttention">
            <summary>
            Flag indicating that this documentation element needs attention.
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeElementDocumentation.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.IndexerDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.IndexerDocumentation.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:AnalysisControls.IndexerDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.EventDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.EventDocumentation.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:AnalysisControls.EventDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.EnumMemberDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.EnumMemberDocumentation.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:AnalysisControls.EnumMemberDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.DelegateDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.DelegateDocumentation.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:AnalysisControls.DelegateDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.ConstructorDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ConstructorDocumentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ConstructorDocumentation.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="T:AnalysisControls.XmlDocumentElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.#ctor(System.Collections.Generic.List{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="listImplementation"></param>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.Remove(AnalysisControls.XmlDocElement)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.XmlDocumentElementCollection.SyncRoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.XmlDocumentElementCollection.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.Add(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.Contains(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.Add(AnalysisControls.XmlDocElement)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.Contains(AnalysisControls.XmlDocElement)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.CopyTo(AnalysisControls.XmlDocElement[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.IndexOf(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.Insert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.IndexOf(AnalysisControls.XmlDocElement)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocumentElementCollection.Insert(System.Int32,AnalysisControls.XmlDocElement)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="P:AnalysisControls.XmlDocumentElementCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:AnalysisControls.XmlDocumentElementCollection.IsFixedSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.XmlDocText">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.XmlDocText.#ctor(System.String)">
            <summary>
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:AnalysisControls.XmlDocText.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.XmlDocText.Text">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.XmlDocText.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.XmlDocText.DocumentElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Typeparamref">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Typeparamref.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Typeparamref.#ctor(System.String)">
            <summary>
            </summary>
            <param name="typeParamName"></param>
        </member>
        <member name="P:AnalysisControls.Typeparamref.TypeParamName">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Example">
            <summary>
            According to Sandcastle this is neither block nor inline.
            </summary>
        </member>
        <member name="M:AnalysisControls.Example.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.Example.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Param">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Param.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="name"></param>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.Param.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Param.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.InlineDocElem">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.InlineDocElem.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.InlineDocElem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Anchor">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Anchor.#ctor(System.String,System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="href"></param>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.Anchor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Anchor.Href">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Pre">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Pre.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.Pre.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Em">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Em.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.Em.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Seealso">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Seealso.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.Seealso.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Para">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Para.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.Para.#ctor(AnalysisControls.XmlDocElement[])">
            <summary>
            
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.Para.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Paramref">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Paramref.#ctor(System.String)">
            <summary>
            </summary>
            <param name="paramName"></param>
        </member>
        <member name="M:AnalysisControls.Paramref.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Paramref.ParamName">
            <summary>
            </summary>
        </member>
        <member name="T:AnalysisControls.Code">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Code.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Code.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            </summary>
            <param name="elements"></param>
        </member>
        <member name="T:AnalysisControls.Crossref">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Crossref.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="xRefId"></param>
        </member>
        <member name="M:AnalysisControls.Crossref.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Crossref.XRefId">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.XmlDocElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.XmlDocElement._xmlDocumentElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.XmlDocElement.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.XmlDocElement.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.XmlDocElement.DocumentElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Summary">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Summary.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Summary.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elements"></param>
        </member>
        <member name="T:AnalysisControls.BlockDocElem">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.BlockDocElem.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:AnalysisControls.BlockDocElem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ITypeDocInfo.TypeDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ITypeDocInfo.ConstructorDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ITypeDocInfo.MethodDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ITypeDocInfo.PropertyDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ITypeDocInfo.FieldDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.TypeDocInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TypeDocInfo.TypeDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TypeDocInfo.ConstructorDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TypeDocInfo.MethodDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TypeDocInfo.PropertyDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TypeDocInfo.FieldDocumentation">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.DocInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocInfo.DocNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocInfo.DocIdentifier">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.DocModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.DocModel.CreateInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.DocModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocModel.ContentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocModel.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocModel.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocModel.LastActivationTimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocModel.IsVisible">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocModel.Content">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocModel.ContextualTabGroupHeaders">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.DocumentAddedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocumentAddedEventArgs.Document">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.DocumentModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocumentModel.FilePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocumentModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocumentModel.Project">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocumentModel.Document">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocumentModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocumentModel.DocumentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DocumentModel.Diagnostics">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.DocumentView" -->
        <member name="P:AnalysisControls.DocumentView.Document">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.DragItemAdorner">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.DragItemAdorner.#ctor(System.Windows.UIElement,AnalysisControls.DocModel)">
            <summary>
            
            </summary>
            <param name="adornedElement"></param>
            <param name="document"></param>
        </member>
        <member name="T:AnalysisControls.DragTargetPropertyGrid">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DragTargetPropertyGrid.AllowDrop">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.DragTargetPropertyGrid.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.DummyResourceAdder">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.DummyResourceAdder.AddResource(KayMcCormick.Dev.ResourceNodeInfo)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:AnalysisControls.DynamicObservableCollection">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.EnhancedCodeControl" -->
        <member name="T:AnalysisControls.EnhancedCodeWindow">
            <summary>
            Interaction logic for EnhancedCodeWindow.xaml
            </summary>
            <summary>
            EnhancedCodeWindow
            </summary>
        </member>
        <member name="F:AnalysisControls.EnhancedCodeWindow.CompilationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.EnhancedCodeWindow.Compilation">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:AnalysisControls.EnhancedCodeWindow.IsSelectingProperty" -->
        <member name="P:AnalysisControls.EnhancedCodeWindow.IsSelecting">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.EnhancedCodeWindow.SelectionEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.EnhancedCodeWindow.SelectionEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.EnhancedCodeWindow.NodeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.EnhancedCodeWindow.Node">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.EnhancedCodeWindow.SyntaxTreeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.EnhancedCodeWindow.SyntaxTree">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.EnhancedCodeWindow.ModelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.EnhancedCodeWindow.Model">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.EnhancedCodeWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.ErrorsTextSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ErrorsTextSource.#ctor(System.Double,System.Collections.Generic.IEnumerable{AnalysisControls.CompilationError},AnalysisControls.ITypefaceManager)">
            <summary>
            
            </summary>
            <param name="pixelsPerDip"></param>
            <param name="errors"></param>
        </member>
        <member name="M:AnalysisControls.ErrorsTextSource.GetTextRun(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndex"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:AnalysisControls.ExtractDocCommentsCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ExtractDocCommentsCommand.ProcessSolutionAsync(KayMcCormick.Dev.IBaseLibCommand,System.String)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="SolutionFilePath"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:AnalysisControls.Filter">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Filter.Extension">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Filter.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Filter.Handler">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.FontRendering">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FontRendering.CreateInstance(System.Double,System.Windows.TextAlignment,System.Windows.TextDecorationCollection,System.Windows.Media.Brush,System.Windows.Media.Typeface)">
            <summary>
            
            </summary>
            <param name="emSize"></param>
            <param name="alignment"></param>
            <param name="decorations"></param>
            <param name="textColor"></param>
            <param name="face"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.FontRendering.#ctor(System.Double,System.Windows.TextAlignment,System.Windows.TextDecorationCollection,System.Windows.Media.Brush,System.Windows.Media.Typeface)">
            <summary>
            
            </summary>
            <param name="emSize"></param>
            <param name="alignment"></param>
            <param name="decorations"></param>
            <param name="textColor"></param>
            <param name="face"></param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:AnalysisControls.FontRendering.FontSize">
            <summary>
            
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:AnalysisControls.FontRendering.TextAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FontRendering.TextDecorations">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FontRendering.TextColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FontRendering.Typeface">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.FormattedTextControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.InsertionPointProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.InsertionPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.SourceTextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.SourceText">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.HoverOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.HoverRegionInfoProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.HoverRegionInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.EndInit">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.HoverOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.HoverTokenProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.HoverSymbolProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.HoverSymbol">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.HoverToken">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.HoverSyntaxNodeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.HoverSyntaxNode">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.HoverColumnProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.HoverColumn">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.FormattedTextControl.HoverRowProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.HoverRow">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.CurrentRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.UiLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.TextSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.CreateAndInitTextSource(System.Double,AnalysisControls.ITypefaceManager)">
            <summary>
            
            </summary>
            <param name="pixelsPerDip"></param>
            <param name="typefaceManager"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.MaxX">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.MaxY">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.Errors">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.UpdateTextSource">
            <summary>
            
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.PixelsPerDip">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.EmSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.InsertionLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.InsertionCharacter">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.InsertionRegion">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.ChangingText">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.SetFontFamily">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.Formatter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.UpdateFormattedText">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.OutputWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.LineInfos">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.Infos">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedTextControl.Typeface">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.FormattedTextControl.OnNodeUpdated">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.FormattingHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattingHelper.UpdateFormattedText(System.Double,AnalysisControls.FontRendering@,System.Double,System.Windows.Media.Typeface,System.Windows.Media.DrawingGroup,AnalysisControls.AppTextSource,System.Double,System.Collections.Generic.IList{AnalysisControls.LineInfo},System.Collections.Generic.List{AnalysisControls.RegionInfo},System.Double@,System.Double@,System.Action{System.Windows.Media.TextFormatting.TextLine,AnalysisControls.LineContext},System.Windows.Media.TextFormatting.TextParagraphProperties,AnalysisControls.ILineDrawer)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="currentRendering"></param>
            <param name="_emSize"></param>
            <param name="emSize"></param>
            <param name="typeface"></param>
            <param name="textDest"></param>
            <param name="textStore"></param>
            <param name="pixelsPerDip"></param>
            <param name="lineInfos"></param>
            <param name="infos"></param>
            <param name="maxX"></param>
            <param name="maxY"></param>
            <param name="textLineAction"></param>
            <param name="paragraphProperties"></param>
            <param name="drawer"></param>
        </member>
        <member name="M:AnalysisControls.FormattingHelper.PartialUpdateFormattedText(System.Double,AnalysisControls.FontRendering@,System.Double,System.Windows.Media.Typeface,System.Windows.Media.DrawingGroup,AnalysisControls.AppTextSource,System.Double,System.Collections.Generic.IList{AnalysisControls.LineInfo},System.Collections.Generic.List{AnalysisControls.RegionInfo},System.Double@,System.Double@,System.Action{System.Windows.Media.TextFormatting.TextLine,AnalysisControls.LineContext},System.Windows.Media.DrawingBrush,System.Windows.Rect,System.Windows.Media.TextFormatting.TextFormatter,AnalysisControls.LineContext,System.Windows.Media.TextFormatting.TextParagraphProperties,AnalysisControls.ILineDrawer)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="currentRendering"></param>
            <param name="emSize"></param>
            <param name="typeface"></param>
            <param name="textDest"></param>
            <param name="textStore"></param>
            <param name="pixelsPerDip"></param>
            <param name="lineInfos"></param>
            <param name="infos"></param>
            <param name="maxX"></param>
            <param name="maxY"></param>
            <param name="textLineAction"></param>
            <param name="brush"></param>
            <param name="existingRect"></param>
            <param name="formatter"></param>
            <param name="lineContext"></param>
            <param name="paragraphProperties"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:AnalysisControls.FormattingHelper.HandleTextLine(System.Collections.Generic.List{AnalysisControls.RegionInfo},AnalysisControls.LineContext@,AnalysisControls.LineInfo@,AnalysisControls.ILineDrawer)">
            <summary>
            
            </summary>
            <param name="infos"></param>
            <param name="lineContext"></param>
            <param name="lineInfo"></param>
        </member>
        <member name="M:AnalysisControls.FormattingHelper.UpdateTextSource(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.CSharp.CSharpCompilation,Microsoft.CodeAnalysis.SyntaxTree,System.Double,System.Double,AnalysisControls.ITypefaceManager)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <param name="compilation"></param>
            <param name="syntaxTree"></param>
            <param name="pixelsPerDip"></param>
            <param name="emSize"></param>
            <param name="manager"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:AnalysisControls.GenericTextParagraphProperties">
            <summary>
            Class to implement TextParagraphProperties, used by TextSource
            </summary>
        </member>
        <member name="T:AnalysisControls.GenericTextRunProperties">
            <summary>
            Class used to implement TextRunProperties
            </summary>
        </member>
        <member name="M:AnalysisControls.GenericTextRunProperties.#ctor(System.Windows.Media.Typeface,System.Double,System.Double,System.Double,System.Windows.TextDecorationCollection,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.BaselineAlignment,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="typeface"></param>
            <param name="pixelsPerDip"></param>
            <param name="size"></param>
            <param name="hintingSize"></param>
            <param name="textDecorations"></param>
            <param name="forgroundBrush"></param>
            <param name="backgroundBrush"></param>
            <param name="baselineAlignment"></param>
            <param name="culture"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:AnalysisControls.GenericTextRunProperties.#ctor(AnalysisControls.FontRendering,System.Double)">
            <summary>
            
            </summary>
            <param name="newRender"></param>
            <param name="pixelsPerDip"></param>
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.Typeface">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.FontRenderingEmSize">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.FontHintingEmSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.TextDecorations">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.ForegroundBrush">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.BackgroundBrush">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.BaselineAlignment">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.TypographyProperties">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.TextEffects">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.GenericTextRunProperties.NumberSubstitution">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.GenericTextRunProperties.SetFontRenderingEmSize(System.Double)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.GuidConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.GuidConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.GuidConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.IAppControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.IAppControl.ControlId">
            <summary>
            
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:AnalysisControls.IAppCustomControl">
            <summary>
            Interface marker for custom controls
            </summary>
        </member>
        <member name="T:AnalysisControls.IClientModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.IClientModel.PrimaryRibbon">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.ICustomSpan">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ICustomSpan.Span">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.INodeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.INodeData.Assembly">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.INodeData.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.INodeData.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.INodeData.ExpandedState">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.INodeData.IsExpanded">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.INodeData.DataState">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.INodeData.CreateSubnode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.INodeData.CheckLoadItemsAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.INodeData.LoadResult(AnalysisControls.TempLoadData)">
            <summary>
            
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:AnalysisControls.INodeData.SetIsExpanded(System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AnalysisControls.INodeData.ExpandAsync">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.INodeData.Collapse">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.InputBindingsManager">
            <summary>
                <para>Helper class for wpf explorer</para>
            </summary>
        </member>
        <member name="F:AnalysisControls.InputBindingsManager.UpdatePropertySourceWhenEnterPressedProperty">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.InputBindingsManager.SetUpdatePropertySourceWhenEnterPressed(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            </summary>
            <param name="dp"></param>
            <param name="value"></param>
        </member>
        <member name="M:AnalysisControls.InputBindingsManager.GetUpdatePropertySourceWhenEnterPressed(System.Windows.DependencyObject)">
            <summary>
            </summary>
            <param name="dp"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.Interfaces.INodePanel">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Interfaces.ISpanToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.IReadWriteTextRunProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.IReadWriteTextRunProperties.SetFontRenderingEmSize(System.Double)">
            <summary>
            
            </summary>
            <param name="emSize"></param>
        </member>
        <member name="T:AnalysisControls.IRibbonModelProvider`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AnalysisControls.IRibbonModelProvider`1.ProvideModelItem">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.ITextPropertiesManager">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.ITypefaceManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ITypefaceManager.GetDefaultTypeface">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.ITypefaceManager.GetRendering(System.Double,System.Windows.TextAlignment,System.Windows.TextDecorationCollection,System.Windows.Media.Brush,System.Windows.Media.Typeface)">
            <summary>
            
            </summary>
            <param name="emSize"></param>
            <param name="left"></param>
            <param name="textDecorationCollection"></param>
            <param name="brush"></param>
            <param name="typeface"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.JsonConverters">
            <summary>
                <para>
                    Class to add supported converters for System.Text.Json that
                    incorporate both Code Analyzers / Roslyn and WPF functions.
                </para>
                <para></para>
            </summary>
        </member>
        <member name="M:AnalysisControls.JsonConverters.CreateJsonSerializeOptions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.JsonConverters.AddJsonConverters(System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="jsonSerializerOptions"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.JsonNodeView" -->
        <member name="T:AnalysisControls.JsonSyntaxTokenConverter">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.JsonSyntaxTokenConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.JsonSyntaxTokenConverter.Write(System.Text.Json.Utf8JsonWriter,Microsoft.CodeAnalysis.SyntaxToken,System.Text.Json.JsonSerializerOptions)">
            <summary>
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:AnalysisControls.JsonUserControl">
            <summary>
            Interaction logic for JsonUserControl.xaml
            </summary>
            <summary>
            JsonUserControl
            </summary>
        </member>
        <member name="M:AnalysisControls.JsonUserControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.KindsConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.KindsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.KindsConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.LineContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.LineContext.#ctor(System.Double,System.Action{System.Windows.Media.TextFormatting.TextLine},System.Windows.Media.TextFormatting.TextLine,System.Windows.Point,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="maxX"></param>
            <param name="textLineAction"></param>
            <param name="myTextLine"></param>
            <param name="lineOriginPoint"></param>
            <param name="curCellRow"></param>
            <param name="lineNumber"></param>
            <param name="textStorePosition"></param>
        </member>
        <member name="P:AnalysisControls.LineContext.MaxX">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineContext.TextLineAction">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineContext.MyTextLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineContext.LineOriginPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineContext.CurCellRow">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineContext.LineNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineContext.TextStorePosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineContext.LineInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineContext.LineParts">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.LineInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineInfo.LineNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineInfo.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineInfo.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineInfo.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineInfo.Regions">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineInfo.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LineInfo.Origin">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.LogEventInstancesControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.CurrentRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.UiLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.Store">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.MaxX">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.MaxY">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.LogEventInstancesControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.LogEventInstancesControl.UpdateTextSource">
            <summary>
            
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.PixelsPerDip">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.EmSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.LogEventInstancesControl.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.LogEventInstancesControl.SetFontFamily">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.LogEventInstancesControl.UpdateFormattedText(System.Boolean)">
            <summary>
            
            </summary>
            <param name="updatedTabs"></param>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.OutputWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.LineInfos">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.Infos">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.LogEventInstancesControl.Typeface">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.LogEventsSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.LogEventsSource.AppendRange(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="eNewItems"></param>
        </member>
        <member name="P:AnalysisControls.LogEventsSource.levelBrushes">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Main1">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1.MeasureOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="constraint"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Main1.ArrangeOverride(System.Windows.Size)">
            <inheritdoc />
        </member>
        <member name="F:AnalysisControls.Main1.AnchorablesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1.Anchorables">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.Main1.DocumentsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1.Documents">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1.DockingManagerLayoutRoot">
            <summary>
            Provides access to DockingManager's <see cref="T:AvalonDock.Layout.LayoutRoot"/> model object.
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:AnalysisControls.Main1.ViewModel">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.Main1Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.ActiveContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.ContextualTabGroups">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.SelectVsInstance">
            <summary>
            
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:AnalysisControls.Main1Model.TrySelectVsInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.Main1Model.Documents">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.Anchorables">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.#ctor(System.Reactive.Subjects.ReplaySubject{Microsoft.CodeAnalysis.Workspace},System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="replay"></param>
        </member>
        <member name="M:AnalysisControls.Main1Model.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.CreateWorkspace">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.Workspace">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.Diagnostics">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.Main1Model.ProjectedAddedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.Main1Model.DocumentAddedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.WorkspaceOnWorkspaceChanged(System.Object,Microsoft.CodeAnalysis.WorkspaceChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:AnalysisControls.Main1Model.HierarchyRoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.View">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.SelectedProject">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.Main1Model.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:AnalysisControls.Main1Model.CreateSolution">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.CreateProject">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.AddDocument(AnalysisControls.ProjectModel,System.String)">
            <summary>
            
            </summary>
            <param name="viewModelSelectedProject"></param>
            <param name="file"></param>
        </member>
        <member name="P:AnalysisControls.Main1Model.CurrentOperation">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.LoadSolutionAsync(System.String)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Main1Model.LoadProjectAsync(System.String)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.Main1Model.Messages">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.ProjectLoadProgress">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.WorkspaceView">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Main1Model.ClientViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Main1Model.OpenSolutionItem(System.Object)">
            <summary>
            
            </summary>
            <param name="eParameter"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Main1Model.BrowseSymbols(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Main1Model.OnDocumentAddedEvent(AnalysisControls.DocumentAddedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:AnalysisControls.Main1Model.Del1">
             <summary>
             
             </summary>
             <param name="contextSyntaxTree"></param>
             <param name="cSharpCompilation"></param>
             <param name="file"></param>
             <returns></returns>
            
        </member>
        <member name="M:AnalysisControls.Main1Model.OnExecutedPaste(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AnalysisControls.Main1Model.ProcessDrop(System.Windows.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.DiagnosticNodeModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.DiagnosticNodeModel.CreateInstance(AnalysisControls.PathModelKind)">
            <summary>
            
            </summary>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.DiagnosticNodeModel.#ctor(AnalysisControls.PathModelKind)">
            <summary>
            
            </summary>
            <param name="kind"></param>
        </member>
        <member name="M:AnalysisControls.DiagnosticNodeModel.Add(AnalysisControls.PathModel)">
            <summary>
            
            </summary>
            <param name="docs"></param>
        </member>
        <member name="P:AnalysisControls.DiagnosticNodeModel.Diagnostic">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.DiagnosticNodeModel.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.MessagesModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MessagesModel.Messages">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.MetaLazyTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MetaLazyTypeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MiscCommands">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MiscCommands.TypesViewModel_Stage1(AnalysisAppLib.ITypesViewModel@,AnalysisAppLib.IAppDbContext1,AnalysisAppLib.AppDbContextHelper,System.Func{AnalysisAppLib.ITypesViewModel},System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="unknown"></param>
            <param name="db"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:AnalysisControls.MiscCommands.BuildTypeViewAsync(KayMcCormick.Dev.IBaseLibCommand,AnalysisAppLib.IAppDbContext1,Autofac.ILifetimeScope,AnalysisAppLib.AppDbContextHelper,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="context"></param>
            <param name="helper"></param>
            <param name="contextScope"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:AnalysisControls.MiscCommands.WriteModelToDatabase(AnalysisAppLib.ITypesViewModel,AnalysisAppLib.IAppDbContext1,AnalysisAppLib.AppDbContextHelper)">
            <summary>
            
            </summary>
            <param name="typesViewModel"></param>
            <param name="db"></param>
            <param name="helper"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:AnalysisControls.MyRibbon">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbon.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbon.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbon.OnVisualParentChanged(System.Windows.DependencyObject)">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.MyRibbon.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbon.GetContainerForItemOverride">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.MyRibbon.EnableProxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyRibbon.MyContextualTabGroupItemsControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.MyRibbonQuickAccessToolBar">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonMenuItem.GetContainerForItemOverride">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonApplicationMenu.IsItemItsOwnContainerOverride(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyRibbonApplicationMenuItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonApplicationMenuItem.IsItemItsOwnContainerOverride(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonApplicationMenuItem.GetContainerForItemOverride">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyRibbonComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyRibbonComboBox.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonComboBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonComboBox.IsItemItsOwnContainerOverride(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonComboBox.GetContainerForItemOverride">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.MyRibbonComboBox.ControlId">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyRibbonContextualTabGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonContextualTabGroup.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyRibbonContextualTabGroup.MyRibbon">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyRibbonContextualTabGroup.ControlId">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyRibbonContextualTabGroupItemsControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonContextualTabGroupItemsControl.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.MyRibbonControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyRibbonControl.ControlId">
            <summary>
            
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:AnalysisControls.MyRibbonControl.ParentLayoutInvalidated(System.Windows.UIElement)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonControl.HitTestCore(System.Windows.Media.PointHitTestParameters)">
            <summary>
            
            </summary>
            <param name="hitTestParameters"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.MyRibbonControl.ToString">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyRibbonGallery">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyRibbonGallery.ControlId">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.MyRibbonGalleryCategory">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonGalleryCategory.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonGalleryCategory.GetContainerForItemOverride">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.MyRibbonGalleryCategory.ControlId">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyRibbonGalleryItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.MyRibbonGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonGroup.#cctor">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonGroup.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:AnalysisControls.MyRibbonMenuButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonMenuButton.GetContainerForItemOverride">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonMenuButton.IsItemItsOwnContainerOverride(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyRibbonTab">
            <summary>
            
            </summary>
            
        </member>
        <member name="M:AnalysisControls.MyRibbonTab.#cctor">
            <summary>Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonTab.ContextualTabGroup" /> dependency property.</summary>
        </member>
        <member name="P:AnalysisControls.MyRibbonTab.MyContextualTabGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyRibbonTab.MyRibbon">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonTab.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonTab.GetContainerForItemOverride">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonTab.OnSelected(System.Windows.RoutedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonTab.OnUnselected(System.Windows.RoutedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.MyRibbonTab.OnHeaderChanged(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.MyRibbonTab.ControlId">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyRibbonTabHeader">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.MyRibbonTabHeaderItemsControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.MyRibbonTabHeaderItemsControl.GetContainerForItemOverride">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.MyXDescriptor`2">
            <summary>
            
            </summary>
            <typeparam name="TInput"></typeparam>
            <typeparam name="TReturn"></typeparam>
        </member>
        <member name="M:AnalysisControls.MyXDescriptor`2.#ctor(System.String,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="attrs"></param>
        </member>
        <member name="M:AnalysisControls.MyXDescriptor`2.#ctor(System.ComponentModel.MemberDescriptor)">
            <summary>
            
            </summary>
            <param name="descr"></param>
        </member>
        <member name="M:AnalysisControls.MyXDescriptor`2.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="descr"></param>
            <param name="attrs"></param>
        </member>
        <member name="T:AnalysisControls.MyXDescriptor`2.GetDelegate">
            <summary>
            
            </summary>
            <param name="instance"></param>
            <typeparam name="TReturn"></typeparam>
            <typeparam name="TInput"></typeparam>
        </member>
        <member name="M:AnalysisControls.MyXDescriptor`2.GetValue(System.Object)">
            <summary>
            
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.MyXDescriptor`2.Converter">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyXDescriptor`2.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.NodeBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.NodeBase.GetScheduler(System.Windows.Threading.Dispatcher)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.NodeBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodeBase.Assembly">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodeBase.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodeBase.ResourceLocation">
            <summary>
            
            </summary>
            
        </member>
        <member name="P:AnalysisControls.NodeBase.ReferencedAssembly">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodeBase.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodeBase.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodeBase.ExpandedState">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.NodeBase.CheckLoadItems(AnalysisControls.NodeDataLoadState@)">
            <summary>
            
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.NodeBase.IsExpanded">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.NodeBase.SetIsExpanded(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.NodeBase.ExpandAsync">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.NodeBase.Collapse">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.NodeBase.SetExpandedAction(System.Threading.Tasks.Task{AnalysisControls.TempLoadData},System.Object)">
            <summary>
            
            </summary>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="M:AnalysisControls.NodeBase.CheckLoadItemsAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.NodeBase.LoadResult(AnalysisControls.TempLoadData)">
            <inheritdoc />
        </member>
        <member name="E:AnalysisControls.NodeBase.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.NodeBase.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:AnalysisControls.NodeBase.CreateSubnode">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.NodeBase.DataState">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodeBase.Dispatcher">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodeBase.LoadStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.NodeDataLoadState">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.NodeDataLoadState.NoAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.NodeDataLoadState.DataLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.NodeDataLoadState.RequiresAsync">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.NodeDataLoadState.LoadFailure">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.NodeExpandedState">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.NodeExpandedState.Indeterminate">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.NodeExpandedState.Collapsed">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.NodeExpandedState.Expanded">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.NodesPlaceHolder">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodesPlaceHolder.Assembly">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.NodesPlaceHolder.Name">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.NodesPlaceHolder.Items">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.NodesPlaceHolder.ExpandedState">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.NodesPlaceHolder.IsExpanded">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.NodesPlaceHolder.SetIsExpanded(System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:AnalysisControls.NodesPlaceHolder.Collapse">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.NodesPlaceHolder.DataState">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.NodesPlaceHolder.CreateSubnode">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.NodesPlaceHolder.CheckLoadItemsAsync">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.NodesPlaceHolder.LoadResult(AnalysisControls.TempLoadData)">
            <summary>
            
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:AnalysisControls.PageFunction1">
            <summary>
            Interaction logic for PageFunction1.xaml
            </summary>
            <summary>
            PageFunction1
            </summary>
        </member>
        <member name="M:AnalysisControls.PageFunction1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.PageFunction1.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.CodeGenCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CodeGenCommand.PocoPrefix">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeGenCommand.CodeGenAsync(KayMcCormick.Dev.IBaseLibCommand,Autofac.ILifetimeScope)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="lifetimeScope"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.CodeGenCommand.CodeGen(KayMcCormick.Dev.IBaseLibCommand,Autofac.ILifetimeScope)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="lifetimeScope"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:AnalysisControls.CodeGenCommand.WriteDebug">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeGenCommand.CreatePoco(AnalysisAppLib.Syntax.AppTypeInfoKey,AnalysisAppLib.Syntax.AppTypeInfo)">
            <summary>
            
            </summary>
            <param name="mapKey"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.CodeGenCommand.Argument">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeGenCommand.ExecuteAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.CodeGenCommand.Scope">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CodeGenCommand.OnFault(System.AggregateException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:AnalysisControls.PathModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.PathModel.#ctor(AnalysisControls.PathModelKind)">
            <summary>
            
            </summary>
            <param name="kind"></param>
        </member>
        <member name="P:AnalysisControls.PathModel.IsVirtualNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.PathModel.Entries">
             <summary>
            
             
             </summary>
        </member>
        <member name="P:AnalysisControls.PathModel.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.PathModel.Item">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.PathModel.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.PathModel.ElementName">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.PathModel.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.PathModel.Add(AnalysisControls.PathModel)">
            <summary>
            
            </summary>
            <param name="docs"></param>
        </member>
        <member name="T:AnalysisControls.ProjectAddedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectAddedEventArgs.Model">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.ProjectModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ProjectModel.#ctor(Microsoft.CodeAnalysis.Workspace)">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.DocumentsPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.Documents">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.FilePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.Solution">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.Project">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.ProjectModel.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.RootPathInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.Diagnostics">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ProjectModel.Diag">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ProjectModel.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:AnalysisControls.ListPathModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ListPathModel.#ctor(AnalysisControls.PathModelKind)">
            <summary>
            
            </summary>
            <param name="virtual"></param>
        </member>
        <member name="M:AnalysisControls.ListPathModel.Add(AnalysisControls.PathModel)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.Properties.RibbonResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AnalysisControls.Properties.RibbonResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AnalysisControls.Properties.RibbonResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AnalysisControls.Properties.RibbonResources.ContextualTabGroupHeader_CodeAnalysis">
            <summary>
              Looks up a localized string similar to Code Analysis.
            </summary>
        </member>
        <member name="T:AnalysisControls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AnalysisControls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AnalysisControls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AnalysisControls.Properties.Resources.Program_Parse">
             <summary>
               Looks up a localized string similar to using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Threading.Tasks;
            using NLog ;
            
            namespace LogTest
            {
                public static class Program
                {
                    private static readonly  Logger Logger = LogManager.GetCurrentClassLogger();
                    static void Main(string[] args) {
                        Action&lt;string&gt; xx = Logger.Info;
                        xx(&quot;hi&quot;);
                        Logger.Debug ( $&quot;Hello {1}&quot; ) ;
                        try {
                            string xxx = null;
                            [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:AnalysisControls.QATItemTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.QATItemTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RandoWindow">
            <summary>
            Interaction logic for RandoWindow.xaml
            </summary>
            <summary>
            RandoWindow
            </summary>
        </member>
        <member name="M:AnalysisControls.RandoWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.RectConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RectConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RectConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RegionInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.SyntaxToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.SyntaxNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.Trivia">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.TextRun">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.BoundingRect">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.Characters">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.Line">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.NextRegion">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RegionInfo.PrevRegion">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RegionInfo.#ctor(System.Windows.Media.TextFormatting.TextRun,System.Windows.Rect,System.Collections.Generic.List{AnalysisControls.CharacterCell})">
            <summary>
            
            </summary>
            <param name="textRun"></param>
            <param name="boundingRect"></param>
            <param name="characters"></param>
        </member>
        <member name="E:AnalysisControls.RegionInfo.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonBuilder1">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonBuilder1.RibbonModelBuilder(AnalysisControls.RibbonModel.RibbonModelApplicationMenu,System.Collections.Generic.IEnumerable{AnalysisControls.RibbonModel.RibbonModelContextualTabGroup},System.Collections.Generic.IEnumerable{AnalysisControls.RibbonModel.RibbonModelTab},System.Collections.Generic.IEnumerable{AnalysisControls.IRibbonModelProvider{AnalysisControls.RibbonModel.RibbonModelTab}},System.Collections.Generic.IEnumerable{AnalysisControls.IRibbonModelProvider{AnalysisControls.RibbonModel.RibbonModelContextualTabGroup}},System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="appMenu"></param>
            <param name="ribbonModelContextualTabGroups"></param>
            <param name="tabs"></param>
            <param name="tabProviders"></param>
            <param name="_options"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RibbonDebugUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonDebugUtils.OnPropertyChanged(System.String,System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="LoggingIdentifier"></param>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="M:AnalysisControls.RibbonDebugUtils.DumpPropertySource(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            
            </summary>
            <param name="do"></param>
            <param name="prop"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModelRadioButton">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModelRadioButton.IsChecked">
            <summary>
            
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.RibbonModelView" -->
        <member name="T:AnalysisControls.RibbonModel.AppCommandTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.AppCommandTypeConverter.#ctor(System.Collections.Generic.IEnumerable{Autofac.Features.Metadata.Meta{System.Lazy{KayMcCormick.Lib.Wpf.Command.IAppCommand}}})">
            <summary>
            
            </summary>
            <param name="commands"></param>
        </member>
        <member name="M:AnalysisControls.RibbonModel.AppCommandTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RibbonModel.ControlKind">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.ButtonControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RadioButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonControlGroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonGalleryCategory">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonGalleryItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonGallery">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonTextBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonSplitButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonMenuItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonMenuButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.RibbonModel.ControlKind.RibbonGroup">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.Definition.InfrastructureTab">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.Definition.InfrastructureTab.ClientModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.Definition.InfrastructureTab.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.RibbonModel.RibbonModelGroup})">
            <summary>
            
            </summary>
            <param name="groups"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModel.Definition.AssembliesTypesGroup">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.Definition.ManagementTab">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.Definition.ManagementTab.#ctor(System.Collections.Generic.IEnumerable{Autofac.Features.Metadata.Meta{AnalysisControls.RibbonModel.RibbonModelGroup}},AnalysisAppLib.ITypesViewModel)">
            <summary>
            
            </summary>
            <param name="groups"></param>
            <param name="typesViewModel"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModel.Definition.AssembliesRibbonTab">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.Definition.AssembliesRibbonTab.#ctor(System.Collections.Generic.IEnumerable{Autofac.Features.Metadata.Meta{AnalysisControls.RibbonModel.RibbonModelGroup}})">
            <summary>
            
            </summary>
            <param name="groups"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModel.GroupItemCollectionEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.GroupItemCollectionEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.GroupItemCollectionEditor.CreateNewItemTypes">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.IRibbonModelGroupItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelAppMenuElementCollection">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelControlGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelControlGroup.Items">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelControlGroup.CreateRibbonComboBox(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelControlGroup.CreateRibbonComboBox_(System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelControlGroup.CreateRibbonSplitButton_(System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelControlGroup.CreateButton(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelControlGroup.CreateTextBox(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelControlGroup.CreateRibbonTwoLineText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelControlGroup.CreateRibbonToggleButton(System.String)">
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelDropZone">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelDropZone.Fill">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelDropZoneImpl">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelDropZoneImpl.OnDrop(System.Windows.DragEventArgs,System.Windows.IInputElement)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelGroupItemCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelItemTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelQuickAccessToolBar">
            <summary>
            <see cref="T:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar"/>
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelQuickAccessToolBar.Items">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelSeparator">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelToggleButton">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelToggleButton.IsChecked">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelTwoLineText">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTwoLineText.PathData">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTwoLineText.PathFill">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTwoLineText.PathStroke">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTwoLineText.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTwoLineText.HasTwoLines">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.ContextualTabGroups.CodeAnalysis">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.ContextualTabGroups.CodeAnalysis.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.PrimaryRibbonModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.PrimaryRibbonModel.AppMenu">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.PrimaryRibbonModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.PrimaryRibbonModel.CreateGallery">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.RibbonModel.PrimaryRibbonModel.RibbonItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.PrimaryRibbonModel.QuickAccessToolBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.PrimaryRibbonModel.ContextualTabGroups">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.PrimaryRibbonModel.CreateGalleryCategory(System.String)">
            <summary>
            
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.PrimaryRibbonModel.CreateGalleryCategory(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="gallery"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.PrimaryRibbonModel.CreateGalleryItem(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="cat1"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.PrimaryRibbonModel.CreateModelGallery">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelApplicationMenu">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelAppMenuElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelAppMenuElement.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelAppMenuElement.KeyTip">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelAppMenuElement.ImageSource">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelAppMenuItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelAppSplitMenuItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelContextualTabGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelContextualTabGroup.Visibility">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelContextualTabGroup.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelContextualTabGroup.RibbonModel">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.RibbonModel.RibbonModelContextualTabGroup.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="E:AnalysisControls.RibbonModel.RibbonModelContextualTabGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelContextualTabGroup.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelGallery">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelGallery.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelGallery.Items">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGallery.CreateGalleryCategory(System.String)">
            <summary>
            
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelGalleryCategory">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGalleryCategory.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelGalleryCategory.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelGalleryCategory.Content">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGalleryCategory.CreateGalleryItem(System.Object)">
            <summary>
            
            </summary>
            <param name="content"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelGalleryItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelGalleryItem.Content">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelGalleryItem.Kind">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.Label">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.AppCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.Command">
            <summary>
            s
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.CommandTarget">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.CommandParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.LargeImageSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.SmallImageSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelItem.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.MaxWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.MaxHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.MinWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.MinHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.Height">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.RibbonModel.RibbonModelItem.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItem.StringLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelItem.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelItemButton">
            <summary>
            &lt;HierarchicalDataTemplate DataType="{x:Type ribbonModel:RibbonModelItemButton}"&gt;
            &lt;RibbonButton Label="{Binding Label}" Command="{Binding Command}" CommandParameter="{Binding CommandParameter}" CommandTarget="{Binding CommandTarget}"&gt;&lt;/RibbonButton&gt;
            &lt;/HierarchicalDataTemplate&gt;
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItemButton.Kind">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelItemButton.ToString">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.DisplayableAppCommandGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.DisplayableAppCommandGroup.#ctor(System.Collections.Generic.IEnumerable{KayMcCormick.Lib.Wpf.Command.IDisplayableAppCommand})">
            <summary>
            
            </summary>
            <param name="commands"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModel.BaseLibCommandGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.BaseLibCommandGroup.#ctor(System.Collections.Generic.IEnumerable{Autofac.Features.Metadata.Meta{System.Lazy{KayMcCormick.Dev.IBaseLibCommand}}})">
            <summary>
            
            </summary>
            <param name="commands"></param>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelItemComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItemComboBox.Items">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelItemComboBox.CreateGallery">
            <summary>
            
            </summary>
            <param name="combo"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelItemMenuButton">
            <summary>
            
            </summary>
            
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItemMenuButton.Items">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelItemMenuButton.CreateMenuItem(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelItemSplitButton">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItemSplitButton.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItemSplitButton.Kind">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelItemTextBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItemTextBox.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelItemTextBox.Kind">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelMenuItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelMenuItem.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelMenuItem.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelMenuItem.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelMenuItem.CreateMenuItem(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelMenuItem.Kind">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelTab">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTab.Visibility">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTab.ContextualTabGroupHeader">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:AnalysisControls.RibbonModel.RibbonModelTab.Header" -->
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTab.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelTab.RibbonModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelTab.CreateGroup(System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelTab.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:AnalysisControls.RibbonModel.RibbonModelTab.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelTab.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelTab.BeginInit">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelTab.EndInit">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonModelGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.ToString">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelGroup.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonModelGroup.Items">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateRibbonMenuButton(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateRibbonComboBox(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateRibbonComboBox_(System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateRibbonSplitButton_(System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateButton(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateTextBox(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateRibbonTwoLineText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateRibbonToggleButton(System.String)">
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonModelGroup.CreateControlGroup">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RibbonModel.RibbonTabHeaderAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonModel.RibbonTabHeaderAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="tabHeader"></param>
        </member>
        <member name="P:AnalysisControls.RibbonModel.RibbonTabHeaderAttribute.TabHeader">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonModel.DerpTab">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RibbonModel.DerpTab.BeginInit">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RibbonModel.DerpTab.EndInit">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.FunTabProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.FunTabProvider.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.IRibbonModelProvider{AnalysisControls.RibbonModel.RibbonModelGroup}})">
            <summary>
            
            </summary>
            <param name="provs"></param>
        </member>
        <member name="M:AnalysisControls.FunTabProvider.ProvideModelItem">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonViewGroupProviderBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonViewGroupProviderBase.ProvideModelItem">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.RibbonContextualTabGroupProviderBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonContextualTabGroupProviderBase.ProvideModelItem">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.CodeAnalysisContextualTabGroupProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RibbonViewGroupProviderBaseImpl">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RibbonViewGroupProviderBaseImpl.ProvideModelItem">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.Ribb.Definition.SuperGRoup">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Ribb.Definition.SuperGRoup.ProvideModelItem">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.RootNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.RootNode.CheckLoadItems(AnalysisControls.NodeDataLoadState@)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.RootNode.LoadStrategy">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RootNode.CreateSubnode">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RootNode.CheckLoadItemsAsync">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.RootNode.LoadResult(AnalysisControls.TempLoadData)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.Subnode">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Subnode.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Subnode.ResourceName">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Subnode.CheckLoadItems(AnalysisControls.NodeDataLoadState@)">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.Subnode.LoadStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Subnode.CreateSubnode">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Subnode.CheckLoadItemsAsync">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.Subnode.LoadResult(AnalysisControls.TempLoadData)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.SubnodeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SubnodeData.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SubnodeData.ResourceName">
            <summary>
            
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:AnalysisControls.SubnodeData.Assembly">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.ModelCalendar">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ModelCalendar.SelectedDate">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.RWindow">
            <summary>
            Interaction logic for RWindow.xaml
            </summary>
            <summary>
            RWindow
            </summary>
        </member>
        <member name="M:AnalysisControls.RWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.SemanticControl1">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.SolutionModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SolutionModel.#ctor(Microsoft.CodeAnalysis.Workspace)">
            <summary>
            
            </summary>
            <param name="workspace"></param>
        </member>
        <member name="T:AnalysisControls.SourceTextExtension">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SourceTextExtension.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SourceTextExtension.FileSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SourceTextExtension.ProvideValue(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.StringObservableCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.SymbolTextControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.CurrentRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.UiLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.Store">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.MaxX">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.MaxY">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SymbolTextControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SymbolTextControl.UpdateTextSource">
            <summary>
            
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.PixelsPerDip">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.EmSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SymbolTextControl.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.SymbolTextControl.SetFontFamily">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.OutputWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.LineInfos">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.Infos">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextControl.Typeface">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.SymbolTextSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SymbolTextSource.#ctor(System.Double)">
            <summary>
            
            </summary>
            <param name="pixelsPerDip"></param>
        </member>
        <member name="P:AnalysisControls.SymbolTextSource.Compilation">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SymbolTextSource.GetTextRun(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndex"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:AnalysisControls.SymbolTextSource.GetPrecedingText(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndexLimit"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:AnalysisControls.SymbolTextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)">
            <summary>
            
            </summary>
            <param name="textSourceCharacterIndex"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:AnalysisControls.SymbolTextSource.BasicProps">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.SymbolTextSource.FontRendering">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextSource.Node">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextSource.SymbolDisplayFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SymbolTextSource.Tree">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SymbolTextSource.PropsFor(Microsoft.CodeAnalysis.SyntaxToken,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="text"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.SyntaxFactoryPanel" -->
        <member name="T:AnalysisControls.SyntaxNodeControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.SyntaxNodeControl.IsSelectingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxNodeControl.IsSelecting">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.SyntaxNodeControl.SelectionEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxNodeControl.SelectionEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.SyntaxNodeControl.NodeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxNodeControl.Node">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.SyntaxNodeControl.SyntaxTreeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxNodeControl.SyntaxTree">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.SyntaxNodeControl.ModelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxNodeControl.Model">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.SyntaxNodeCustomTextSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SyntaxNodeCustomTextSource.#ctor(System.Double,AnalysisControls.ITypefaceManager)">
            <summary>
            
            </summary>
            <param name="pixelsPerDip"></param>
            <param name="typefaceManager"></param>
        </member>
        <member name="T:AnalysisControls.SyntaxNodeDepth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxNodeDepth.Margin">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxNodeDepth.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxNodeDepth.SyntaxNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.SyntaxNodeProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SyntaxNodeProperties.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SyntaxNodeProperties.GetProperties(System.Type)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.SyntaxNodeProperties.HandleType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.SyntaxPanel" -->
        <member name="T:AnalysisControls.AppTypeInfoKinds">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.SyntaxTokenTextCharacters">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.SyntaxTokenTextCharacters.ToString">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.SyntaxTokenTextCharacters.#ctor(System.String,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            
            </summary>
            <param name="characterString"></param>
            <param name="length"></param>
            <param name="textRunProperties"></param>
            <param name="token"></param>
            <param name="node"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:AnalysisControls.SyntaxTreeCollection">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.SyntaxTypeComboBox" -->
        <member name="F:AnalysisControls.SyntaxTypeComboBox.DisplayModeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.SyntaxTypeComboBox.DisplayMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.SyntaxTypeDisplayMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.TaskState`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AnalysisControls.TaskState`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="subnodeData"></param>
        </member>
        <member name="P:AnalysisControls.TaskState`1.Node">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.TemplateWindow">
            <summary>
            Interaction logic for TemplateWindow.xaml
            </summary>
            <summary>
            TemplateWindow
            </summary>
        </member>
        <member name="M:AnalysisControls.TemplateWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.TempLoadData">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TempLoadData.Node">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TempLoadData.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TempLoadData.Stream">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TempLoadData.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TempLoadData.MemoryStream">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TempLoadData.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.TempLoadData.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.TempLoadData.ToString">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.TestConverter2">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.TestConverter2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.TestConverter2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.TextCaret">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.TextPropertiesManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.TextPropertiesManager.GetBasicTextRunProperties(System.Double,AnalysisControls.FontRendering)">
            <summary>
            
            </summary>
            <param name="pixelsPerDip"></param>
            <param name="fontRendering"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.TextSourceService.CreateAndInitTextSource(System.Collections.Generic.List{AnalysisControls.CompilationError},System.Double,System.Double,AnalysisControls.ITypefaceManager,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.CSharp.CSharpCompilation)">
            <summary>
            
            </summary>
            <param name="compilationErrors"></param>
            <param name="emSize"></param>
            <param name="pixelsPerDip"></param>
            <param name="typefaceManager"></param>
            <param name="syntaxNode"></param>
            <param name="syntaxTree"></param>
            <param name="compilation"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.TypesViewModelFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.TypesViewModelFactory.CreateModel">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.UiConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.UiConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.UiConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.UiElementTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.UiElementTypeConverter.#ctor(Autofac.ILifetimeScope)">
            <summary>
            
            </summary>
            <param name="scope"></param>
        </member>
        <member name="M:AnalysisControls.UiElementTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.UiElementTypeConverter.ConvertToUiElement(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.UiElementTypeConverter.ControlForValueS(System.Collections.IEnumerable,System.Int32)">
            <summary>
            
            </summary>
            <param name="values"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.UiElementTypeConverter.ControlForValue(System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.UserControl1">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.UserControl1.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:AnalysisControls.UserControl1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.UserControl1.AllowDrop">
            <inheritdoc />
        </member>
        <member name="F:AnalysisControls.UserControl1.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:AnalysisControls.UserControl1.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:AnalysisControls.UserControl1.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:AnalysisControls.VisibileIfNotVisible">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.VisibileIfNotVisible.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.VisibileIfNotVisible.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.VisualTreeView" -->
        <member name="M:AnalysisControls.VisualTreeNode.ExpandAsync">
            <inheritdoc />
        </member>
        <member name="T:AnalysisControls.WorkspaceControl">
            <summary>
                Interaction logic for WorkspaceControl.xaml
            </summary>
            <summary>
            WorkspaceControl
            </summary>
        </member>
        <member name="M:AnalysisControls.WorkspaceControl.#ctor(AnalysisControls.WorkspaceViewModel)">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.WorkspaceControl.ViewModel">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.WorkspaceControl.ViewTitle">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.WorkspaceControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.WorkspaceViewModel">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceViewModel.ProjectCollectionView">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceViewModel.Workspace">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceViewModel.CurrentProjectId">
            <summary>
            </summary>
        </member>
        <member name="E:AnalysisControls.WorkspaceViewModel.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.WorkspaceViewModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.WorkspaceViewModel.CreateWorkspace">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.WorkspaceViewModel.AddDocument(System.String)">
            <summary>
            </summary>
            <param name="fileName"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:AnalysisControls.WorkspaceMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceMessage.Severity">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceMessage.ProjectName">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceMessage.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceMessage.Source">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.WorkspaceMessageSeverity">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceMessageSeverity.Informational">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceMessageSeverity.LoadProgress">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceMessageSeverity.Warning">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceMessageSeverity.Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.WorkspaceView">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceView.SelectedDocumentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceView.SelectedDocumentChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceView.SelectedProjectChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceView.SelectedDocument">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.WorkspaceView.SelectedDocumentChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.WorkspaceView.SelectedProjectChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.WorkspaceView.OnSelectedDocumentChanged(System.Windows.RoutedPropertyChangedEventArgs{AnalysisControls.DocumentModel})">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:AnalysisControls.WorkspaceView.SolutionsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceView.Solutions">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.WorkspaceView.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceView.SelectedSolutionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.WorkspaceView.SelectedSolution">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.WorkspaceView.SelectedProjectProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.WorkspaceView.OnSelectedProjectChanged(System.Windows.RoutedPropertyChangedEventArgs{AnalysisControls.ProjectModel})">
            <summary>
            
            </summary>
            <param name="e2"></param>
        </member>
        <member name="P:AnalysisControls.WorkspaceView.SelectedProject">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.XamlFuncs">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.XmlDocElements">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.HandleName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.HandleName(System.Xml.Linq.XElement,System.String)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.Selector(System.Xml.Linq.XNode)">
            <summary>
            </summary>
            <param name="node"></param>
            <returns></returns>
            <exception cref="T:AnalysisAppLib.UnrecognizedElementException"></exception>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.HandleXDocument(System.Xml.Linq.XDocument)">
            <summary>
            
            </summary>
            <param name="xdoc"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.DocMembers(System.Xml.XmlDocument)">
            <summary>
            </summary>
            <param name="doc"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.DocMembers(System.Xml.Linq.XDocument)">
            <summary>
            
            </summary>
            <param name="doc"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.HandleDocElementNode(System.Xml.Linq.XDocument,System.String,Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax,Microsoft.CodeAnalysis.ISymbol)">
            <summary>
            
            </summary>
            <param name="xDocument"></param>
            <param name="elementId"></param>
            <param name="member"></param>
            <param name="declared"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.CreateCodeDocumentationElementType(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax,System.String)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <param name="elementId"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.TransformParsePocoType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.XmlDocElements.SubstituteType(AnalysisAppLib.Syntax.SyntaxFieldInfo,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},AnalysisAppLib.ITypesViewModel)">
            <summary>
            Called when generating PropertyDeclarationSyntax nodes for
            generated Poco-style properties.
            </summary>
            <param name="tField"></param>
            <param name="candidateTypeSyntax"></param>
            <param name="collectionMap"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.Quoteinline">
            <summary>
            Quote inline block XML documentation element.
            </summary>
        </member>
        <member name="M:AnalysisControls.Quoteinline.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Quoteinline.#ctor(System.Collections.Generic.IEnumerable{AnalysisControls.XmlDocElement})">
            <summary>
            
            </summary>
            <param name="select"></param>
        </member>
        <member name="T:AnalysisControls.JsonSimpleFrameworkElementConverterFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.JsonSimpleFrameworkElementConverterFactory.CanConvert(System.Type)">
            <summary>
            
            </summary>
            <param name="typeToConvert"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.JsonSimpleFrameworkElementConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.ProvideCompilationUnitSyntax">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.ProvideCompilationUnitSyntax.ProvideValue(System.IServiceProvider)">
            <summary>
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.PythonControl">
            <summary>
                Interaction logic for PythonControl.xaml
            </summary>
            <summary>
            PythonControl
            </summary>
        </member>
        <member name="M:AnalysisControls.PythonControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.PythonControl.#ctor(Autofac.ILifetimeScope,AnalysisControls.ViewModel.PythonViewModel)">
            <summary>
            
            </summary>
            <param name="scope"></param>
            <param name="viewModel"></param>
        </member>
        <member name="P:AnalysisControls.PythonControl.ViewModel">
            <summary>
            Retreive the view model.
            </summary>
        </member>
        <member name="M:AnalysisControls.PythonControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.Scripting.IPythonVariable">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Scripting.IPythonVariable.VariableName">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Scripting.IPythonVariable.GetVariableValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.Scripting.MyEvtArgs`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AnalysisControls.Scripting.MyEvtArgs`1.#ctor(`0)">
            <summary>
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:AnalysisControls.Scripting.MyEvtArgs`1.Value">
            <summary>
            </summary>
        </member>
        <member name="T:AnalysisControls.ViewModel.PythonViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.ViewModel.PythonViewModel.InputLineProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.ViewModel.PythonViewModel.LinesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.ViewModel.PythonViewModel.ResultsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonViewModel.#ctor(Autofac.ILifetimeScope,System.Collections.Generic.IEnumerable{AnalysisControls.Scripting.IPythonVariable})">
            <summary>
            
            </summary>
            <param name="scope"></param>
            <param name="vars"></param>
        </member>
        <member name="P:AnalysisControls.ViewModel.PythonViewModel.LinesCollectionView">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.PythonViewModel.Scope">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.PythonViewModel.FlowDocument">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.PythonViewModel.Lines">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.PythonViewModel.InputLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.PythonViewModel.Results">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.ViewModel.PythonViewModel.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonViewModel.BeginInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonViewModel.EndInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonViewModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonViewModel.TakeLine(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonViewModel.HistoryUp">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonViewModel.HistoryDown">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonViewModel.ExecutePythonScript(System.String)">
            <summary>
            
            </summary>
            <param name="textEditorText"></param>
        </member>
        <member name="T:AnalysisControls.ViewModel.PythonVariable">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.PythonVariable.VariableName">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.PythonVariable.ValueLambda">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.PythonVariable.GetVariableValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.ViewModel.MyEvtArgs`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AnalysisControls.ViewModel.MyEvtArgs`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.MyEvtArgs`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AnalysisControls.ViewModel.NullStream">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.NullStream.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.NullStream.CanSeek">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.NullStream.CanWrite">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.NullStream.Flush">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.NullStream.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.NullStream.Position">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.NullStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.ViewModel.NullStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            
            </summary>
            <param name="offset"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.ViewModel.NullStream.SetLength(System.Int64)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AnalysisControls.ViewModel.NullStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="T:AnalysisControls.ViewModel.EventRaisingStreamWriter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.EventRaisingStreamWriter.#ctor(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:AnalysisControls.ViewModel.EventRaisingStreamWriter.Write(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AnalysisControls.ViewModel.TypesViewModel">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.#ctor(System.Collections.Generic.List{AnalysisAppLib.Syntax.AppTypeInfo})">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.LoadDoc">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.Root">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.ShowBordersIsChecked">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.HierarchyColors">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.DocumentCollection">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.Map">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.StructureRoot">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.DocInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.GetAppTypeInfo(System.Object)">
            <summary>
            
            </summary>
            <param name="identifier"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.CollectTypeInfos(System.Type,AnalysisAppLib.Syntax.AppTypeInfo,System.Int32)">
            <summary>
            Discover information about the given Syntax Node class and all children recursively, depth-first.
            </summary>
            <param name="clrSyntaxNodeType"></param>
            <param name="parentTypeInfo"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="E:AnalysisControls.ViewModel.TypesViewModel.PropertyChanged">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.BeginInit">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.EndInit">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.LoadSyntaxFactoryDocs(System.Collections.Generic.Dictionary{System.Type,AnalysisControls.TypeDocInfo})">
            <summary>
            
            </summary>
            <param name="docs"></param>
            
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.DetailFields">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.PopulateFieldTypes(AnalysisAppLib.Syntax.AppTypeInfo)">
            <summary>
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.LoadTypeInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.IsInitialized">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.InitializationDateTime">
            <summary>
                An approximate time as to when the view model was initialized and/or
                populated with extended information.
            </summary>
        </member>
        <member name="P:AnalysisControls.ViewModel.TypesViewModel.Map2">
            <summary>
            
            </summary>
        </member>
        <member name="E:AnalysisControls.ViewModel.TypesViewModel.Initialized">
            <inheritdoc />
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.CollectionMap">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.ViewModel.TypesViewModel.GetAppTypeInfos">
            <summary>
            Get all app type infos
            </summary>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.FormattedCode2">
            <summary>
                Interaction logic for FormattedCode.xaml
            </summary>
            <summary>
            FormattedCode2
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedCode2.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedCode2.SourceCode">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedCode2.SyntaxTree">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedCode2.Model">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.FormattedCode2.CompilationUnitSyntax">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedCode2.AddToken(System.UInt16,System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="rawKind"></param>
            <param name="text"></param>
            <param name="newLine"></param>
        </member>
        <member name="M:AnalysisControls.FormattedCode2.AddTrivia(System.Int32,System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="rawKind"></param>
            <param name="text"></param>
            <param name="newLine"></param>
        </member>
        <member name="M:AnalysisControls.FormattedCode2.NewLine">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedCode2.StartNode(Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AnalysisControls.FormattedCode2.EndNode(Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AnalysisControls.FormattedCode2.Refresh">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.FormattedCode2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.MyFlowDocumentScrollViewer">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.MyFlowDocumentScrollViewer._scrollViewer">
            <summary>
                Backing store for the <see cref="P:AnalysisControls.MyFlowDocumentScrollViewer.ScrollViewer" /> property.
            </summary>
        </member>
        <member name="P:AnalysisControls.MyFlowDocumentScrollViewer.DoOverrideMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.MyFlowDocumentScrollViewer.ScrollViewer">
            <summary>
                Gets the scroll viewer contained within the FlowDocumentScrollViewer
                control
            </summary>
        </member>
        <member name="M:AnalysisControls.MyFlowDocumentScrollViewer.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="visualAdded"></param>
            <param name="visualRemoved"></param>
        </member>
        <member name="M:AnalysisControls.MyFlowDocumentScrollViewer.MeasureOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="T:AnalysisControls.Views.ProjectBrowser">
            <summary>
                Interaction logic for ProjectBrowser.xaml
            </summary>
            <summary>
            ProjectBrowser
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.ProjectBrowser.#ctor(AnalysisAppLib.Project.IProjectBrowserViewModel)">
            <summary>
            </summary>
            <param name="viewModel"></param>
        </member>
        <member name="P:AnalysisControls.Views.ProjectBrowser.ViewModel">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.Views.ProjectBrowser.ViewTitle">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.ProjectBrowser.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.Views.SyntaxPanel">
            <summary>
                Interaction logic for SyntaxPanel.xaml
            </summary>
            <summary>
            SyntaxPanel
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.SyntaxPanel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.SyntaxPanel.#ctor(AnalysisAppLib.ViewModel.ISyntaxPanelViewModel)">
            <summary>
            
            </summary>
            <param name="viewModel"></param>
        </member>
        <member name="E:AnalysisControls.Views.SyntaxPanel.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Views.SyntaxPanel.ViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.Views.SyntaxPanel.ViewTitle">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.SyntaxPanel.EndInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.SyntaxPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.Views.TypesView">
            <summary>
                Interaction logic for Types.xaml
            </summary>
            <summary>
            TypesView
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.TypesView.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.TypesView.#ctor(AnalysisAppLib.ITypesViewModel)">
            <summary>
            </summary>
            <param name="viewModel"></param>
        </member>
        <member name="E:AnalysisControls.Views.TypesView.PropertyChanged">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.Views.TypesView.ViewModel">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.Views.TypesView.ViewTitle">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.TypesView.OnApplyTemplate">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.TypesView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.Views.TestViewWithTitle">
            <summary>
            TestViewWithTitle
            </summary>
        </member>
        <member name="M:AnalysisControls.Views.TestViewWithTitle.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.SpanToolTip">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.SpanToolTip.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:AnalysisControls.SpanToolTip.Panel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.SpanToolTip.Add(System.Windows.UIElement)">
            <summary>
            
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:AnalysisControls.SpanToolTip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:AnalysisControls.StatusBarItemContentTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.StatusBarItemContentTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.SymbolControl" -->
        <member name="P:AnalysisControls.SymbolControl.Symbol">
            <summary>
            
            </summary>
        </member>
        <member name="T:AnalysisControls.Token">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Token.#ctor(System.Int32,System.String,System.Windows.Media.SolidColorBrush,System.Boolean)">
            <summary>
            
            </summary>
            <param name="rawKind"></param>
            <param name="text"></param>
            <param name="solidColorBrush"></param>
            <param name="newLine"></param>
        </member>
        <member name="M:AnalysisControls.Token.MeasureCore(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Token.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="drawingContext"></param>
        </member>
        <member name="T:AnalysisControls.Visitor3">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Visitor3.#ctor(System.Windows.Documents.FlowDocument,AnalysisControls.MyFlowDocumentScrollViewer)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="flowViewer"></param>
        </member>
        <member name="P:AnalysisControls.Visitor3.FlowViewer">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Visitor3.DefaultVisitAsync(Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Visitor3.Visit(Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:AnalysisControls.Visitor3.Styles">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.Visitor3.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)">
            <summary>
            
            </summary>
            <param name="token"></param>
        </member>
        <member name="T:AnalysisControls.Visitor4">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Visitor4.#ctor(System.Threading.Tasks.TaskScheduler,System.Threading.SynchronizationContext,AnalysisAppLib.ICodeRenderer)">
            <summary>
            </summary>
            <param name="t"></param>
            <param name="ctx"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:AnalysisControls.Visitor4.DefaultVisitAsync(Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AnalysisControls.Visitor4.Visit(Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            </summary>
            <param name="node"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:AnalysisControls.Visitor4.LineStart">
            <summary>
            </summary>
        </member>
        <member name="M:AnalysisControls.Visitor4.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)">
            <summary>
            </summary>
            <param name="token"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AnalysisControls.CustomControl1" -->
        <member name="F:AnalysisControls.CustomControl1.RootItemsSourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CustomControl1.RootItemsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:AnalysisControls.CustomControl1.FactoryMethodsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomControl1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AnalysisControls.CustomControl1.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="P:AnalysisControls.CustomControl1.FactoryMethods">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomControl1.RootItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:AnalysisControls.CustomControl1.RootItemsSource">
            <summary>
            
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
